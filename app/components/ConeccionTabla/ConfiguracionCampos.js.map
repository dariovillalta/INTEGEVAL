{"version":3,"sources":["components/ConeccionTabla/ConfiguracionCampos.js"],"names":["campos","nombre","tablas","funciones","ConfiguracionCampos","props","state","camposDeTabla","errorCreacionCampo","campo","descripcion","mostrar","errorModificarCampo","mensajeModal","mostrarMensaje","mensajeConfirmado","esError","esConfirmar","titulo","mensaje","banderaMetodoInit","idElementoSelec","indiceX","loadFields","bind","insertField","updateFieldsConfirmation","updateField","deleteFieldsConfirmation","deleteField","dismissFieldNewError","dismissFieldEditError","dismissMessageModal","confirmMessageModal","showSuccesMessage","transaction","sql","Transaction","pool","begin","err","rolledBack","on","aborted","request","Request","query","idTablaSeleccionada","result","console","log","rollback","commit","setState","recordset","idTabla","campoNombre","$","val","tipoCampo","tablaCampo","funcionCampo","guardarCampo","is","isNaN","toString","length","undefined","id","x","index","splice","errorCreacionTabla","localeCompare","copiaID","deleteTable","indiceY","self","setTimeout","showConfigurationComponent","retornoSeleccionTabla","margin","fontFamily","color","nombreTablaSeleccionada","map","k","display","i","ID","width","alignItems","justifyContent","padding","tabla","campoSelect","funcion","tipo","guardar","deleteVariable","height","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport sql from 'mssql';\n\nimport InlineEdit from '../InlineEdit.js';\nimport ErrorMessage from '../ErrorMessage.js';\nimport MessageModal from '../MessageModal.js';\n\nconst campos = [ {nombre: \"varchar\"}, {nombre: \"bit\"}, {nombre: \"date\"}, {nombre: \"int\"}, {nombre: \"decimal\"} ];\nconst tablas = [ {nombre: \"Cliente\"}, {nombre: \"Préstamo\"}, {nombre: \"Pagos\"}, {nombre: \"PlanPagos\"} ];\nconst funciones = [ {nombre: \"Identificador\"}, {nombre: \"Nombre Cliente\"}, {nombre: \"Otro\"} ];\n//let funciones = [ {funcion: \"idCliente\", texto: \"ID de Cliente\"}, {funcion: \"fecha\", texto: \"fecha\"}, {nombre: \"date\"}, {nombre: \"int\"} ];\n\nexport default class ConfiguracionCampos extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            camposDeTabla: [],\n            errorCreacionCampo: {campo: \"\", descripcion: \"\", mostrar: false},\n            errorModificarCampo: {campo: \"\", descripcion: \"\", mostrar: false},\n            mensajeModal: {mostrarMensaje: false, mensajeConfirmado: false, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: -1, indiceX: -1}\n        }\n        this.loadFields = this.loadFields.bind(this);\n        this.insertField = this.insertField.bind(this);\n        this.updateFieldsConfirmation = this.updateFieldsConfirmation.bind(this);\n        this.updateField = this.updateField.bind(this);\n        this.deleteFieldsConfirmation = this.deleteFieldsConfirmation.bind(this);\n        this.deleteField = this.deleteField.bind(this);\n        this.dismissFieldNewError = this.dismissFieldNewError.bind(this);\n        this.dismissFieldEditError = this.dismissFieldEditError.bind(this);\n        this.dismissMessageModal = this.dismissMessageModal.bind(this);\n        this.confirmMessageModal = this.confirmMessageModal.bind(this);\n        this.showSuccesMessage = this.showSuccesMessage.bind(this);\n    }\n    /* mensajeModal <- de state\n        //mostrarMensaje:bandera para mostrar modal mensaje en pantalla\n        //mensajeConfirmado:retorno del modal mensaje si fue conf\n        //esError:bandera para ver que tipo de modal mensaje mostrar\n        //esConfirmar:bandera para ver que tipo de modal mensaje mostrar\n        //titulo:titulo del modal\n        //mensaje:mensaje del modal\n        //banderaMetodoInit:variable para ver a que metodo ir cuando regresa de confirmar el modal\n        //idElementoSelec:id del elemento que mostro el modal mensaje\n        //indiceX:posicion de la tabla en el arreglo que mostro el modal mensaje\n        //indiceY:posicion del campo en el arreglo de tablas que mostro el modal mensaje\n    */\n\n    componentDidMount() {\n        this.loadFields();\n    }\n\n    loadFields() {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Campos where tablaID = \"+this.props.idTablaSeleccionada, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        this.setState({\n                            camposDeTabla: result.recordset\n                        });\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    insertField() {\n        let idTabla = this.props.idTablaSeleccionada;\n        let campoNombre = $(\"#campoNombre\").val();\n        let tipoCampo = $(\"#campoTipo\").val();\n        let tablaCampo = $(\"#campoTabla\").val();\n        let funcionCampo = $(\"#campoFuncion\").val();\n        let guardarCampo;\n        if ($(\"#campoGuardar\").is(':checked'))\n            guardarCampo = true;\n        else\n            guardarCampo = false;\n        if(!isNaN(idTabla) && idTabla.toString().length > 0) {\n            if(campoNombre.length > 0 && campoNombre.length < 41) {\n                if(tablaCampo.length > 0 && tablaCampo.length < 16) {\n                    if(funcionCampo.length > 0 && funcionCampo.length < 16) {\n                        if(tipoCampo.length > 0 && tipoCampo.length < 26) {\n                            if(guardarCampo != undefined) {\n                                this.setState({\n                                    errorCreacionCampo: {campo: \"\", descripcion: \"\", mostrar: false}\n                                });\n                                const transaction = new sql.Transaction( this.props.pool );\n                                transaction.begin(err => {\n                                    var rolledBack = false;\n                                    transaction.on('rollback', aborted => {\n                                        rolledBack = true;\n                                    });\n                                    const request = new sql.Request(transaction);\n                                    request.query(\"insert into Campos (tablaID, nombre, tipo, tabla, funcion, guardar) values (\"+idTabla+\",'\"+campoNombre+\"','\"+tipoCampo+\"','\"+tablaCampo+\"','\"+funcionCampo+\"','\"+guardarCampo+\"')\", (err, result) => {\n                                        if (err) {\n                                            if (!rolledBack) {\n                                                console.log(err);\n                                                transaction.rollback(err => {\n                                                });\n                                            }\n                                        } else {\n                                            transaction.commit(err => {\n                                                this.loadFields();\n                                                this.setState({\n                                                    mensajeModal: {mostrarMensaje: true, mensajeConfirmado: this.state.mensajeModal.mostrarMensaje, esError: false, esConfirmar: false, titulo: \"Exito\", mensaje: \"Campo creado con éxito.\", banderaMetodoInit: \"\", idElementoSelec: -1, indiceX: -1}\n                                                });\n                                                this.showSuccesMessage(\"Exito\", \"Campo creado con éxito.\");\n                                                /* mensajeModal: {mostrarMensaje: false, mensajeConfirmado: true, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: -1, indiceX: -1, indiceY: -1} */\n                                            });\n                                        }\n                                    });\n                                }); // fin transaction\n                            } else {\n                                let campo = \"Guardar Campo\";\n                                let descripcion;\n                                if(guardarCampo.length == 0)\n                                    descripcion = \"El campo debe ser ingresado.\";\n                                this.setState({\n                                    errorCreacionCampo: {campo: campo, descripcion: descripcion, mostrar: true}\n                                });\n                            }\n                        } else {\n                            let campo = \"Tipo de Campo\";\n                            let descripcion;\n                            if(tipoCampo.length == 0)\n                                descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                            else\n                                descripcion = \"El campo debe tener una longitud menor a 26.\";\n                            this.setState({\n                                errorCreacionCampo: {campo: campo, descripcion: descripcion, mostrar: true}\n                            });\n                        }\n                    } else {\n                        let campo = \"Función del Campo\";\n                        let descripcion;\n                        if(funcionCampo.length == 0)\n                            descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                        else\n                            descripcion = \"El campo debe tener una longitud menor a 16.\";\n                        this.setState({\n                            errorCreacionCampo: {campo: campo, descripcion: descripcion, mostrar: true}\n                        });\n                    }\n                } else {\n                    let campo = \"Tabla del Campo\";\n                    let descripcion;\n                    if(tablaCampo.length == 0)\n                        descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                    else\n                        descripcion = \"El campo debe tener una longitud menor a 16.\";\n                    this.setState({\n                        errorCreacionCampo: {campo: campo, descripcion: descripcion, mostrar: true}\n                    });\n                }\n            } else {\n                let campo = \"Nombre de Campo\";\n                let descripcion;\n                if(campoNombre.length == 0)\n                    descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                else\n                    descripcion = \"El campo debe tener una longitud menor a 41.\";\n                this.setState({\n                    errorCreacionCampo: {campo: campo, descripcion: descripcion, mostrar: true}\n                });\n            }\n        } else {\n            let campo = \"ID de tabla/conección\";\n            let descripcion = \"Ingrese un número válido.\";\n            this.setState({\n                errorCreacionCampo: {campo: campo, descripcion: descripcion, mostrar: true}\n            });\n        }\n    }\n\n    updateFieldsConfirmation(id, x) {\n        this.setState({\n            mensajeModal: {mostrarMensaje: true, mensajeConfirmado: false, esError: false, esConfirmar: true, titulo: \"Confirmación\", mensaje: \"Esta seguro que desea modificar el campo?\", banderaMetodoInit: \"goUpdField\", idElementoSelec: id, indiceX: x}\n        });\n    }\n\n    updateField(id, index) {\n        let idTabla = this.props.idTablaSeleccionada;\n        let campoNombre;\n        if($(\"#campoNombre\"+index).length > 0) {\n            campoNombre = $(\"#campoNombre\"+index).val();\n        } else {\n            campoNombre = this.state.camposDeTabla[index].nombre;\n        }\n        let tablaCampo = $(\"#campoTabla\"+index).val();\n        let funcionCampo = $(\"#campoFuncion\"+index).val();\n        let tipoCampo = $(\"#campoTipo\"+index).val();\n        let guardarCampo;\n        if ($(\"#campoGuardar\"+index).is(':checked'))\n            guardarCampo = true;\n        else\n            guardarCampo = false;\n        if(!isNaN(idTabla) && idTabla.toString().length > 0) {\n            if(campoNombre.length > 0 && campoNombre.length < 41) {\n                if(tablaCampo.length > 0 && tablaCampo.length < 16) {\n                    if(funcionCampo.length > 0 && funcionCampo.length < 16) {\n                        if(tipoCampo.length > 0 && tipoCampo.length < 26) {\n                            if(guardarCampo != undefined) {\n                                this.setState({\n                                    errorModificarCampo: {campo: \"\", descripcion: \"\", mostrar: false}\n                                });\n                                const transaction = new sql.Transaction( this.props.pool );\n                                transaction.begin(err => {\n                                    var rolledBack = false;\n                                    transaction.on('rollback', aborted => {\n                                        rolledBack = true;\n                                    });\n                                    const request = new sql.Request(transaction);\n                                    request.query(\"update Campos set tablaID = \"+idTabla+\", nombre = '\"+campoNombre+\"', tipo = '\"+tipoCampo+\"', guardar = '\"+guardarCampo+\"', tabla = '\"+tablaCampo+\"', funcion = '\"+funcionCampo+\"' where ID = \"+id, (err, result) => {\n                                        if (err) {\n                                            if (!rolledBack) {\n                                                console.log(err);\n                                                this.setState({\n                                                    mensajeModal: {mostrarMensaje: false, mensajeConfirmado: true, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX}\n                                                });\n                                                transaction.rollback(err => {\n                                                });\n                                            }\n                                        } else {\n                                            transaction.commit(err => {\n                                                // 1. Make a shallow copy of the items\n                                                //let campos = [...this.state.camposDeTabla];\n                                                // 2. Make a shallow copy of the item you want to mutate\n                                                //let campo = [...campos[index]];\n                                                // 3. Replace the property you're intested in\n                                                //campo = {ID: campo.ID, idTabla: idTabla, nombre: campoNombre, tipo: tipoCampo, guardar: guardarCampo};\n                                                // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\n                                                //campos[index] = campo;\n                                                // 5. Set the state to our new copy\n                                                this.loadFields();\n                                                this.setState({\n                                                    mensajeModal: {mostrarMensaje: false, mensajeConfirmado: true, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX}\n                                                });\n                                                this.showSuccesMessage(\"Exito\", \"Campo modificado con éxito.\");\n                                            });\n                                        }\n                                    });\n                                }); // fin transaction\n                            } else {\n                                let campo = \"Guardar Campo\";\n                                let descripcion;\n                                if(guardarCampo.length == 0)\n                                    descripcion = \"El campo debe ser ingresado.\";\n                                this.setState({\n                                    errorModificarCampo: {campo: campo, descripcion: descripcion, mostrar: true},\n                                    mensajeModal: {mostrarMensaje: false, mensajeConfirmado: true, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX}\n                                });\n                                /*this.setState({\n                                    mensajeModal: {mostrarMensaje: false, mensajeConfirmado: true, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX, indiceY: this.state.mensajeModal.indiceY}\n                                });*/\n                            }\n                        } else {\n                            let campo = \"Tipo de Campo\";\n                            let descripcion;\n                            if(tipoCampo.length == 0)\n                                descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                            else\n                                descripcion = \"El campo debe tener una longitud menor a 26.\";\n                            this.setState({\n                                errorModificarCampo: {campo: campo, descripcion: descripcion, mostrar: true},\n                                mensajeModal: {mostrarMensaje: false, mensajeConfirmado: true, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX}\n                            });\n                            /*this.setState({\n                                mensajeModal: {mostrarMensaje: false, mensajeConfirmado: true, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX, indiceY: this.state.mensajeModal.indiceY}\n                            });*/\n                        }\n                    } else {\n                        let campo = \"Función del Campo\";\n                        let descripcion;\n                        if(funcionCampo.length == 0)\n                            descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                        else\n                            descripcion = \"El campo debe tener una longitud menor a 16.\";\n                        this.setState({\n                            errorModificarCampo: {campo: campo, descripcion: descripcion, mostrar: true},\n                            mensajeModal: {mostrarMensaje: false, mensajeConfirmado: true, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX}\n                        });\n                        /*this.setState({\n                            mensajeModal: {mostrarMensaje: false, mensajeConfirmado: true, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX, indiceY: this.state.mensajeModal.indiceY}\n                        });*/\n                    }\n                } else {\n                    let campo = \"Tabla del Campo\";\n                    let descripcion;\n                    if(tablaCampo.length == 0)\n                        descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                    else\n                        descripcion = \"El campo debe tener una longitud menor a 16.\";\n                    this.setState({\n                        errorModificarCampo: {campo: campo, descripcion: descripcion, mostrar: true},\n                        mensajeModal: {mostrarMensaje: false, mensajeConfirmado: true, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX}\n                    });\n                    /*this.setState({\n                        mensajeModal: {mostrarMensaje: false, mensajeConfirmado: true, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX, indiceY: this.state.mensajeModal.indiceY}\n                    });*/\n                }\n            } else {\n                let campo = \"Nombre de Campo\";\n                let descripcion;\n                if(campoNombre.length == 0)\n                    descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                else\n                    descripcion = \"El campo debe tener una longitud menor a 41.\";\n                this.setState({\n                    errorModificarCampo: {campo: campo, descripcion: descripcion, mostrar: true},\n                    mensajeModal: {mostrarMensaje: false, mensajeConfirmado: true, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX}\n                });\n                /*this.setState({\n                    mensajeModal: {mostrarMensaje: false, mensajeConfirmado: true, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX, indiceY: this.state.mensajeModal.indiceY}\n                });*/\n            }\n        } else {\n            let campo = \"ID de nombre de tabla/conección\";\n            let descripcion = \"Ingrese un número válido.\";\n            this.setState({\n                errorModificarCampo: {campo: campo, descripcion: descripcion, mostrar: true},\n                mensajeModal: {mostrarMensaje: false, mensajeConfirmado: true, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX}\n            });\n            /*this.setState({\n                mensajeModal: {mostrarMensaje: false, mensajeConfirmado: true, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX, indiceY: this.state.mensajeModal.indiceY}\n            });*/\n        }\n    }\n\n    deleteFieldsConfirmation(id, x) {\n        this.setState({\n            mensajeModal: {mostrarMensaje: true, mensajeConfirmado: false, esError: false, esConfirmar: true, titulo: \"Confirmación\", mensaje: \"Esta seguro que desea eliminar el campo?\", banderaMetodoInit: \"goDelField\", idElementoSelec: id, indiceX: x}\n        });\n    }\n\n    deleteField(id) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"delete from Campos where ID = \"+id, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        this.setState({\n                            mensajeModal: {mostrarMensaje: false, mensajeConfirmado: true, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX}\n                        });\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        let campos = [...this.state.camposDeTabla];\n                        campos.splice(this.state.mensajeModal.indiceX, 1);\n                        //this.loadTables();\n                        this.setState({\n                            camposDeTabla: campos,\n                            mensajeModal: {mostrarMensaje: false, mensajeConfirmado: true, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX}\n                        });\n                        this.showSuccesMessage(\"Exito\", \"Campo eliminado con éxito.\");\n                        /*this.setState({\n                            camposDeTabla: quitando tabla,\n                            mensajeModal: limpiando variables del modal\n                        });*/\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n\n    /*======_______====== ======_______======   MENSAJES ERROR DE CAMPOS    ======_______====== ======_______======*/\n    /*======_______======                                                                       ======_______======*/\n    /*======_______======                                                                       ======_______======*/\n    /*======_______====== ======_______====== ====_____====  ====_____====  ======_______====== ======_______======*/\n\n    dismissTableNewError() {\n        this.setState({\n            errorCreacionTabla: {campo: \"\", descripcion: \"\", mostrar: false}\n        });\n    }\n\n    dismissFieldNewError() {\n        this.setState({\n            errorCreacionCampo: {campo: \"\", descripcion: \"\", mostrar: false}\n        });\n    }\n\n    dismissFieldEditError() {\n        this.setState({\n            errorModificarCampo: {campo: \"\", descripcion: \"\", mostrar: false}\n        });\n    }\n\n    /*======_______====== ======_______======   MENSAJES MODAL    ======_______====== ======_______======*/\n    /*======_______======                                                             ======_______======*/\n    /*======_______======                                                             ======_______======*/\n    /*======_______====== ======_______====== ==_____==  ==___==  ======_______====== ======_______======*/\n\n    dismissMessageModal() {\n        this.setState({\n            mensajeModal: {mostrarMensaje: false, mensajeConfirmado: false, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: -1, indiceX: -1}\n        });\n    }\n\n    confirmMessageModal() {\n        if(this.state.mensajeModal.banderaMetodoInit.localeCompare(\"goDelTable\") == 0) {\n            let copiaID = this.state.mensajeModal.idElementoSelec;\n            this.deleteTable(copiaID);\n        } else if(this.state.mensajeModal.banderaMetodoInit.localeCompare(\"goDelField\") == 0) {\n            let copiaID = this.state.mensajeModal.idElementoSelec;\n            this.deleteField(copiaID);\n        } else if(this.state.mensajeModal.banderaMetodoInit.localeCompare(\"goUpdField\") == 0) {\n            let copiaID = this.state.mensajeModal.idElementoSelec;\n            this.updateField(copiaID, this.state.mensajeModal.indiceX, this.state.mensajeModal.indiceY);\n        }\n    }\n\n    showSuccesMessage(titulo, mensaje) {\n        this.setState({\n            mensajeModal: {mostrarMensaje: true, mensajeConfirmado: false, esError: false, esConfirmar: false, titulo: titulo, mensaje: mensaje, banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX}\n        });\n        let self = this;\n        setTimeout(function(){\n            self.setState({\n                mensajeModal: {mostrarMensaje: false, mensajeConfirmado: false, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: self.state.mensajeModal.idElementoSelec, indiceX: self.state.mensajeModal.indiceX}\n            });\n        }, 850);\n    }\n\n    render() {\n        return (\n            <div>\n                <div className={\"row\"}>\n                    <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                        <div className={\"page-header\"}>\n                            <h2 className={\"pageheader-title\"}>Configuraci&oacute;n</h2>\n                            <div className={\"page-breadcrumb\"}>\n                                <nav aria-label=\"breadcrumb\">\n                                    <ol className={\"breadcrumb\"}>\n                                        <li className={\"breadcrumb-item\"} aria-current=\"page\" onClick={this.props.showConfigurationComponent}><a href=\"#\" className={\"breadcrumb-link\"}>Configuraci&oacute;n</a></li>\n                                        <li className={\"breadcrumb-item\"} aria-current=\"page\" onClick={this.props.retornoSeleccionTabla}><a href=\"#\" className={\"breadcrumb-link\"}>Tablas</a></li>\n                                        <li className={\"breadcrumb-item active\"} aria-current=\"page\">Campos</li>\n                                    </ol>\n                                </nav>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={\"border-top alert alert-primary\"} style={{margin: \"3% 0%\"}}>\n                    <div className={\"row\"}>\n                        <div className={\"form-group col-xl-6 col-6\"}>\n                            <h4 className={\"col-form-label text-center\"}>Tabla</h4>\n                            <h4 style={{fontFamily: 'Circular Std Medium', color: \"#71748d\"}} className={\"alert-heading\"} >{this.props.nombreTablaSeleccionada}</h4>\n                        </div>\n                        <div className={\"form-group col-xl-6 col-6\"}>\n                            <h4 className={\"col-form-label text-center\"}>Nombre de Columna</h4>\n                            <input id={\"campoNombre\"} type=\"text\" className={\"form-control\"}/>\n                        </div>\n                    </div>\n                    <div className={\"row\"}>\n                        <div className={\"form-group col-xl-6 col-6\"}>\n                            <h4 className={\"col-form-label text-center\"}>Objeto</h4>\n                            <select id={\"campoTabla\"} className={\"form-control\"} /*onChange={this.checkFieldType.bind(this)}*/>\n                                <option value=\"\" key=\"0\">Seleccione a que objeto pertenece el campo...</option>\n                                {tablas.map((campo, k) =>\n                                    <option value={campo.nombre} key={k}>{campo.nombre}</option>\n                                )}\n                            </select>\n                        </div>\n                        <div className={\"form-group col-xl-6 col-6\"}>\n                            <h4 className={\"col-form-label text-center\"}>Función de Variable</h4>\n                            <select id={\"campoFuncion\"} className={\"form-control\"} /*onChange={this.checkFieldType.bind(this)}*/>\n                                <option value=\"\" key=\"0\">Seleccione una función del campo...</option>\n                                {funciones.map((campo, k) =>\n                                    <option value={campo.nombre} key={k}>{campo.nombre}</option>\n                                )}\n                            </select>\n                        </div>\n                    </div>\n                    <div className={\"row\"}>\n                        <div className={\"form-group col-xl-6 col-6\"}>\n                            <h4 className={\"col-form-label text-center\"}>Tipo de Variable</h4>\n                            <select id={\"campoTipo\"} className={\"form-control\"} /*onChange={this.checkFieldType.bind(this)}*/>\n                                <option value=\"\" key=\"0\">Seleccione un tipo de variable...</option>\n                                {campos.map((campo, k) =>\n                                    <option value={campo.nombre} key={k}>{campo.nombre}</option>\n                                )}\n                            </select>\n                        </div>\n                        <div className={\"form-group col-xl-6 col-6\"}>\n                            <h4 className={\"col-form-label text-center\"}>Guardar Campo en Resultados</h4>\n                            <div className={\"switch-button switch-button-yesno\"} style={{margin:\"0 auto\", display:\"block\"}}>\n                                <input type=\"checkbox\" defaultChecked name={\"campoGuardar\"} id={\"campoGuardar\"}/><span>\n                                <label htmlFor={\"campoGuardar\"}></label></span>\n                            </div>\n                        </div>\n                    </div>\n                    { this.state.errorCreacionCampo.mostrar ? (\n                        <ErrorMessage campo={this.state.errorCreacionCampo.campo} descripcion={this.state.errorCreacionCampo.descripcion} dismissTableError={this.dismissFieldNewError}> </ErrorMessage>\n                    ) : (\n                        <span></span>\n                    )}\n                    <div className={\"row\"}>\n                        <button onClick={() => this.insertField()} className={\"btn btn-light btn-block col-xl-10 col-10\"} style={{margin: \"0 auto\", display: \"block\"}}>Crear</button>\n                    </div>\n                </div>\n\n                {this.state.camposDeTabla.map((campo, i) => (\n                    <div key={campo.ID} className={\"row\"} style={{width: \"100%\"}}>\n                        <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"} style={{width: \"100%\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n                            <div className={\"border-top alert alert-primary\"} style={{padding: \"1% 3%\"}}>\n                                <div className={\"row\"}>\n                                    <div className={\"form-group col-xl-6 col-6\"}>\n                                        <h4 className={\"col-form-label text-center\"}>Tabla</h4>\n                                        <h4 style={{fontFamily: 'Circular Std Medium', color: \"#71748d\"}} className={\"alert-heading\"} >{this.props.nombreTablaSeleccionada}</h4>\n                                    </div>\n                                    <div className={\"form-group col-xl-6 col-6\"}>\n                                        <h4 className={\"col-form-label text-center\"}>Nombre de Columna</h4>\n                                        <InlineEdit id={\"campoNombre\"+i} texto={campo.nombre}> </InlineEdit>\n                                    </div>\n                                </div>\n                                <div className={\"row\"}>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <h4 className={\"col-form-label text-center\"}>Objeto</h4>\n                                        <select id={\"campoTabla\"+i} className={\"form-control\"} defaultValue={campo.tabla}>\n                                            <option value=\"\" key=\"0\">Seleccione a que objeto pertenece el campo...</option>\n                                            {tablas.map((campoSelect, k) =>\n                                                <option value={campoSelect.nombre} key={k}>{campoSelect.nombre}</option>\n                                            )}\n                                        </select>\n                                    </div>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <h4 className={\"col-form-label text-center\"}>Función de Variable</h4>\n                                        <select id={\"campoFuncion\"+i} className={\"form-control\"} defaultValue={campo.funcion}>\n                                            <option value=\"\" key=\"0\">Seleccione una función del campo...</option>\n                                            {funciones.map((campoSelect, k) =>\n                                                <option value={campoSelect.nombre} key={k}>{campoSelect.nombre}</option>\n                                            )}\n                                        </select>\n                                    </div>\n                                </div>\n                                <div className={\"row\"}>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <h4 className={\"col-form-label text-center\"}>Tipo de Variable</h4>\n                                        <select id={\"campoTipo\"+i} className={\"form-control\"} defaultValue={campo.tipo}>\n                                            <option value=\"\" key=\"0\">Seleccione un tipo de variable...</option>\n                                            {campos.map((campoSelect, k) =>\n                                                <option value={campoSelect.nombre} key={k}>{campoSelect.nombre}</option>\n                                            )}\n                                        </select>\n                                    </div>\n                                    <div className={\"form-group col-xl-6 col-6\"}>\n                                        <h4 className={\"col-form-label text-center\"}>Guardar Campo en Resultados</h4>\n                                        <div className={\"switch-button switch-button-yesno\"} style={{margin:\"0 auto\", display:\"block\"}}>\n                                            { campo.guardar ? (\n                                                <input type=\"checkbox\" defaultChecked name={\"campoGuardar\"+i} id={\"campoGuardar\"+i}/>\n                                            ) : (\n                                                <input type=\"checkbox\" name={\"campoGuardar\"+i} id={\"campoGuardar\"+i}/>\n                                            )}\n                                            <span><label htmlFor={\"campoGuardar\"+i}></label></span>\n                                        </div>\n                                    </div>\n                                </div>\n                                { this.state.errorModificarCampo.mostrar ? (\n                                    <ErrorMessage campo={this.state.errorModificarCampo.campo} descripcion={this.state.errorModificarCampo.descripcion} dismissTableError={this.dismissFieldEditError}> </ErrorMessage>\n                                ) : (\n                                    <span></span>\n                                )}\n                                <div className={\"row\"}>\n                                    <button onClick={() => this.updateFieldsConfirmation(campo.ID, i)} className={\"btn btn-light btn-block col-xl-5 col-5\"} style={{margin: \"0 auto\", display: \"block\"}}>Guardar</button>\n                                    <button onClick={() => this.deleteFieldsConfirmation(campo.ID, i)} className={\"btn btn-light btn-block col-xl-1 col-1\"} style={{margin: \"0 auto\", display: \"block\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}><img onClick={this.props.deleteVariable} src={\"../assets/trash.png\"} style={{height: \"20px\", width: \"20px\"}}></img></button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                ))}\n\n                { this.state.mensajeModal.mostrarMensaje ? (\n                    <MessageModal esError={this.state.mensajeModal.esError} esConfirmar={this.state.mensajeModal.esConfirmar} dismissMessage={this.dismissMessageModal} confirmFunction={this.confirmMessageModal} titulo={this.state.mensajeModal.titulo} mensaje={this.state.mensajeModal.mensaje}> </MessageModal>\n                ) : (\n                    <span></span>\n                )}\n            </div>\n        );\n    }\n}\n\n\n/*// 1. Make a shallow copy of the items\nlet campos = [...this.state.camposDeTabla];\n// 2. Make a shallow copy of the item you want to mutate\nlet campo = [...campos[indexTabla]];\n// 3. Replace the property you're intested in\ncampo[indexCampo] = {ID: campo[indexCampo].ID, idTabla: idTabla, campoNombre: campoNombre, tipoCampo: tipoCampo, guardar: guardarCampo};\n// 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\ncampos[indexTabla] = campo;\n// 5. Set the state to our new copy*/"],"file":"ConfiguracionCampos.js"}