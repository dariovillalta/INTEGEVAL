{"version":3,"sources":["components/ConeccionTabla/ConfiguracionTablas.js"],"names":["campos","nombre","funciones","funcion","texto","funcionesTablas","ConfiguracionTablas","props","state","tablas","errorCreacionTabla","campo","descripcion","mostrar","mensajeModal","mostrarMensaje","mensajeConfirmado","esError","esConfirmar","titulo","mensaje","banderaMetodoInit","idElementoSelec","indiceX","indiceY","loadTables","bind","insertTable","deleteTableConfirmation","deleteTable","dismissTableNewError","dismissMessageModal","confirmMessageModal","showSuccesMessage","transaction","sql","Transaction","pool","begin","err","rolledBack","on","aborted","request","Request","query","result","console","log","rollback","commit","setState","recordset","nombreTabla","$","val","usuarioTabla","contrasenaTabla","servidorTabla","basedatosTabla","tablaTabla","funcionTabla","length","id","x","splice","transaction2","request2","localeCompare","copiaID","self","setTimeout","showConfigurationComponent","display","alignItems","justifyContent","width","map","i","margin","tabla","ID","border","cursor","height","marginRight","terminoSeleccionTabla","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport sql from 'mssql';\n\nimport ErrorMessage from '../ErrorMessage.js';\nimport MessageModal from '../MessageModal.js';\n\nconst campos = [ {nombre: \"varchar\"}, {nombre: \"bit\"}, {nombre: \"date\"}, {nombre: \"int\"} ];\nlet funciones = [ {funcion: \"idCliente\", texto: \"ID de Cliente\"}, {funcion: \"fecha\", texto: \"fecha\"}, {nombre: \"date\"}, {nombre: \"int\"} ];\nconst funcionesTablas = [{nombre: \"Otro\"}, {nombre: \"Pagos de Préstamos\"}, {nombre: \"Plan de Pagos\"}];\n\nexport default class ConfiguracionTablas extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tablas: [],\n            errorCreacionTabla: {campo: \"\", descripcion: \"\", mostrar: false},\n            mensajeModal: {mostrarMensaje: false, mensajeConfirmado: false, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: -1, indiceX: -1, indiceY: -1}\n        }\n        this.loadTables = this.loadTables.bind(this);\n        this.insertTable = this.insertTable.bind(this);\n        this.deleteTableConfirmation = this.deleteTableConfirmation.bind(this);\n        this.deleteTable = this.deleteTable.bind(this);\n        this.dismissTableNewError = this.dismissTableNewError.bind(this);\n        this.dismissMessageModal = this.dismissMessageModal.bind(this);\n        this.confirmMessageModal = this.confirmMessageModal.bind(this);\n        this.showSuccesMessage = this.showSuccesMessage.bind(this);\n    }\n    /* mensajeModal <- de state\n        //mostrarMensaje:bandera para mostrar modal mensaje en pantalla\n        //mensajeConfirmado:retorno del modal mensaje si fue conf\n        //esError:bandera para ver que tipo de modal mensaje mostrar\n        //esConfirmar:bandera para ver que tipo de modal mensaje mostrar\n        //titulo:titulo del modal\n        //mensaje:mensaje del modal\n        //banderaMetodoInit:variable para ver a que metodo ir cuando regresa de confirmar el modal\n        //idElementoSelec:id del elemento que mostro el modal mensaje\n        //indiceX:posicion de la tabla en el arreglo que mostro el modal mensaje\n        //indiceY:posicion del campo en el arreglo de tablas que mostro el modal mensaje\n    */\n\n    componentDidMount() {\n        this.loadTables();\n    }\n\n    loadTables() {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Tablas\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        this.setState({\n                            tablas: result.recordset\n                        });\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    insertTable() {\n        let nombreTabla = $(\"#nombreTablaNuevo\").val();\n        let usuarioTabla = $(\"#usuarioTablaNuevo\").val();\n        let contrasenaTabla = $(\"#contrasenaTablaNuevo\").val();\n        let servidorTabla = $(\"#servidorTablaNuevo\").val();\n        let basedatosTabla = $(\"#basedatosTablaNuevo\").val();\n        let tablaTabla = $(\"#tablaTablaNuevo\").val();\n        let funcionTabla = $(\"#funcionTabla\").val();\n        if(nombreTabla.length > 0 && nombreTabla.length < 71) {\n            if(usuarioTabla.length > 0 && usuarioTabla.length < 51) {\n                if(contrasenaTabla.length > 0 && contrasenaTabla.length < 201) {\n                    if(servidorTabla.length > 0 && servidorTabla.length < 51) {\n                        if(basedatosTabla.length > 0 && basedatosTabla.length < 51) {\n                            if(tablaTabla.length > 0 && tablaTabla.length < 71) {\n                                if(tablaTabla.length > 0 && tablaTabla.length < 71) {\n                                    this.setState({\n                                        errorCreacionTabla: {campo: \"\", descripcion: \"\", mostrar: false}\n                                    });\n                                    const transaction = new sql.Transaction( this.props.pool );\n                                    transaction.begin(err => {\n                                        var rolledBack = false;\n                                        transaction.on('rollback', aborted => {\n                                            rolledBack = true;\n                                        });\n                                        const request = new sql.Request(transaction);\n                                        request.query(\"insert into Tablas (Nombre, Usuario, Contrasena, Servidor, BaseDatos, Tabla, Funcion) values ('\"+nombreTabla+\"','\"+usuarioTabla+\"','\"+contrasenaTabla+\"','\"+servidorTabla+\"','\"+basedatosTabla+\"','\"+tablaTabla+\"','\"+funcionTabla+\"')\", (err, result) => {\n                                            if (err) {\n                                                if (!rolledBack) {\n                                                    console.log(err);\n                                                    transaction.rollback(err => {\n                                                    });\n                                                }\n                                            } else {\n                                                transaction.commit(err => {\n                                                    this.showSuccesMessage(\"Exito\", \"Tabla creada con éxito.\");\n                                                    this.loadTables();\n                                                });\n                                            }\n                                        });\n                                    }); // fin transaction\n                                } else {\n                                    let campo = \"Función de la Tabla\";\n                                    let descripcion;\n                                    if(funcionTabla.length == 0)\n                                        descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                                    else\n                                        descripcion = \"El campo debe tener una longitud menor a 31.\";\n                                    this.setState({\n                                        errorCreacionTabla: {campo: campo, descripcion: descripcion, mostrar: true}\n                                    });\n                                }\n                            } else {\n                                let campo = \"Nombre de la Tabla\";\n                                let descripcion;\n                                if(tablaTabla.length == 0)\n                                    descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                                else\n                                    descripcion = \"El campo debe tener una longitud menor a 71.\";\n                                this.setState({\n                                    errorCreacionTabla: {campo: campo, descripcion: descripcion, mostrar: true}\n                                });\n                            }\n                        } else {\n                            let campo = \"Base de Datos de la Tabla\";\n                            let descripcion;\n                            if(basedatosTabla.length == 0)\n                                descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                            else\n                                descripcion = \"El campo debe tener una longitud menor a 51.\";\n                            this.setState({\n                                errorCreacionTabla: {campo: campo, descripcion: descripcion, mostrar: true}\n                            });\n                        }\n                    } else {\n                        let campo = \"Servidor de la Tabla\";\n                        let descripcion;\n                        if(servidorTabla.length == 0)\n                            descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                        else\n                            descripcion = \"El campo debe tener una longitud menor a 51.\";\n                        this.setState({\n                            errorCreacionTabla: {campo: campo, descripcion: descripcion, mostrar: true}\n                        });\n                    }\n                } else {\n                    let campo = \"Contraseña de la Tabla\";\n                    let descripcion;\n                    if(contrasenaTabla.length == 0)\n                        descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                    else\n                        descripcion = \"El campo debe tener una longitud menor a 201.\";\n                    this.setState({\n                        errorCreacionTabla: {campo: campo, descripcion: descripcion, mostrar: true}\n                    });\n                }\n            } else {\n                let campo = \"Usuario de la Tabla\";\n                let descripcion;\n                if(usuarioTabla.length == 0)\n                    descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                else\n                    descripcion = \"El campo debe tener una longitud menor a 51.\";\n                this.setState({\n                    errorCreacionTabla: {campo: campo, descripcion: descripcion, mostrar: true}\n                });\n            }\n        } else {\n            let campo = \"Nombre de la Conección\";\n            let descripcion;\n            if(nombreTabla.length == 0)\n                descripcion = \"El campo debe tener una longitud mayor a 0.\";\n            else\n                descripcion = \"El campo debe tener una longitud menor a 71.\";\n            this.setState({\n                errorCreacionTabla: {campo: campo, descripcion: descripcion, mostrar: true}\n            });\n        }\n    }\n\n    deleteTableConfirmation(id, x) {\n        this.setState({\n            mensajeModal: {mostrarMensaje: true, mensajeConfirmado: false, esError: false, esConfirmar: true, titulo: \"Confirmación\", mensaje: \"Esta seguro que desea eliminar la tabla?\", banderaMetodoInit: \"goDelTable\", idElementoSelec: id, indiceX: x, indiceY: -1}\n        });\n    }\n\n    deleteTable(id) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"delete from Tablas where ID = \"+id, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        // 1. Make a shallow copy of the items\n                        let tablas = [...this.state.tablas];\n                        // 3. Replace the property you're intested in\n                        tablas.splice(this.state.mensajeModal.indiceX, 1);\n                        // 5. Set the state to our new copy\n                        //this.loadTables();\n                        this.setState({\n                            tablas: tablas,\n                            mensajeModal: {mostrarMensaje: false, mensajeConfirmado: true, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX, indiceY: this.state.mensajeModal.indiceY}\n                        });\n                        this.showSuccesMessage(\"Exito\", \"Tabla eliminada con éxito.\");\n                        /*this.setState({\n                            tablas: quitando tabla,\n                            mensajeModal: limpiando variables del modal\n                        });*/\n                    });\n                }\n            });\n        }); // fin transaction\n\n        const transaction2 = new sql.Transaction( this.props.pool );\n        transaction2.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request2 = new sql.Request(transaction2);\n            request2.query(\"delete from Campos where tablaID = \"+id, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction2.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction2.commit(err => {\n                    });\n                }\n            });\n        }); // fin transaction2\n    }\n\n\n    /*======_______====== ======_______======   MENSAJES ERROR DE CAMPOS    ======_______====== ======_______======*/\n    /*======_______======                                                                       ======_______======*/\n    /*======_______======                                                                       ======_______======*/\n    /*======_______====== ======_______====== ====_____====  ====_____====  ======_______====== ======_______======*/\n\n    dismissTableNewError() {\n        this.setState({\n            errorCreacionTabla: {campo: \"\", descripcion: \"\", mostrar: false}\n        });\n    }\n\n    /*======_______====== ======_______======   MENSAJES MODAL    ======_______====== ======_______======*/\n    /*======_______======                                                             ======_______======*/\n    /*======_______======                                                             ======_______======*/\n    /*======_______====== ======_______====== ==_____==  ==___==  ======_______====== ======_______======*/\n\n    dismissMessageModal() {\n        this.setState({\n            mensajeModal: {mostrarMensaje: false, mensajeConfirmado: false, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: -1, indiceX: -1, indiceY: -1}\n        });\n    }\n\n    confirmMessageModal() {\n        if(this.state.mensajeModal.banderaMetodoInit.localeCompare(\"goDelTable\") == 0) {\n            let copiaID = this.state.mensajeModal.idElementoSelec;\n            this.deleteTable(copiaID);\n        }\n    }\n\n    showSuccesMessage(titulo, mensaje) {\n        this.setState({\n            mensajeModal: {mostrarMensaje: true, mensajeConfirmado: false, esError: false, esConfirmar: false, titulo: titulo, mensaje: mensaje, banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX, indiceY: this.state.mensajeModal.indiceY}\n        });\n        let self = this;\n        setTimeout(function(){\n            self.setState({\n                mensajeModal: {mostrarMensaje: false, mensajeConfirmado: false, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: self.state.mensajeModal.idElementoSelec, indiceX: self.state.mensajeModal.indiceX, indiceY: self.state.mensajeModal.indiceY}\n            });\n        }, 850);\n    }\n\n    render() {\n        return (\n            <div>\n                <div className={\"row\"}>\n                    <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                        <div className={\"page-header\"}>\n                            <h2 className={\"pageheader-title\"}>Configuraci&oacute;n</h2>\n                            <div className={\"page-breadcrumb\"}>\n                                <nav aria-label=\"breadcrumb\">\n                                    <ol className={\"breadcrumb\"}>\n                                        <li className={\"breadcrumb-item\"} aria-current=\"page\" onClick={this.props.showConfigurationComponent}><a href=\"#\" className={\"breadcrumb-link\"}>Configuraci&oacute;n</a></li>\n                                        <li className={\"breadcrumb-item active\"} aria-current=\"page\">Tablas</li>\n                                    </ol>\n                                </nav>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={\"row\"}>\n                    <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                        <div className={\"card influencer-profile-data\"}>\n                            <div className={\"card-body\"}>\n                                <h3>Crear Nueva Tabla</h3>\n                                <div className={\"row border-top\"}>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Nombre de la Conecci&oacute;n</label>\n                                        <input id=\"nombreTablaNuevo\" type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Usuario de la Tabla</label>\n                                        <input id=\"usuarioTablaNuevo\" type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                </div>\n                                <div className={\"row\"}>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Contrase&ntilde;a de la Tabla</label>\n                                        <input id=\"contrasenaTablaNuevo\" type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Servidor de la Tabla</label>\n                                        <input id=\"servidorTablaNuevo\" type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                </div>\n                                <div className={\"row\"}>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Base de Datos de la Tabla</label>\n                                        <input id=\"basedatosTablaNuevo\" type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Nombre de la Tabla</label>\n                                        <input id=\"tablaTablaNuevo\" type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\", width: \"100%\"}}>\n                                        <form style={{width: \"90%\"}}>\n                                            <label className={\"col-form-label\"}>Función de la Tabla</label>\n                                            <div className=\"form-group\" style={{width: \"100%\"}}>\n                                                <select id=\"funcionTabla\" className=\"form-control\" style={{width: \"100%\"}}>\n                                                    {funcionesTablas.map((funcionTabla, i) =>\n                                                        <option key={i} value={funcionTabla.nombre}>{funcionTabla.nombre}</option>\n                                                    )}\n                                                </select>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                                { this.state.errorCreacionTabla.mostrar ? (\n                                    <ErrorMessage campo={this.state.errorCreacionTabla.campo} descripcion={this.state.errorCreacionTabla.descripcion} dismissTableError={this.dismissTableNewError}> </ErrorMessage>\n                                ) : (\n                                    <span></span>\n                                )}\n                                <div className={\"row\"}>\n                                    <button onClick={this.insertTable} className={\"btn btn-success btn-block col-xl-10 col-10\"} style={{margin: \"0 auto\", display: \"block\"}}>Crear</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                {this.state.tablas.map((tabla, i) => (\n                    <div key={tabla.ID} className={\"row\"} style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n                        <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"} style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n                            <div className=\"card-header bg-primary p-3\" style={{width: \"100%\"}}>\n                                <h4 className=\"mb-0 text-white\" style={{display: \"inline\"}}> {tabla.nombre} </h4>\n                                <div style={{float: \"right\", border: \"2px solid #000\", cursor: \"pointer\"}}>\n                                    <img onClick={() => this.deleteTableConfirmation(tabla.ID, i)} src={\"../assets/trash.png\"} style={{height: \"20px\", width: \"20px\"}}></img>\n                                </div>\n                                <div style={{float: \"right\", border: \"2px solid #000\", marginRight: \"10px\", cursor: \"pointer\"}}>\n                                    <img onClick={() => this.props.terminoSeleccionTabla(tabla.ID, tabla.nombre)} src={\"../assets/edit.png\"} style={{height: \"20px\", width: \"20px\"}}></img>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                ))}\n\n                { this.state.mensajeModal.mostrarMensaje ? (\n                    <MessageModal esError={this.state.mensajeModal.esError} esConfirmar={this.state.mensajeModal.esConfirmar} dismissMessage={this.dismissMessageModal} confirmFunction={this.confirmMessageModal} titulo={this.state.mensajeModal.titulo} mensaje={this.state.mensajeModal.mensaje}> </MessageModal>\n                ) : (\n                    <span></span>\n                )}\n            </div>\n        );\n    }\n}\n"],"file":"ConfiguracionTablas.js"}