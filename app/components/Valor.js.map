{"version":3,"sources":["components/Valor.js"],"names":["Valor","props","state","listas","variablesDeLista","connectionString","connectionTimeout","loginTimeout","odbc","connect","error","connection","console","log","updateVariableList","bind","getLists","transaction","sql","Transaction","pool","begin","err","rolledBack","on","aborted","request","Request","query","result","rollback","commit","setState","recordset","listaID","$","val","length","localeCompare","arrTemp","i","campos","push","ID","nombre","tipo","esNumero","map","lista","margin","variable","indexOf","esBoolean","height","width","esFecha","esTexto","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport odbc from 'odbc';\nimport sql from 'mssql';\n\nexport default class Valor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            listas: [],\n            variablesDeLista: []\n        }\n        const connectionString = {\n            connectionString: 'DSN=ClasificacionCartera;Uid=SA;Pwd=password111!;',\n            connectionTimeout: 360,\n            loginTimeout: 360\n        }\n        odbc.connect('DSN={ClasificacionCartera};', (error, connection) => {\n            console.log(connection);\n            /*connection.columns(null, null, null, null, (error, result) => {\n                if (error) { return; } // handle\n                console.log(result);\n            });*/\n        });\n        this.updateVariableList = this.updateVariableList.bind(this);\n        this.getLists = this.getLists.bind(this);\n    }\n\n    getLists() {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Listas\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        this.setState({\n                            listas: result.recordset\n                        });\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    updateVariableList() {\n        let listaID = $(\"#selectLista\").val();\n        if (listaID.length > 0) {\n            if (listaID.localeCompare(\"table\") != 0) {\n                console.log('listaID.localeCompare(\"table\") != 0');\n                const transaction = new sql.Transaction( this.props.pool );\n                transaction.begin(err => {\n                    var rolledBack = false;\n                    transaction.on('rollback', aborted => {\n                        rolledBack = true;\n                    });\n                    const request = new sql.Request(transaction);\n                    request.query(\"select * from VariablesdeLista where listaID = \"+listaID, (err, result) => {\n                        if (err) {\n                            if (!rolledBack) {\n                                console.log(err);\n                                transaction.rollback(err => {\n                                });\n                            }\n                        } else {\n                            transaction.commit(err => {\n                                this.setState({\n                                    variablesDeLista: result.recordset\n                                });\n                            });\n                        }\n                    });\n                }); // fin transaction\n            } else {\n                let arrTemp = [];\n                for (var i = 0; i < this.props.campos.length; i++) {\n                    arrTemp.push({ID: this.props.campos[i].ID, nombre: this.props.campos[i].nombre, tipo: this.props.campos[i].tipo});\n                };\n                this.setState({\n                    variablesDeLista: arrTemp\n                });\n            }\n        } else {\n            this.setState({\n                variablesDeLista: []\n            });\n        }\n    }\n\n    render() {\n        if(this.props.esNumero) {\n            return (\n                <div className={\"row\"}>\n\t            \t<div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n\t                    <div className={\"card\"}>\n\t                        <h3 className={\"card-header\"}>Seleccionar Campo</h3>\n\t                        <div className={\"card-body\"}>\n\t                            <div className={\"form-group\"}>\n\t                                <select id={\"selectLista\"} className={\"form-control form-control-lg\"} onChange={this.updateVariableList}>\n\t                                    <option value=\"\">Seleccione una lista...</option>\n\t                                    <option value=\"table\">Campos de tabla</option>\n                                        {this.state.listas.map((lista, i) =>\n                                            <option value={i}>{lista.nombre}</option>\n                                        )}\n\t                                </select>\n\t                            </div>\n\t                        </div>\n\n\t                        <h5 className={\"card-header\"} style={{margin: \"0px\"}}></h5>\n\t                        <h4 className={\"card-header\"}>Seleccionar Elementos</h4>\n\t                        <div className={\"card-body\"}>\n\t                            <div className={\"form-group\"}>\n\t                                <select id={\"camposDeLista\"} className={\"form-control form-control-lg\"} multiple>\n                                        {this.state.variablesDeLista.map((variable, i) => {\n                                                if (variable.tipo.indexOf(\"int\") == 0) {\n                                                    return <option value={i} key={variable.ID}>{variable.nombre}</option>\n                                                } else {\n                                                    return null;\n                                                }\n                                            }\n                                        )}\n\t                                </select>\n\t                            </div>\n\t                        </div>\n\n\t                    </div>\n\t                </div>\n\t            </div>\n            );\n        } else if(this.props.esBoolean) {\n            return (\n                <div className={\"row\"}>\n                    <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                        <div className={\"card\"}>\n                            <h3 className={\"card-header\"}>Seleccionar Operacion</h3>\n                            <div className={\"card-body\"}>\n                                <div className={\"text-center\"}>\n                                    <label className={\"custom-control custom-radio custom-control-inline\"}>\n                                        <input type=\"radio\" name=\"radio-inline\" className={\"custom-control-input\"}/>\n                                        <span className={\"custom-control-label\"}>\n                                            <img src=\"./assets/varCreation/Verdadero.png\" alt=\"\" style={{height: \"30px\", width: \"auto\"}}/>\n                                        </span>\n                                    </label>\n                                    <label className={\"custom-control custom-radio custom-control-inline\"}>\n                                        <input type=\"radio\" name=\"radio-inline\" className={\"custom-control-input\"}/>\n                                        <span className={\"custom-control-label\"}>\n                                            <img src=\"./assets/varCreation/Falso.png\" alt=\"\" style={{height: \"30px\", width: \"auto\"}}/>\n                                        </span>\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        } else if(this.props.esFecha) {\n            return (\n                <div>\n                </div>\n            );\n        } else if(this.props.esTexto) {\n            return (\n                <div className={\"row\"}>\n                    <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                        <div className={\"card\"}>\n                            <h3 className={\"card-header\"}>Seleccionar Campo</h3>\n                            <div className={\"card-body\"}>\n                                <div className={\"form-group\"}>\n                                    <select id={\"selectLista\"} className={\"form-control form-control-lg\"} onChange={this.updateVariableList}>\n                                        <option value=\"\">Seleccione una lista...</option>\n                                        <option value=\"table\">Campos de tabla</option>\n                                        {this.state.listas.map((lista, i) =>\n                                            <option value={i}>{lista.nombre}</option>\n                                        )}\n                                    </select>\n                                </div>\n                            </div>\n\n                            <h5 className={\"card-header\"} style={{margin: \"0px\"}}></h5>\n                            <h4 className={\"card-header\"}>Seleccionar Elementos</h4>\n                            <div className={\"card-body\"}>\n                                <div className={\"form-group\"}>\n                                    <select id={\"camposDeLista\"} className={\"form-control form-control-lg\"} multiple>\n                                        {this.state.variablesDeLista.map((variable, i) => {\n                                                if (variable.tipo.indexOf(\"varchar\") == 0) {\n                                                    return <option value={i} key={variable.ID}>{variable.nombre}</option>\n                                                } else {\n                                                    return null;\n                                                }\n                                            }\n                                        )}\n                                    </select>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                </div>\n            );\n        }\n    }\n}\n"],"file":"Valor.js"}