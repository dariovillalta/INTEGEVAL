{"version":3,"sources":["components/Umbral/CrearUmbral.js"],"names":["CrearUmbral","props","state","umbrales","traerUmbrales","bind","crearUmbral","noExisteUmbral","transaction","sql","Transaction","pool","begin","err","rolledBack","on","aborted","request","Request","query","idVariable","result","console","log","rollback","commit","setState","recordset","nombre","$","val","length","alert","noExiste","i","toLowerCase","localeCompare","width","height","color","fontSize","fontWeight","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport sql from 'mssql';\n\nexport default class CrearUmbral extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            umbrales: []\n        }\n        this.traerUmbrales = this.traerUmbrales.bind(this);\n        this.crearUmbral = this.crearUmbral.bind(this);\n        this.noExisteUmbral = this.noExisteUmbral.bind(this);\n    }\n\n    componentDidMount() {\n        this.traerUmbrales();\n    }\n\n    traerUmbrales () {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Umbral where variableID = \"+this.props.idVariable, (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        this.setState({\n                            umbrales: result.recordset\n                        });\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    crearUmbral () {\n        var nombre = $(\"#nombreUmbral\").val();\n        if(nombre.length > 0 && nombre.length < 101) {\n            if(this.noExisteUmbral(nombre)) {\n                const transaction = new sql.Transaction( this.props.pool );\n                transaction.begin(err => {\n                    var rolledBack = false;\n                    transaction.on('rollback', aborted => {\n                        rolledBack = true;\n                    });\n                    const request = new sql.Request(transaction);\n                    request.query(\"insert into Umbral (variableID, nombre) values (\"+this.props.idVariable+\", '\"+nombre+\"')\", (err, result) => {\n                        if (err) {\n                            console.log(err);\n                            if (!rolledBack) {\n                                transaction.rollback(err => {\n                                });\n                            }\n                        } else {\n                            transaction.commit(err => {\n                                alert(\"Umbral Creado\");\n                            });\n                        }\n                    });\n                }); // fin transaction\n            } else {\n                alert(\"El nombre del umbral ya existe para esta variable\");\n            }\n        } else {\n            alert(\"Ingrese un valor para el nombre del umbral que debe ser mayor a 0 caracteres y menor a 101\");\n        }\n    }\n    noExisteUmbral (nombre) {\n        var noExiste = true;\n        for (var i = 0; i < this.state.umbrales.length; i++) {\n            if(this.state.umbrales[i].nombre.toLowerCase().localeCompare(nombre.toLowerCase()) == 0) {\n                noExiste = false;\n                break;\n            }\n        };\n        return noExiste;\n    }\n    \n    render() {\n        return (\n            <div style={{width: \"100%\", height: \"100%\"}}>\n                <div className={\"row\"}>\n                    <div className={\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3 form-group\"}>\n                        <label htmlFor=\"nombreUmbral\" className=\"col-form-label\">Nombre Umbral:</label>\n                    </div>\n                    <div className={\"col-xl-9 col-lg-9 col-md-9 col-sm-9 col-9 form-group\"}>\n                        <input id=\"nombreUmbral\" type=\"text\" className=\"form-control form-control-sm\"/>\n                    </div>\n                </div>\n                <div className={\"text-center\"}>\n                    <a onClick={this.crearUmbral} className={\"btn btn-primary col-xs-6 col-6\"} style={{color: \"white\", fontSize: \"1.2em\", fontWeight: \"bold\"}}>Crear Umbral</a>\n                </div>\n            </div>\n        );\n    }\n}\n"],"file":"CrearUmbral.js"}