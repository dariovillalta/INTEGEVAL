{"version":3,"sources":["components/Umbral/Umbral.js"],"names":["secciones","nombre","color","width","seccionesConRango","posicionesInsertadasRango","posicionesAInsertarRango","Umbral","props","state","umbrales","traerUmbrales","bind","inicioTraerSecciones","traerSeccion","inicioTraerSeccionRango","traerSeccionRango","inicioCrearArregloSeccionRango","ingresarSeccion","transaction","sql","Transaction","pool","begin","err","rolledBack","on","aborted","request","Request","query","idVariable","tablaVariable","result","console","log","showMessage","rollback","commit","setState","recordset","posicionesInsertadas","i","length","umbral","index","ultimoIndex","ID","undefined","push","j","seccionRango","indexUmbral","indexRango","umbralID","rangos","arrOrdenado","k","sumTot","totSec","valorMaximo","valorMinimo","seccionNueva","arrSecciones","encontroPos","splice","navbar","lista","tituloUmbral","maximoUmbral","showSuccesMessage","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport sql from 'mssql';\n\nimport VistaUmbral from './VistaUmbral.js';\nimport CrearUmbral from './CrearUmbral.js';\nimport ListaRestoUmbrales from './ListaRestoUmbrales.js';\n\nconst secciones = [{nombre: \"MONO 1\", color: \"#00c853\", width: \"25\"}, {nombre: \"MONO 2\", color: \"#ffab40\", width: \"50\"}, {nombre: \"MONO 1\", color: \"#00c853\", width: \"25\"}];\nvar seccionesConRango = [];\nvar posicionesInsertadasRango = 0, posicionesAInsertarRango = 0;\n\nexport default class Umbral extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            umbrales: [],\n            secciones: []\n        }\n        this.traerUmbrales = this.traerUmbrales.bind(this);\n        this.inicioTraerSecciones = this.inicioTraerSecciones.bind(this);\n        this.traerSeccion = this.traerSeccion.bind(this);\n        this.inicioTraerSeccionRango = this.inicioTraerSeccionRango.bind(this);\n        this.traerSeccionRango = this.traerSeccionRango.bind(this);\n        this.inicioCrearArregloSeccionRango = this.inicioCrearArregloSeccionRango.bind(this);\n        this.ingresarSeccion = this.ingresarSeccion.bind(this);\n    }\n\n    componentDidMount() {\n        this.traerUmbrales();\n    }\n\n    traerUmbrales () {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Umbral where variableID = \"+this.props.idVariable+\" and tablaVariable = '\"+this.props.tablaVariable+\"'\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        this.props.showMessage(\"Error\", \"No se pudo traer valores de la tabla de umbrales.\", true, false, {});\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        this.setState({\n                            umbrales: result.recordset\n                        }, this.inicioTraerSecciones );\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    inicioTraerSecciones () {\n        var posicionesInsertadas = [];\n        seccionesConRango = [];\n        for (var i = 0; i < this.state.umbrales.length; i++) {\n            this.traerSeccion(this.state.umbrales[i], i, this.state.umbrales.length, posicionesInsertadas);\n        };\n    }\n\n    traerSeccion (umbral, index, ultimoIndex, posicionesInsertadas) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from SeccionUmbral where umbralID = \"+umbral.ID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        this.props.showMessage(\"Error\", \"No se pudo traer valores de la tabla de secciones del umbral.\", true, false, {});\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        if(seccionesConRango[index] == undefined)\n                            seccionesConRango[index] = [];\n                        seccionesConRango[index] = result.recordset;\n                        posicionesInsertadas.push(index);\n                        if(posicionesInsertadas.length == ultimoIndex)\n                            this.inicioTraerSeccionRango();\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    inicioTraerSeccionRango () {\n        posicionesInsertadasRango = 0, posicionesAInsertarRango = 0;\n        for (var i = 0; i < seccionesConRango.length; i++) {\n            for (var j = 0; j < seccionesConRango[i].length; j++) {\n                posicionesAInsertarRango++;\n                this.traerSeccionRango(seccionesConRango[i][j], i, j);\n            };\n        };\n    }\n\n    traerSeccionRango (seccionRango, indexUmbral, indexRango) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from RangoSeccionUmbral where umbralID = \"+seccionRango.umbralID+\" and seccionUmbralID = \"+seccionRango.ID, (err, result) => {\n                if (err) {\n                    posicionesInsertadasRango++;\n                    console.log(err);\n                    this.props.showMessage(\"Error\", \"No se pudo traer valores de la tabla de rangos de sección del umbral.\", true, false, {});\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        posicionesInsertadasRango++;\n                        if(seccionesConRango[indexUmbral] == undefined)\n                            seccionesConRango[indexUmbral] = [];\n                        if(seccionesConRango[indexUmbral][indexRango] == undefined)\n                            seccionesConRango[indexUmbral][indexRango] = [];\n                        seccionesConRango[indexUmbral][indexRango].rangos = result.recordset;\n                        if(posicionesInsertadasRango == posicionesAInsertarRango)\n                            this.inicioCrearArregloSeccionRango();\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    inicioCrearArregloSeccionRango () {\n        var arrOrdenado = [];\n        for (var i = 0; i < seccionesConRango.length; i++) {\n            for (var j = 0; j < seccionesConRango[i].length; j++) {\n                for (var k = 0; k < seccionesConRango[i][j].rangos.length; k++) {\n                    this.ingresarSeccion(seccionesConRango[i][j].rangos[k], arrOrdenado, seccionesConRango[i][j].nombre, seccionesConRango[i][j].color);\n                };\n            };\n        };\n        //calculando porcentaje dentro del total\n        //suma del total\n        var sumTot = 0;\n        for (var i = 0; i < arrOrdenado.length; i++) {\n            var totSec = arrOrdenado[i].valorMaximo - arrOrdenado[i].valorMinimo;\n            sumTot += totSec;\n        };\n        for (var i = 0; i < arrOrdenado.length; i++) {\n            var totSec = arrOrdenado[i].valorMaximo - arrOrdenado[i].valorMinimo;\n            arrOrdenado[i].width = (totSec / sumTot) * 100;\n        };\n        this.setState({\n            secciones: arrOrdenado\n        });\n    }\n\n    ingresarSeccion (seccionNueva, arrSecciones, nombre, color) {\n        if(arrSecciones.length == 0) {\n            arrSecciones.push(seccionNueva);\n            arrSecciones[arrSecciones.length-1].nombre = nombre;\n            arrSecciones[arrSecciones.length-1].color = color;\n            return;\n        }\n        var encontroPos = false;\n        for (var i = 0; i < arrSecciones.length; i++) {\n            if(seccionNueva.valorMaximo < arrSecciones[i].valorMinimo) {\n                encontroPos = true;\n                break;\n            }\n        };\n        arrSecciones.splice(i, 0, seccionNueva);\n        arrSecciones[i].nombre = nombre;\n        arrSecciones[i].color = color;\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.navbar}\n                <ListaRestoUmbrales lista={this.props.lista}> </ListaRestoUmbrales>\n                <VistaUmbral umbrales={this.state.secciones}> </VistaUmbral>\n                <CrearUmbral idVariable={this.props.idVariable} pool={this.props.pool}\n                                                        tablaVariable={this.props.tablaVariable}\n                                                        tituloUmbral={this.props.tituloUmbral}\n                                                        traerUmbralesPADRE={this.traerUmbrales}\n                                                        maximoUmbral={this.props.maximoUmbral}\n                                                        showSuccesMessage={this.props.showSuccesMessage}\n                                                        showMessage={this.props.showMessage}> </CrearUmbral>\n            </div>\n        );\n    }\n}\n"],"file":"Umbral.js"}