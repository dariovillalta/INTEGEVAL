{"version":3,"sources":["components/Umbral/EditarUmbral.js"],"names":["colores","EditarUmbral","props","state","umbrales","umbralSeleccionadoID","umbralNombreSeleccionado","seccionesUmbral","seccionUmbralSeleccionadoID","seccionUmbralNombreSeleccionado","rangosSeccionUmbral","traerUmbrales","bind","seleccionUmbral","retornoSeleccionUmbral","traerSeccionesUmbral","agregarSeccionUmbral","seleccionSeccionUmbral","retornoSeccionSeleccionUmbral","traerRangosSeccionUmbral","agregarRangoSeccionUmbral","transaction","sql","Transaction","pool","begin","err","rolledBack","on","aborted","request","Request","query","idVariable","result","console","log","rollback","commit","setState","recordset","index","ID","nombre","$","val","length","alert","valMinimo","valMaximo","width","height","map","umbral","i","undefined","color","fontSize","fontWeight","seccionUmbral","marginTop","rangoSeccionUmbral","j","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport sql from 'mssql';\nimport Slider from 'react-input-slider';\n\nvar colores = [\"primary\", \"brand\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\", \"dark\"];\n\nexport default class EditarUmbral extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            umbrales: [],\n            umbralSeleccionadoID: -1,\n            umbralNombreSeleccionado: '',\n            seccionesUmbral: [],\n            seccionUmbralSeleccionadoID: -1,\n            seccionUmbralNombreSeleccionado: '',\n            rangosSeccionUmbral: []\n        }\n        this.traerUmbrales = this.traerUmbrales.bind(this);\n        this.seleccionUmbral = this.seleccionUmbral.bind(this);\n        this.retornoSeleccionUmbral = this.retornoSeleccionUmbral.bind(this);\n        this.traerSeccionesUmbral = this.traerSeccionesUmbral.bind(this);\n        this.agregarSeccionUmbral = this.agregarSeccionUmbral.bind(this);\n        this.seleccionSeccionUmbral = this.seleccionSeccionUmbral.bind(this);\n        this.retornoSeccionSeleccionUmbral = this.retornoSeccionSeleccionUmbral.bind(this);\n        this.traerRangosSeccionUmbral = this.traerRangosSeccionUmbral.bind(this);\n        this.agregarRangoSeccionUmbral = this.agregarRangoSeccionUmbral.bind(this);\n    }\n\n    componentDidMount() {\n        this.traerUmbrales();\n    }\n\n    traerUmbrales () {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Umbral where variableID=\"+this.props.idVariable, (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        this.setState({\n                            umbrales: result.recordset\n                        });\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    seleccionUmbral (index) {\n        this.setState({\n            umbralSeleccionadoID: this.state.umbrales[index].ID,\n            umbralNombreSeleccionado: this.state.umbrales[index].nombre\n        }, this.traerSeccionesUmbral );\n    }\n\n    retornoSeleccionUmbral () {\n        this.setState({\n            umbralSeleccionadoID: -1,\n            umbralNombreSeleccionado: \"\"\n        });\n    }\n\n    traerSeccionesUmbral () {\n        console.log(this.state.umbralSeleccionadoID)\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from SeccionUmbral where umbralID = \"+this.state.umbralSeleccionadoID, (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        this.setState({\n                            seccionesUmbral: result.recordset\n                        });\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    agregarSeccionUmbral() {\n        var nombre = $(\"#nuevaSeccionUmbral\").val();\n        if(nombre.length > 0 && nombre.length < 101) {\n            const transaction = new sql.Transaction( this.props.pool );\n            transaction.begin(err => {\n                var rolledBack = false;\n                transaction.on('rollback', aborted => {\n                    rolledBack = true;\n                });\n                const request = new sql.Request(transaction);\n                request.query(\"insert into SeccionUmbral (umbralID, nombre) values (\"+this.state.umbralSeleccionadoID+\", '\"+nombre+\"')\", (err, result) => {\n                    if (err) {\n                        console.log(err);\n                        if (!rolledBack) {\n                            transaction.rollback(err => {\n                            });\n                        }\n                    } else {\n                        transaction.commit(err => {\n                            this.traerSeccionesUmbral();\n                        });\n                    }\n                });\n            }); // fin transaction\n        } else {\n            alert(\"Ingrese un valor para el nombre d ela sección de umbral.\");\n        }\n    }\n\n    seleccionSeccionUmbral (index) {\n        this.setState({\n            seccionUmbralSeleccionadoID: this.state.seccionesUmbral[index].ID,\n            seccionUmbralNombreSeleccionado: this.state.seccionesUmbral[index].nombre\n        }, this.traerSeccionesUmbral );\n    }\n\n    retornoSeccionSeleccionUmbral () {\n        this.setState({\n            seccionUmbralSeleccionadoID: -1,\n            seccionUmbralNombreSeleccionado: \"\"\n        });\n    }\n\n    traerRangosSeccionUmbral () {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from RangoSeccionUmbral where seccionUmbralID = \"+this.state.seccionUmbralSeleccionadoID, (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        this.setState({\n                            rangosSeccionUmbral: result.recordset\n                        });\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    agregarRangoSeccionUmbral() {\n        var valMinimo = $(\"#nuevaSeccionUmbral\").val();\n        var valMaximo = $(\"#nuevaSeccionUmbral\").val();\n        if(nombre.length > 0 && nombre.length < 101) {\n            const transaction = new sql.Transaction( this.props.pool );\n            transaction.begin(err => {\n                var rolledBack = false;\n                transaction.on('rollback', aborted => {\n                    rolledBack = true;\n                });\n                const request = new sql.Request(transaction);\n                request.query(\"insert into SeccionUmbral (umbralID, nombre) values (\"+this.state.umbralSeleccionadoID+\", '\"+nombre+\"')\", (err, result) => {\n                    if (err) {\n                        console.log(err);\n                        if (!rolledBack) {\n                            transaction.rollback(err => {\n                            });\n                        }\n                    } else {\n                        transaction.commit(err => {\n                            this.traerSeccionesUmbral();\n                        });\n                    }\n                });\n            }); // fin transaction\n        } else {\n            alert(\"Ingrese un valor para el nombre d ela sección de umbral.\");\n        }\n    }\n    \n    render() {\n        if(this.state.umbralSeleccionadoID == -1) {\n            console.log(\"YEEE1\");\n            return (\n                <div style={{width: \"100%\", height: \"100%\"}}>\n                    <div className={\"row\"}>\n                        {this.state.umbrales.map((umbral, i) => (\n                            <div key={umbral.ID} className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                                <a href=\"#\" onClick={() => this.seleccionUmbral(i)} className={\"btn btn-outline-\"+ ( colores[i]!= undefined ? colores[i] : colores[i%colores.length]) } style={{width: \"100%\"}}>{umbral.nombre}</a>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            );\n        } else if(this.state.umbralSeleccionadoID != -1 && this.state.seccionUmbralSeleccionadoID == -1) {\n            console.log(\"YEEE2\");\n            return (\n                <div style={{width: \"100%\", height: \"100%\"}}>\n                    <div className={\"row\"}>\n                        <div onClick={() => this.retornoSeleccionUmbral()}  className={\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 form-group addPointer border\"}>\n                            <label className=\"font-24 addPointer\"> {\"<\"} </label>\n                        </div>\n                        <div className={\"col-xl-10 col-lg-10 col-md-10 col-sm-10 col-10 form-group\"}>\n                            <h2>{this.state.umbralNombreSeleccionado}</h2>\n                        </div>\n                    </div>\n                    <hr/>\n                    <div className={\"row\"}>\n                        <div className={\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3 form-group\"}>\n                            <label htmlFor=\"nuevaSeccionUmbral\" className=\"col-form-label\">Nombre Nueva Sección de Umbral:</label>\n                        </div>\n                        <div className={\"col-xl-9 col-lg-9 col-md-9 col-sm-9 col-9 form-group\"}>\n                            <input id=\"nuevaSeccionUmbral\" type=\"text\" className=\"form-control form-control-sm\"/>\n                        </div>\n                    </div>\n                    <div className={\"text-center\"}>\n                        <a onClick={this.agregarSeccionUmbral} className={\"btn btn-primary col-xs-6 col-6\"} style={{color: \"white\", fontSize: \"1.2em\", fontWeight: \"bold\"}}>Agregar Sección de Umbral</a>\n                    </div>\n                    <br/>\n                    {this.state.seccionesUmbral.map((seccionUmbral, i) => (\n                        <div key={seccionUmbral.ID} className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                            <a href=\"#\" onClick={() => this.seleccionSeccionUmbral(i)} className={\"btn btn-outline-\"+ ( colores[i]!= undefined ? colores[i] : colores[i%colores.length]) } style={{width: \"100%\"}}>{seccionUmbral.nombre}</a>\n                        </div>\n                    ))}\n                </div>\n            );\n        } else if(this.state.umbralSeleccionadoID != -1 && this.state.seccionUmbralSeleccionadoID != -1) {\n            return (\n                <div style={{width: \"100%\", height: \"100%\"}}>\n                    <div className={\"row\"}>\n                        <div onClick={() => this.retornoSeccionSeleccionUmbral()} className={\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 form-group addPointer border\"}>\n                            <label className=\"font-24 addPointer\"> {\"<\"} </label>\n                        </div>\n                        <div className={\"col-xl-10 col-lg-10 col-md-10 col-sm-10 col-10 form-group\"}>\n                            <h2>{this.state.seccionUmbralNombreSeleccionado}</h2>\n                        </div>\n                    </div>\n                    <hr/>\n                    <div className={\"row\"}>\n                        <div className={\"col-xl-1 col-lg-1 col-md-1 col-sm-1 col-1 form-group\"}>\n                            <label htmlFor=\"inputSmall\" className=\"col-form-label\">Nombre Sección de Umbral:</label>\n                        </div>\n                        <div className={\"col-xl-11 col-lg-11 col-md-11 col-sm-11 col-11 form-group\"}>\n                            <h2>{this.state.seccionUmbralNombreSeleccionado}</h2>\n                        </div>\n                    </div>\n                    <div className={\"row\"}>\n                        <div className={\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6 form-group text-center\"}>\n                            <label htmlFor=\"inputSmall\" className=\"col-form-label\">Valor mínimo:</label>\n                        </div>\n                        <div className={\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6 form-group text-center\"}>\n                            <label htmlFor=\"inputSmall\" className=\"col-form-label\">Valor máximo:</label>\n                        </div>\n                    </div>\n                    <div className={\"row\"}>\n                        <div className={\"col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4 form-group\"}>\n                            <input id=\"inputSmall\" type=\"text\" className=\"form-control form-control-sm\"/>\n                        </div>\n                        <div className={\"col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 form-group\"}>\n                            <Slider\n                                axis=\"x\"\n                                xstep={1}\n                                xmin={0}\n                                xmax={100}\n                                x={0}\n                                style={{width: \"100%\", marginTop: \"10px\"}}/>\n                        </div>\n                    </div>\n                    {this.state.rangosSeccionUmbral.map((rangoSeccionUmbral, j) => (\n                        <div>\n                            <hr/>\n                            <div className={\"row\"}>\n                                <div className={\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3 form-group\"}>\n                                    <label htmlFor=\"inputSmall\" className=\"col-form-label\">Nombre Sección de Umbral:</label>\n                                </div>\n                                <div className={\"col-xl-9 col-lg-9 col-md-9 col-sm-9 col-9 form-group\"}>\n                                    <input id=\"inputSmall\" type=\"text\" defaultValue={seccionUmbral.nombre} className=\"form-control form-control-sm\"/>\n                                </div>\n                            </div>\n                            <div className={\"row\"}>\n                                <div className={\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6 form-group text-center\"}>\n                                    <label htmlFor=\"inputSmall\" className=\"col-form-label\">Valor Mínimo Nuevo:</label>\n                                </div>\n                                <div className={\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6 form-group text-center\"}>\n                                    <label htmlFor=\"inputSmall\" className=\"col-form-label\">Valor Máximo Nuevo:</label>\n                                </div>\n                            </div>\n                            <div className={\"row\"}>\n                                <div className={\"col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4 form-group\"}>\n                                    <input id=\"inputSmall\" type=\"text\" className=\"form-control form-control-sm\"/>\n                                </div>\n                                <div className={\"col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 form-group\"}>\n                                    <Slider\n                                        axis=\"x\"\n                                        xstep={1}\n                                        xmin={0}\n                                        xmax={100}\n                                        x={0}\n                                        style={{width: \"100%\", marginTop: \"10px\"}}/>\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            );\n        }\n    }\n}\n"],"file":"EditarUmbral.js"}