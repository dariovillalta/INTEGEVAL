{"version":3,"sources":["components/Reporteria/Reporteria.js"],"names":["Reporteria","props","state","styleDate","bind","date","getDate","getMonth","getFullYear","console","log","variables","map","variable","i","ID","overflowX","display","minWidth","left","nombreVariable","width","atributos","campo","j","nombre","resultados","resultado","k","tipo","localeCompare","indicadores","indicador","nombreIndicador","riesgos","riesgo","nombreRiesgo","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport sql from 'mssql';\n\nexport default class Reporteria extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            //componenteActual: \"importarResultados\"\n        }\n        //this.goCreateFilters = this.goCreateFilters.bind(this);\n        this.styleDate = this.styleDate.bind(this);\n    }\n\n    styleDate (date) {\n        return date.getDate()+'-'+(date.getMonth()+1)+'-'+date.getFullYear();\n    }\n\n    render() {\n        console.log('this.props.variables')\n        console.log(this.props.variables)\n        return (\n            <div className=\"row\">\n                <div className={\"row\"}>\n                    <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                        <div className={\"page-header\"}>\n                            <h2 className={\"pageheader-title\"}>Visualizar Variables</h2>\n                            <div className={\"page-breadcrumb\"}>\n                                <nav aria-label=\"breadcrumb\">\n                                    <ol className={\"breadcrumb\"}>\n                                        <li className={\"breadcrumb-item active font-16\"} aria-current=\"page\">Visualizar Variables</li>\n                                    </ol>\n                                </nav>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {this.props.variables.map((variable, i) => (\n                    <div key={variable.ID} className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\" style={{overflowX: \"auto\"}}>\n                        <div className=\"card\" style={{display: \"inline-block\", minWidth: \"100%\"}}>\n                            <div style={{float: \"right\"}}>\n                                <h5 className=\"card-header\" style={{display: \"inline\", left: \"10px\"}}>{variable.nombreVariable}</h5>\n                                <a href=\"#\" className=\"btn btn-outline-light\" style={{width: \"80px\", float: \"right\", display: \"inline\"}}>Excel</a>\n                                <a href=\"#\" className=\"btn btn-outline-light\" style={{width: \"80px\", float: \"right\", display: \"inline\"}}>PDF</a>\n                            </div>\n                            <table className=\"table table-striped\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">#</th>\n                                        {variable.atributos.map((campo, j) => (\n                                            <th scope=\"col\" key={campo.nombre+\"\"+variable.ID}>{campo.nombre}</th>\n                                        ))}\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {variable.resultados.map((resultado, j) => (\n                                        <tr key={variable.ID+\"\"+variable.ID+\"\"+resultado.ID}>\n                                            <th scope=\"row\">{j+1}</th>\n                                            {variable.atributos.map((campo, k) => (\n                                                <td key={variable.ID+\"\"+resultado.ID+\"\"+campo.nombre}>\n                                                {\n                                                    campo.tipo.localeCompare(\"date\") == 0\n                                                    ? <span>{this.styleDate(resultado[campo.nombre])}</span>\n                                                    : <span>{resultado[campo.nombre]}</span>\n                                                }\n                                                </td>\n                                            ))}\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                ))}\n\n                {this.props.indicadores.map((indicador, i) => (\n                    <div key={indicador.ID} className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\" style={{overflowX: \"auto\"}}>\n                        <div className=\"card\" style={{display: \"inline-block\", minWidth: \"100%\"}}>\n                            <div style={{float: \"right\"}}>\n                                <h5 className=\"card-header\" style={{display: \"inline\", left: \"10px\"}}>{indicador.nombreIndicador}</h5>\n                                <a href=\"#\" className=\"btn btn-outline-light\" style={{width: \"80px\", float: \"right\", display: \"inline\"}}>Excel</a>\n                                <a href=\"#\" className=\"btn btn-outline-light\" style={{width: \"80px\", float: \"right\", display: \"inline\"}}>PDF</a>\n                            </div>\n                            <table className=\"table table-striped\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">#</th>\n                                        {indicador.atributos.map((campo, j) => (\n                                            <th scope=\"col\" key={campo.nombre+\"\"+indicador.ID}>{campo.nombre}</th>\n                                        ))}\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {indicador.resultados.map((resultado, j) => (\n                                        <tr key={indicador.ID+\"\"+indicador.ID+\"\"+resultado.ID}>\n                                            <th scope=\"row\">{j+1}</th>\n                                            {indicador.atributos.map((campo, k) => (\n                                                <td key={indicador.ID+\"\"+resultado.ID+\"\"+campo.nombre}>\n                                                {\n                                                    campo.tipo.localeCompare(\"date\") == 0\n                                                    ? <span>{this.styleDate(resultado[campo.nombre])}</span>\n                                                    : <span>{resultado[campo.nombre]}</span>\n                                                }\n                                                </td>\n                                            ))}\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                ))}\n\n                {this.props.riesgos.map((riesgo, i) => (\n                    <div key={riesgo.ID} className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\" style={{overflowX: \"auto\"}}>\n                        <div className=\"card\" style={{display: \"inline-block\", minWidth: \"100%\"}}>\n                            <div style={{float: \"right\"}}>\n                                <h5 className=\"card-header\" style={{display: \"inline\", left: \"10px\"}}>{riesgo.nombreRiesgo}</h5>\n                                <a href=\"#\" className=\"btn btn-outline-light\" style={{width: \"80px\", float: \"right\", display: \"inline\"}}>Excel</a>\n                                <a href=\"#\" className=\"btn btn-outline-light\" style={{width: \"80px\", float: \"right\", display: \"inline\"}}>PDF</a>\n                            </div>\n                            <table className=\"table table-striped\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">#</th>\n                                        {riesgo.atributos.map((campo, j) => (\n                                            <th scope=\"col\" key={campo.nombre+\"\"+riesgo.ID}>{campo.nombre}</th>\n                                        ))}\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {riesgo.resultados.map((resultado, j) => (\n                                        <tr key={riesgo.ID+\"\"+riesgo.ID+\"\"+resultado.ID}>\n                                            <th scope=\"row\">{j+1}</th>\n                                            {riesgo.atributos.map((campo, k) => (\n                                                <td key={riesgo.ID+\"\"+resultado.ID+\"\"+campo.nombre}>\n                                                {\n                                                    campo.tipo.localeCompare(\"date\") == 0\n                                                    ? <span>{this.styleDate(resultado[campo.nombre])}</span>\n                                                    : <span>{resultado[campo.nombre]}</span>\n                                                }\n                                                </td>\n                                            ))}\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        );\n    }\n}\n\n"],"file":"Reporteria.js"}