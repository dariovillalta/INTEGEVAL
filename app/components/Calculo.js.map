{"version":3,"sources":["components/Calculo.js"],"names":["nivelMaximoVariables","arregloDeFuentesDeDatos","arregloDeVariables","arregloDeResultadosDeFuenteDeDatos","arregloConecionesATablas","banderaImportacionCamposFuenteDatosINICIO","banderaImportacionCamposFuenteDatosFIN","banderaImportacionCamposVariablesINICIO","banderaImportacionCamposVariablesFIN","banderaImportacionConecionesATablasINICIO","banderaImportacionConecionesATablasFIN","banderaImportacionValoresDeTablasDeFuenteDeDatosINICIO","banderaImportacionValoresDeTablasDeFuenteDeDatosFIN","myWorker","Worker","Calculo","props","iniciarCalculo","bind","getNivelMaximoCampos","getNivelMaximoVariables","traerFuenteDatos","traerAtributosFuenteDatos","revisarFinImportacionCamposFuenteDatos","traerVariables","traerAtributosVariables","revisarFinImportacionCamposVariables","inicioTraerConeccionesATablas","noHaSidoImportadaConeccion","traerConeccionesATablas","finTraerConeccionesATablas","inicioTraerResultadosDeFuenteDeDatos","traerResultadosDeFuenteDeDatos","finTraerResultadosDeFuenteDeDatos","iniciarHilo","transaction","sql","Transaction","pool","begin","err","rolledBack","on","aborted","request","Request","query","result","console","log","rollback","commit","recordset","length","nivel","i","ID","fuenteDatoID","index","atributos","variableID","push","tablaID","fuenteDeDato","indexARemplazar","concat","tabla","ConnectionPool","user","usuario","password","contrasena","server","servidor","database","baseDatos","stream","connectionTimeout","requestTimeout","max","min","idleTimeoutMillis","options","useUTC","connect","undefined","splice","color","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport sql from 'mssql';\n\nvar nivelMaximoVariables = 0;\nvar arregloDeFuentesDeDatos = [];                           //Arreglo con las fuentes de datos\n        //objeto: {tablaID, nombre, descripcion, esObjeto, objetoPadreID, guardar, nivel, [arreglo de atributos]}\n            //objeto arreglo de atributos: {nombre, tipo, formula}\nvar arregloDeVariables = [];                                //Arreglo con las variables\n        //objeto: {nombre, descripcion, esObjeto, objetoPadreID, guardar, nivel, [arreglo de atributos]}\n            //objeto arreglo de atributos: {nombre, tipo, formula}\nvar arregloDeResultadosDeFuenteDeDatos = [];                //Arreglo con los valores de las tablas de fuentes de datos\nvar arregloConecionesATablas = [];                          //Arreglo con los valores para poder conetarse a las tablas\n\nvar banderaImportacionCamposFuenteDatosINICIO = 0;           //Bandera para saber si termino de importar los campos de las fuentes de datos\nvar banderaImportacionCamposFuenteDatosFIN = 0;              //Bandera para saber si termino de importar los campos de las fuentes de datos\nvar banderaImportacionCamposVariablesINICIO = 0;           //Bandera para saber si termino de importar los campos de las variables\nvar banderaImportacionCamposVariablesFIN = 0;              //Bandera para saber si termino de importar los campos de las variables\nvar banderaImportacionConecionesATablasINICIO = 0;           //Bandera para saber si termino de importar los valores para poder conetarse a las tablas\nvar banderaImportacionConecionesATablasFIN = 0;              //Bandera para saber si termino de importar los valores para poder conetarse a las tablas\nvar banderaImportacionValoresDeTablasDeFuenteDeDatosINICIO = 0;   //Bandera para saber si termino de importar los valores de las tablas de fuentes de datos\nvar banderaImportacionValoresDeTablasDeFuenteDeDatosFIN = 0;      //Bandera para saber si termino de importar los valores de las tablas de fuentes de datos\n\nconst myWorker = new Worker(\"./components/CalculoVariablesWorker.js\");\n\nexport default class Calculo extends React.Component {\n    constructor(props) {\n        super(props);\n        /*this.state = {\n            showLoadingScreen: false,\n            mensajeLoadingScreen: ''\n        }*/\n        this.iniciarCalculo = this.iniciarCalculo.bind(this);\n        this.getNivelMaximoCampos = this.getNivelMaximoCampos.bind(this);\n        this.getNivelMaximoVariables = this.getNivelMaximoVariables.bind(this);\n        this.traerFuenteDatos = this.traerFuenteDatos.bind(this);\n        this.traerAtributosFuenteDatos = this.traerAtributosFuenteDatos.bind(this);\n        this.revisarFinImportacionCamposFuenteDatos = this.revisarFinImportacionCamposFuenteDatos.bind(this);\n        this.traerVariables = this.traerVariables.bind(this);\n        this.traerAtributosVariables = this.traerAtributosVariables.bind(this);\n        this.revisarFinImportacionCamposVariables = this.revisarFinImportacionCamposVariables.bind(this);\n        this.inicioTraerConeccionesATablas = this.inicioTraerConeccionesATablas.bind(this);\n        this.noHaSidoImportadaConeccion = this.noHaSidoImportadaConeccion.bind(this);\n        this.traerConeccionesATablas = this.traerConeccionesATablas.bind(this);\n        this.finTraerConeccionesATablas = this.finTraerConeccionesATablas.bind(this);\n        this.inicioTraerResultadosDeFuenteDeDatos = this.inicioTraerResultadosDeFuenteDeDatos.bind(this);\n        this.traerResultadosDeFuenteDeDatos = this.traerResultadosDeFuenteDeDatos.bind(this);\n        this.finTraerResultadosDeFuenteDeDatos = this.finTraerResultadosDeFuenteDeDatos.bind(this);\n        this.iniciarHilo = this.iniciarHilo.bind(this);\n    }\n\n    iniciarCalculo() {\n        this.getNivelMaximoCampos();\n    }\n\n    getNivelMaximoCampos() {\n        nivelMaximoVariables = 0;\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select MAX(nivel) AS nivel from Campos\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        if(result.recordset.length > 0) {\n                            nivelMaximoVariables = result.recordset[0].nivel;\n                        }\n                        this.getNivelMaximoVariables();\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    getNivelMaximoVariables() {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select MAX(nivel) AS nivel from Variables\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        if(result.recordset.length > 0 && nivelMaximoVariables < result.recordset[0].nivel) {\n                            nivelMaximoVariables = result.recordset[0].nivel;\n                        }\n                        arregloDeFuentesDeDatos = [];\n                        this.traerFuenteDatos();\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    traerFuenteDatos() {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from FuenteDatos\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        arregloDeFuentesDeDatos = result.recordset;\n                        banderaImportacionCamposFuenteDatosINICIO = 0;\n                        banderaImportacionCamposFuenteDatosFIN = arregloDeFuentesDeDatos.length;\n                        for (var i = 0; i < arregloDeFuentesDeDatos.length; i++) {\n                            this.traerAtributosFuenteDatos(arregloDeFuentesDeDatos[i].ID, i);\n                        };\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    traerAtributosFuenteDatos (fuenteDatoID, index) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from FuenteDatosCampos where fuenteDatoID = \"+fuenteDatoID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        banderaImportacionCamposFuenteDatosINICIO++;\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        banderaImportacionCamposFuenteDatosINICIO++;\n                        arregloDeFuentesDeDatos[index].atributos = result.recordset;\n                        this.revisarFinImportacionCamposFuenteDatos();\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    revisarFinImportacionCamposFuenteDatos () {\n        if(banderaImportacionCamposFuenteDatosINICIO == banderaImportacionCamposFuenteDatosFIN) {\n            arregloDeVariables = [];\n            this.traerVariables();\n        }\n    }\n\n    traerVariables() {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Variables\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        arregloDeVariables = result.recordset;\n                        banderaImportacionCamposVariablesINICIO = 0;\n                        banderaImportacionCamposVariablesFIN = arregloDeVariables.length;\n                        for (var i = 0; i < arregloDeVariables.length; i++) {\n                            this.traerAtributosVariables(arregloDeVariables[i].ID, i);\n                        };\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    traerAtributosVariables (variableID, index) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from FuenteDatosCampos where variableID = \"+variableID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        banderaImportacionCamposVariablesINICIO++;\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        banderaImportacionCamposVariablesINICIO++;\n                        arregloDeVariables[index].atributos = result.recordset;\n                        this.revisarFinImportacionCamposVariables();\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    revisarFinImportacionCamposVariables () {\n        if(banderaImportacionCamposVariablesINICIO == banderaImportacionCamposVariablesFIN) {\n            this.inicioTraerConeccionesATablas();\n        }\n    }\n\n    inicioTraerConeccionesATablas () {\n        banderaImportacionConecionesATablasINICIO = 0;\n        banderaImportacionConecionesATablasFIN = 0;\n        arregloConecionesATablas = [];\n        for (var i = 0; i < arregloDeFuentesDeDatos.length; i++) {\n            if(this.noHaSidoImportadaConeccion(arregloDeFuentesDeDatos[i])) {\n                banderaImportacionConecionesATablasFIN++;\n                //para asegurar que ID no sea asyncrono\n                arregloConecionesATablas[i].push({ID: arregloDeFuentesDeDatos[i].tablaID});\n                this.traerConeccionesATablas(arregloDeFuentesDeDatos[i].tablaID, i);\n            }\n        };\n    }\n\n    noHaSidoImportadaConeccion (fuenteDeDato) {\n        for (var i = 0; i < arregloConecionesATablas.length; i++) {\n            if(arregloConecionesATablas[i].ID == fuenteDeDato.tablaID) {\n                return false;\n            }\n        };\n        return true;\n    }\n\n    traerConeccionesATablas (tablaID, indexARemplazar) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Tablas where ID = \"+tablaID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        banderaImportacionConecionesATablasINICIO++;\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        banderaImportacionConecionesATablasINICIO++;\n                        if(result.recordset.length > 0)\n                            arregloConecionesATablas[indexARemplazar] = arregloConecionesATablas.concat(result.recordset);\n                        this.finTraerConeccionesATablas();\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    finTraerConeccionesATablas () {\n        if(banderaImportacionConecionesATablasINICIO == banderaImportacionConecionesATablasFIN) {\n            this.inicioTraerResultadosDeFuenteDeDatos();\n        }\n    }\n\n    inicioTraerResultadosDeFuenteDeDatos () {\n        banderaImportacionValoresDeTablasDeFuenteDeDatosINICIO = 0;\n        banderaImportacionValoresDeTablasDeFuenteDeDatosFIN = 0;\n        arregloDeResultadosDeFuenteDeDatos = [];\n        for (var i = 0; i < arregloConecionesATablas.length; i++) {\n            banderaImportacionValoresDeTablasDeFuenteDeDatosFIN++;\n            this.traerResultadosDeFuenteDeDatos(arregloConecionesATablas[i]);\n        };\n    }\n\n    traerResultadosDeFuenteDeDatos (tabla, index) {\n        const pool = new sql.ConnectionPool({\n            user: tabla.usuario,\n            password: tabla.contrasena,\n            server: tabla.servidor,\n            database: tabla.baseDatos,\n            stream: true,\n            connectionTimeout: 900000,\n            requestTimeout: 900000,\n            pool: {\n                max: 40,\n                min: 0,\n                idleTimeoutMillis: 30000\n            },\n            options: {\n                useUTC: false\n            }\n        });\n        pool.connect(err => {\n            pool.request().query(\"select * from \"+tabla.tabla, (err, result) => {\n                banderaImportacionValoresDeTablasDeFuenteDeDatosINICIO++;\n                if(result.recordset != undefined && result.recordset.length > 0)\n                    arregloDeResultadosDeFuenteDeDatos.splice(index, 0, result.recordset);\n                this.finTraerResultadosDeFuenteDeDatos();\n            });\n        }); // fin pool connect\n    }\n\n    finTraerResultadosDeFuenteDeDatos () {\n        if(banderaImportacionValoresDeTablasDeFuenteDeDatosINICIO == banderaImportacionValoresDeTablasDeFuenteDeDatosFIN) {\n            this.iniciarHilo();\n        }\n    }\n\n    iniciarHilo () {\n        console.log('nivelMaximoVariables');\n        console.log(nivelMaximoVariables);\n        console.log('arregloDeFuentesDeDatos');\n        console.log(arregloDeFuentesDeDatos);\n        console.log('arregloDeVariables');\n        console.log(arregloDeVariables);\n        console.log('arregloDeResultadosDeFuenteDeDatos');\n        console.log(arregloDeResultadosDeFuenteDeDatos);\n        console.log('arregloConecionesATablas');\n        console.log(arregloConecionesATablas);\n    }\n\n    render() {\n        return (\n            <div>\n                <br/>\n                <a className={\"btn btn-brand btn-block btnWhiteColorHover font-bold font-20\"} style={{color: \"#fafafa\"}} onClick={this.iniciarCalculo}>Iniciar</a>\n                <br/>\n            </div>\n        );\n    }\n}\n"],"file":"Calculo.js"}