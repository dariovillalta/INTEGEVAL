{"version":3,"sources":["components/Calculo.js"],"names":["nivelMaximoVariables","arregloDeFuentesDeDatos","arregloDeVariables","arregloDeResultadosDeFuenteDeDatos","arregloConecionesATablas","banderaImportacionConecionesATablasINICIO","banderaImportacionConecionesATablasFIN","banderaImportacionResultadosDeFuenteDeDatosINICIO","banderaImportacionResultadosDeFuenteDeDatosFIN","myWorker","Worker","Calculo","props","iniciarCalculo","bind","getNivelMaximoCampos","getNivelMaximoVariables","traerCampos","traerVariables","inicioTraerConeccionesATablas","noHaSidoImportadaConeccion","traerConeccionesATablas","finTraerConeccionesATablas","inicioTraerResultadosDeFuenteDeDatos","traerResultadosDeFuenteDeDatos","finTraerResultadosDeFuenteDeDatos","iniciarHilo","transaction","sql","Transaction","pool","begin","err","rolledBack","on","aborted","request","Request","query","result","console","log","rollback","commit","recordset","length","nivel","i","tablaID","fuenteDeDato","ID","concat","tabla","index","ConnectionPool","user","usuario","password","contrasena","server","servidor","database","baseDatos","stream","connectionTimeout","requestTimeout","max","min","idleTimeoutMillis","options","useUTC","connect","undefined","splice","color","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport sql from 'mssql';\n\nvar nivelMaximoVariables = 0;\nvar arregloDeFuentesDeDatos = [];                           //Arreglo con el nombre de los campos o fuentes de datos\nvar arregloDeVariables = [];                                //Arreglo con el nombre de las variables\nvar arregloDeResultadosDeFuenteDeDatos = [];                //Arreglo con los valores de las tablas de fuentes de datos\nvar arregloConecionesATablas = [];                          //Arreglo con los valores para poder conetarse a las tablas\n\nvar banderaImportacionConecionesATablasINICIO = 0;           //Bandera para saber si termino de importar los valores para poder conetarse a las tablas\nvar banderaImportacionConecionesATablasFIN = 0;              //Bandera para saber si termino de importar los valores para poder conetarse a las tablas\nvar banderaImportacionResultadosDeFuenteDeDatosINICIO = 0;   //Bandera para saber si termino de importar los valores de las tablas de fuentes de datos\nvar banderaImportacionResultadosDeFuenteDeDatosFIN = 0;      //Bandera para saber si termino de importar los valores de las tablas de fuentes de datos\n\nconst myWorker = new Worker(\"./components/CalculoVariablesWorker.js\");\n\nexport default class Calculo extends React.Component {\n    constructor(props) {\n        super(props);\n        /*this.state = {\n            showLoadingScreen: false,\n            mensajeLoadingScreen: ''\n        }*/\n        this.iniciarCalculo = this.iniciarCalculo.bind(this);\n        this.getNivelMaximoCampos = this.getNivelMaximoCampos.bind(this);\n        this.getNivelMaximoVariables = this.getNivelMaximoVariables.bind(this);\n        this.traerCampos = this.traerCampos.bind(this);\n        this.traerVariables = this.traerVariables.bind(this);\n        this.inicioTraerConeccionesATablas = this.inicioTraerConeccionesATablas.bind(this);\n        this.noHaSidoImportadaConeccion = this.noHaSidoImportadaConeccion.bind(this);\n        this.traerConeccionesATablas = this.traerConeccionesATablas.bind(this);\n        this.finTraerConeccionesATablas = this.finTraerConeccionesATablas.bind(this);\n        this.inicioTraerResultadosDeFuenteDeDatos = this.inicioTraerResultadosDeFuenteDeDatos.bind(this);\n        this.traerResultadosDeFuenteDeDatos = this.traerResultadosDeFuenteDeDatos.bind(this);\n        this.finTraerResultadosDeFuenteDeDatos = this.finTraerResultadosDeFuenteDeDatos.bind(this);\n        this.iniciarHilo = this.iniciarHilo.bind(this);\n    }\n\n    iniciarCalculo() {\n        this.getNivelMaximoCampos();\n    }\n\n    getNivelMaximoCampos() {\n        nivelMaximoVariables = 0;\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select MAX(nivel) AS nivel from Campos\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        if(result.recordset.length > 0) {\n                            nivelMaximoVariables = result.recordset[0].nivel;\n                        }\n                        this.getNivelMaximoVariables();\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    getNivelMaximoVariables() {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select MAX(nivel) AS nivel from Variables\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        if(result.recordset.length > 0 && nivelMaximoVariables < result.recordset[0].nivel) {\n                            nivelMaximoVariables = result.recordset[0].nivel;\n                        }\n                        this.traerCampos();\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    traerCampos() {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Campos\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        arregloDeFuentesDeDatos = result.recordset;\n                        this.traerVariables();\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    traerVariables() {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Variables\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        arregloDeVariables = result.recordset;\n                        this.inicioTraerConeccionesATablas();\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    inicioTraerConeccionesATablas () {\n        banderaImportacionConecionesATablasINICIO = 0;\n        banderaImportacionConecionesATablasFIN = 0;\n        arregloConecionesATablas = [];\n        for (var i = 0; i < arregloDeFuentesDeDatos.length; i++) {\n            if(this.noHaSidoImportadaConeccion(arregloDeFuentesDeDatos[i])) {\n                banderaImportacionConecionesATablasFIN++;\n                this.traerConeccionesATablas(arregloDeFuentesDeDatos[i].tablaID);\n            }\n        };\n    }\n\n    noHaSidoImportadaConeccion (fuenteDeDato) {\n        for (var i = 0; i < arregloConecionesATablas.length; i++) {\n            if(arregloConecionesATablas[i].ID == fuenteDeDato.tablaID) {\n                return false;\n            }\n        };\n        return true;\n    }\n\n    traerConeccionesATablas (tablaID) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Tablas where ID = \"+tablaID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        banderaImportacionConecionesATablasINICIO++;\n                        if(result.recordset.length > 0)\n                            arregloConecionesATablas = arregloConecionesATablas.concat(result.recordset);\n                        this.finTraerConeccionesATablas();\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    finTraerConeccionesATablas () {\n        if(banderaImportacionConecionesATablasINICIO == banderaImportacionConecionesATablasFIN) {\n            this.inicioTraerResultadosDeFuenteDeDatos();\n        }\n    }\n\n    inicioTraerResultadosDeFuenteDeDatos () {\n        banderaImportacionResultadosDeFuenteDeDatosINICIO = 0;\n        banderaImportacionResultadosDeFuenteDeDatosFIN = 0;\n        arregloDeResultadosDeFuenteDeDatos = [];\n        for (var i = 0; i < arregloConecionesATablas.length; i++) {\n            banderaImportacionResultadosDeFuenteDeDatosFIN++;\n            this.traerResultadosDeFuenteDeDatos(arregloConecionesATablas[i]);\n        };\n    }\n\n    traerResultadosDeFuenteDeDatos (tabla, index) {\n        const pool = new sql.ConnectionPool({\n            user: tabla.usuario,\n            password: tabla.contrasena,\n            server: tabla.servidor,\n            database: tabla.baseDatos,\n            stream: true,\n            connectionTimeout: 900000,\n            requestTimeout: 900000,\n            pool: {\n                max: 40,\n                min: 0,\n                idleTimeoutMillis: 30000\n            },\n            options: {\n                useUTC: false\n            }\n        });\n        pool.connect(err => {\n            pool.request().query(\"select * from \"+tabla.tabla, (err, result) => {\n                banderaImportacionResultadosDeFuenteDeDatosINICIO++;\n                if(result.recordset != undefined && result.recordset.length > 0)\n                    arregloDeResultadosDeFuenteDeDatos.splice(index, 0, result.recordset);\n                this.finTraerResultadosDeFuenteDeDatos();\n            });\n        }); // fin pool connect\n    }\n\n    finTraerResultadosDeFuenteDeDatos () {\n        if(banderaImportacionResultadosDeFuenteDeDatosINICIO == banderaImportacionResultadosDeFuenteDeDatosFIN) {\n            this.iniciarHilo();\n        }\n    }\n\n    iniciarHilo () {\n        console.log('nivelMaximoVariables');\n        console.log(nivelMaximoVariables);\n        console.log('arregloDeFuentesDeDatos');\n        console.log(arregloDeFuentesDeDatos);\n        console.log('arregloDeVariables');\n        console.log(arregloDeVariables);\n        console.log('arregloDeResultadosDeFuenteDeDatos');\n        console.log(arregloDeResultadosDeFuenteDeDatos);\n        console.log('arregloConecionesATablas');\n        console.log(arregloConecionesATablas);\n    }\n\n    render() {\n        return (\n            <div>\n                <br/>\n                <a className={\"btn btn-brand btn-block btnWhiteColorHover font-bold font-20\"} style={{color: \"#fafafa\"}} onClick={this.iniciarCalculo}>Iniciar</a>\n                <br/>\n            </div>\n        );\n    }\n}\n"],"file":"Calculo.js"}