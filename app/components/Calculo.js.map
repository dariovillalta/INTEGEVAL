{"version":3,"sources":["components/Calculo.js"],"names":["nivelMaximoVariables","arregloDeFuentesDeDatos","arregloDeVariables","arregloDeReglas","arregloDeFormulas","arregloDeElementosDeFormulas","arregloConexionesATablas","arregloResultadosDeTablas","banderaImportacionCamposVariablesINICIO","banderaImportacionCamposVariablesFIN","banderaImportacionReglasCamposVariablesINICIO","banderaImportacionReglasCamposVariablesFIN","banderaImportacionFormulasCamposVariablesINICIO","banderaImportacionFormulasCamposVariablesFIN","banderaImportacionElementosFormulasCamposVariablesINICIO","banderaImportacionElementosFormulasCamposVariablesFIN","banderaImportacionConecionesATablasINICIO","banderaImportacionConecionesATablasFIN","banderaImportacionValoresDeTablasDeFuenteDeDatosINICIO","banderaImportacionValoresDeTablasDeFuenteDeDatosFIN","myWorker","Worker","Calculo","props","iniciarCalculo","bind","getNivelMaximoVariables","traerVariables","traerAtributosVariables","revisarFinImportacionCamposVariables","inicioTraerReglasDeCampos","traerReglasDeCampos","revisarFinImportacionReglasCampos","inicioTraerFormulasDeCampos","traerFormulasDeCampos","revisarFinImportacionFormulasCampos","inicioTraerElementosFormulasDeCampos","traerElementosFormulasDeCampos","revisarFinImportacionElementosFormulasCampos","inicioTraerConeccionesATablas","noHaSidoImportadaConeccion","traerConeccionesATablas","finTraerConeccionesATablas","inicioTraerResultadosDeFuenteDeDatos","traerResultadosDeFuenteDeDatos","finTraerResultadosDeFuenteDeDatos","iniciarHilo","transaction","sql","Transaction","pool","begin","err","rolledBack","on","aborted","request","Request","query","result","console","log","rollback","commit","recordset","length","nivel","i","ID","alert","variableID","index","atributos","j","variableCampoID","formulas","k","idFormula","fuenteDeDatos","l","push","idConexionTabla","fuenteDeDato","tablaID","indexARemplazar","tabla","ConnectionPool","user","usuario","password","contrasena","server","servidor","database","baseDatos","stream","connectionTimeout","requestTimeout","max","min","idleTimeoutMillis","options","useUTC","connect","undefined","splice","arregloAgrupacionElementosFormulaPorConexionATabla","m","codigoElementosFormula","codigoCalculoVariable","codigoRegla","color","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport sql from 'mssql';\n\nvar nivelMaximoVariables = 0;\nvar arregloDeFuentesDeDatos = [];                           //Arreglo con las fuentes de datos\n        //objeto: {tablaID, nombre, descripcion, esObjeto, objetoPadreID, guardar, nivel, [arreglo de atributos]}\n            //objeto arreglo de atributos: {nombre, tipo, formula}\nvar arregloDeVariables = [];                                //Arreglo con las variables\n        //objeto: {nombre, descripcion, esObjeto, objetoPadreID, guardar, nivel, [arreglo de atributos]}\n            //objeto arreglo de atributos: {nombre, tipo, formula}\nvar arregloDeReglas = [];                   //Arreglo con las reglas / instrucciones correspondientes a la posicion del atributo\nvar arregloDeFormulas = [];                 //Arreglo con las formulas / asignaciones correspondientes a la posicion del atributo\nvar arregloDeElementosDeFormulas = [];      //Arreglo con las fuentes de datos correspondientes a la posicion de la formula\nvar arregloConexionesATablas = [];          //Arreglo con los valores para poder conectarse a las tablas\nvar arregloResultadosDeTablas = [];         //Arreglo con los valores obtenidos despues de conectarse a las tablas\n\nvar banderaImportacionCamposVariablesINICIO = 0;                    //Bandera para saber si termino de importar los campos de las variables\nvar banderaImportacionCamposVariablesFIN = 0;                       //Bandera para saber si termino de importar los campos de las variables\nvar banderaImportacionReglasCamposVariablesINICIO = 0;              //Bandera para saber si termino de importar las reglas de los campos de las variables\nvar banderaImportacionReglasCamposVariablesFIN = 0;                 //Bandera para saber si termino de importar las reglas de los campos de las variables\nvar banderaImportacionFormulasCamposVariablesINICIO = 0;            //Bandera para saber si termino de importar las formulas de los campos de las variables\nvar banderaImportacionFormulasCamposVariablesFIN = 0;               //Bandera para saber si termino de importar las formulas de los campos de las variables\nvar banderaImportacionElementosFormulasCamposVariablesINICIO = 0;   //Bandera para saber si termino de importar los elementos de las formulas de los campos de las variables\nvar banderaImportacionElementosFormulasCamposVariablesFIN = 0;      //Bandera para saber si termino de importar los elementos de las formulas de los campos de las variables\nvar banderaImportacionConecionesATablasINICIO = 0;                  //Bandera para saber si termino de importar los valores para poder conetarse a las tablas\nvar banderaImportacionConecionesATablasFIN = 0;                     //Bandera para saber si termino de importar los valores para poder conetarse a las tablas\nvar banderaImportacionValoresDeTablasDeFuenteDeDatosINICIO = 0;     //Bandera para saber si termino de importar los valores de las tablas de fuentes de datos\nvar banderaImportacionValoresDeTablasDeFuenteDeDatosFIN = 0;        //Bandera para saber si termino de importar los valores de las tablas de fuentes de datos\n\nconst myWorker = new Worker(\"./components/CalculoVariablesWorker.js\");\n\nexport default class Calculo extends React.Component {\n    constructor(props) {\n        super(props);\n        /*this.state = {\n            showLoadingScreen: false,\n            mensajeLoadingScreen: ''\n        }*/\n        this.iniciarCalculo = this.iniciarCalculo.bind(this);\n        this.getNivelMaximoVariables = this.getNivelMaximoVariables.bind(this);\n        this.traerVariables = this.traerVariables.bind(this);\n        this.traerAtributosVariables = this.traerAtributosVariables.bind(this);\n        this.revisarFinImportacionCamposVariables = this.revisarFinImportacionCamposVariables.bind(this);\n        this.inicioTraerReglasDeCampos = this.inicioTraerReglasDeCampos.bind(this);\n        this.traerReglasDeCampos = this.traerReglasDeCampos.bind(this);\n        this.revisarFinImportacionReglasCampos = this.revisarFinImportacionReglasCampos.bind(this);\n        this.inicioTraerFormulasDeCampos = this.inicioTraerFormulasDeCampos.bind(this);\n        this.traerFormulasDeCampos = this.traerFormulasDeCampos.bind(this);\n        this.revisarFinImportacionFormulasCampos = this.revisarFinImportacionFormulasCampos.bind(this);\n        this.inicioTraerElementosFormulasDeCampos = this.inicioTraerElementosFormulasDeCampos.bind(this);\n        this.traerElementosFormulasDeCampos = this.traerElementosFormulasDeCampos.bind(this);\n        this.revisarFinImportacionElementosFormulasCampos = this.revisarFinImportacionElementosFormulasCampos.bind(this);\n        this.inicioTraerConeccionesATablas = this.inicioTraerConeccionesATablas.bind(this);\n        this.noHaSidoImportadaConeccion = this.noHaSidoImportadaConeccion.bind(this);\n        this.traerConeccionesATablas = this.traerConeccionesATablas.bind(this);\n        this.finTraerConeccionesATablas = this.finTraerConeccionesATablas.bind(this);\n        this.inicioTraerResultadosDeFuenteDeDatos = this.inicioTraerResultadosDeFuenteDeDatos.bind(this);\n        this.traerResultadosDeFuenteDeDatos = this.traerResultadosDeFuenteDeDatos.bind(this);\n        this.finTraerResultadosDeFuenteDeDatos = this.finTraerResultadosDeFuenteDeDatos.bind(this);\n        this.iniciarHilo = this.iniciarHilo.bind(this);\n    }\n\n    iniciarCalculo() {\n        this.getNivelMaximoVariables();\n    }\n\n    getNivelMaximoVariables() {\n        nivelMaximoVariables = 0;\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select MAX(nivel) AS nivel from VariablesCampos\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        if(result.recordset.length > 0) {\n                            nivelMaximoVariables = result.recordset[0].nivel;\n                        }\n                        arregloDeVariables = [];\n                        this.traerVariables();\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    traerVariables() {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Variables\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        arregloDeVariables = result.recordset;\n                        banderaImportacionCamposVariablesINICIO = 0;\n                        banderaImportacionCamposVariablesFIN = arregloDeVariables.length;\n                        for (var i = 0; i < arregloDeVariables.length; i++) {\n                            this.traerAtributosVariables(arregloDeVariables[i].ID, i);\n                        };\n                        if(arregloDeVariables.length == 0) {\n                            alert(\"No existen variables\");\n                        }\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    traerAtributosVariables (variableID, index) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from VariablesCampos where variableID = \"+variableID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        banderaImportacionCamposVariablesINICIO++;\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        banderaImportacionCamposVariablesINICIO++;\n                        arregloDeVariables[index].atributos = result.recordset;\n                        this.revisarFinImportacionCamposVariables();\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    revisarFinImportacionCamposVariables () {\n        if(banderaImportacionCamposVariablesINICIO == banderaImportacionCamposVariablesFIN) {\n            this.inicioTraerReglasDeCampos();\n        }\n    }\n\n    inicioTraerReglasDeCampos () {\n        banderaImportacionReglasCamposVariablesINICIO = 0;\n        banderaImportacionReglasCamposVariablesFIN = 0;\n        for (var i = 0; i < arregloDeVariables.length; i++) {\n            for (var j = 0; j < arregloDeVariables[i].atributos.length; j++) {\n                banderaImportacionReglasCamposVariablesFIN++;\n                this.traerReglasDeCampos(arregloDeVariables[i].atributos[j].ID, i, j);\n            };\n        };\n    }\n\n    traerReglasDeCampos (variableCampoID, i, j) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Reglas where campoVariablePadreID = \"+variableCampoID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        banderaImportacionReglasCamposVariablesINICIO++;\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        banderaImportacionReglasCamposVariablesINICIO++;\n                        arregloDeVariables[i].atributos[j].formulas = result.recordset;\n                        this.revisarFinImportacionReglasCampos();\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    revisarFinImportacionReglasCampos () {\n        if(banderaImportacionReglasCamposVariablesINICIO == banderaImportacionReglasCamposVariablesFIN) {\n            this.inicioTraerFormulasDeCampos();\n        }\n    }\n\n    inicioTraerFormulasDeCampos () {\n        banderaImportacionFormulasCamposVariablesINICIO = 0;\n        banderaImportacionFormulasCamposVariablesFIN = 0;\n        for (var i = 0; i < arregloDeVariables.length; i++) {\n            for (var j = 0; j < arregloDeVariables[i].atributos.length; j++) {\n                banderaImportacionFormulasCamposVariablesFIN++;\n                this.traerFormulasDeCampos(arregloDeVariables[i].atributos[j].ID, i, j);\n            };\n        };\n    }\n\n    traerFormulasDeCampos (variableCampoID, i, j) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from FormulasVariablesCampos where variableCampoID = \"+variableCampoID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        banderaImportacionFormulasCamposVariablesINICIO++;\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        banderaImportacionFormulasCamposVariablesINICIO++;\n                        arregloDeVariables[i].atributos[j].formulas = result.recordset;\n                        this.revisarFinImportacionFormulasCampos();\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    revisarFinImportacionFormulasCampos () {\n        if(banderaImportacionFormulasCamposVariablesINICIO == banderaImportacionFormulasCamposVariablesFIN) {\n            this.inicioTraerElementosFormulasDeCampos();\n        }\n    }\n\n    inicioTraerElementosFormulasDeCampos () {\n        banderaImportacionElementosFormulasCamposVariablesINICIO = 0;\n        banderaImportacionElementosFormulasCamposVariablesFIN = 0;\n        for (var i = 0; i < arregloDeVariables.length; i++) {\n            for (var j = 0; j < arregloDeVariables[i].atributos.length; j++) {\n                for (var k = 0; k < arregloDeVariables[i].atributos[j].formulas.length; k++) {\n                    banderaImportacionElementosFormulasCamposVariablesFIN++;\n                    this.traerElementosFormulasDeCampos(arregloDeVariables[i].atributos[j].formulas[k].ID, i, j, k);\n                };\n            };\n        };\n    }\n\n    traerElementosFormulasDeCampos (idFormula, i, j, k) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from ElementoFormulasVariablesCampos where idFormula = \"+idFormula, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        banderaImportacionElementosFormulasCamposVariablesINICIO++;\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        banderaImportacionElementosFormulasCamposVariablesINICIO++;\n                        arregloDeVariables[i].atributos[j].formulas[k].fuenteDeDatos = result.recordset;\n                        this.revisarFinImportacionElementosFormulasCampos();\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    revisarFinImportacionElementosFormulasCampos () {\n        if(banderaImportacionElementosFormulasCamposVariablesINICIO == banderaImportacionElementosFormulasCamposVariablesFIN) {\n            this.inicioTraerConeccionesATablas();\n        }\n    }\n\n    inicioTraerConeccionesATablas () {\n        banderaImportacionConecionesATablasINICIO = 0;\n        banderaImportacionConecionesATablasFIN = 0;\n        arregloConexionesATablas = [];\n        for (var i = 0; i < arregloDeVariables.length; i++) {\n            for (var j = 0; j < arregloDeVariables[i].atributos.length; j++) {\n                for (var k = 0; k < arregloDeVariables[i].atributos[j].formulas.length; k++) {\n                    for (var l = 0; l < arregloDeVariables[i].atributos[j].formulas[k].fuenteDeDatos.length; l++) {\n                        if(this.noHaSidoImportadaConeccion(arregloDeVariables[i].atributos[j].formulas[k].fuenteDeDatos[l])) {\n                            banderaImportacionConecionesATablasFIN++;\n                            //para asegurar que ID no sea asyncrono\n                            arregloConexionesATablas.push({ID: arregloDeVariables[i].atributos[j].formulas[k].fuenteDeDatos[l].idConexionTabla});\n                            arregloDeVariables[i].atributos[j].formulas[k].fuenteDeDatos[l]\n                            this.traerConeccionesATablas(arregloDeVariables[i].atributos[j].formulas[k].fuenteDeDatos[l].idConexionTabla, arregloConexionesATablas.length-1);\n                        }\n                    };\n                };\n            };\n        };\n    }\n\n    noHaSidoImportadaConeccion (fuenteDeDato) {\n        for (var i = 0; i < arregloConexionesATablas.length; i++) {\n            if(arregloConexionesATablas[i].ID == fuenteDeDato.idConexionTabla) {\n                return false;\n            }\n        };\n        return true;\n    }\n\n    traerConeccionesATablas (tablaID, indexARemplazar) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Tablas where ID = \"+tablaID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        banderaImportacionConecionesATablasINICIO++;\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        banderaImportacionConecionesATablasINICIO++;\n                        if(result.recordset.length > 0)\n                            arregloConexionesATablas[indexARemplazar] = result.recordset[0];\n                        this.finTraerConeccionesATablas();\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    finTraerConeccionesATablas () {\n        if(banderaImportacionConecionesATablasINICIO == banderaImportacionConecionesATablasFIN) {\n            this.inicioTraerResultadosDeFuenteDeDatos();\n        }\n    }\n\n    inicioTraerResultadosDeFuenteDeDatos () {\n        banderaImportacionValoresDeTablasDeFuenteDeDatosINICIO = 0;\n        banderaImportacionValoresDeTablasDeFuenteDeDatosFIN = 0;\n        arregloResultadosDeTablas = [];\n        for (var i = 0; i < arregloConexionesATablas.length; i++) {\n            banderaImportacionValoresDeTablasDeFuenteDeDatosFIN++;\n            this.traerResultadosDeFuenteDeDatos(arregloConexionesATablas[i]);\n        };\n    }\n\n    traerResultadosDeFuenteDeDatos (tabla, index) {\n        const pool = new sql.ConnectionPool({\n            user: tabla.usuario,\n            password: tabla.contrasena,\n            server: tabla.servidor,\n            database: tabla.baseDatos,\n            stream: true,\n            connectionTimeout: 900000,\n            requestTimeout: 900000,\n            pool: {\n                max: 40,\n                min: 0,\n                idleTimeoutMillis: 30000\n            },\n            options: {\n                useUTC: false\n            }\n        });\n        pool.connect(err => {\n            pool.request().query(\"select * from \"+tabla.tabla, (err, result) => {\n                banderaImportacionValoresDeTablasDeFuenteDeDatosINICIO++;\n                if(result.recordset != undefined && result.recordset.length > 0)\n                    arregloResultadosDeTablas.splice(index, 0, result.recordset);\n                this.finTraerResultadosDeFuenteDeDatos();\n            });\n        }); // fin pool connect\n    }\n\n    finTraerResultadosDeFuenteDeDatos () {\n        if(banderaImportacionValoresDeTablasDeFuenteDeDatosINICIO == banderaImportacionValoresDeTablasDeFuenteDeDatosFIN) {\n            this.iniciarHilo();\n        }\n    }\n\n    iniciarHilo () {\n        console.log('nivelMaximoVariables');\n        console.log(nivelMaximoVariables);\n        console.log('arregloDeFuentesDeDatos');\n        console.log(arregloDeFuentesDeDatos);\n        console.log('arregloDeVariables');\n        console.log(arregloDeVariables);\n        console.log('arregloResultadosDeTablas');\n        console.log(arregloResultadosDeTablas);\n        console.log('arregloConexionesATablas');\n        console.log(arregloConexionesATablas);\n        //DESCRIPCION DEL PROCEDIMIENTO\n        //1) PRIMERO CREAR CODIGO PARA CREAR VARIABLES DE ELEMENTOS DE FORMULAS, AGRUPADAS POR TABLAS CORRESPONDIENTES  -- SERA PRIMER METODO A LLAMAR\n        //2) CREAR METODO NIVEL XX, CONTENDRA LLAMADO A METODO 'CALCULO VARIABLES NIVEL XX', Y JUSTO DESPUES LLAMARÁ AL SIGUIENTE NIVEL QUE SIGUE, O AL METODO DE MENSAJE FINAL\n        //3) CREAR CODIGO 'CALCULO VARIABLES NIVEL XX'\n\n        //AGRUPANDO ELEMENTOS DE FORMULA POR CONEXION A TABLA\n        var arregloAgrupacionElementosFormulaPorConexionATabla = [];    //arreglo que contiene los elementos de formulas agrupados por tablas\n        for (var i = 0; i < arregloDeVariables.length; i++) {\n            for (var j = 0; j < arregloDeVariables[i].atributos.length; j++) {\n                for (var k = 0; k < arregloDeVariables[i].atributos[j].formulas.length; k++) {\n                    for (var l = 0; l < arregloDeVariables[i].atributos[j].formulas[k].fuenteDeDatos.length; l++) {\n                        for (var m = 0; m < arregloConexionesATablas.length; m++) {\n                            if (arregloDeVariables[i].atributos[j].formulas[k].fuenteDeDatos[l].idConexionTabla == arregloConexionesATablas[m].ID) {\n                                if(arregloAgrupacionElementosFormulaPorConexionATabla[m] == undefined)\n                                    arregloAgrupacionElementosFormulaPorConexionATabla[m] = 0;\n                                arregloAgrupacionElementosFormulaPorConexionATabla[m].push(arregloDeVariables[i].atributos[j].formulas[k].fuenteDeDatos[l]);\n                            }\n                        };\n                    };\n                };\n            };\n        };\n\n        //CREAR CODIGO DE LLENAR / CALCULAR ELEMENTOS DE FORMULAS\n        var codigoElementosFormula = '';\n        for (var i = 0; i < arregloConexionesATablas.length; i++) {\n            if(i != 0)\n                codigoElementosFormula += '\\n\\n';\n            codigoElementosFormula += 'for (int i = 0; i < arregloConexionesATablas['+i+'].length; i++) {';\n            for (var j = 0; j < arregloAgrupacionElementosFormulaPorConexionATabla[i].length; j++) {\n                var codigoCalculoVariable = codigoRegla(arregloAgrupacionElementosFormulaPorConexionATabla[i][j]);\n                for (var k = 0; k < codigoCalculoVariable.length; k++) {\n                    codigoElementosFormula += '\\n\\t' + codigoCalculoVariable[k];\n                };\n            };\n            codigoElementosFormula += '\\n}';\n        };\n    }\n\n    render() {\n        return (\n            <div>\n                <br/>\n                <a className={\"btn btn-brand btn-block btnWhiteColorHover font-bold font-20\"} style={{color: \"#fafafa\"}} onClick={this.iniciarCalculo}>Iniciar</a>\n                <br/>\n            </div>\n        );\n    }\n}\n"],"file":"Calculo.js"}