{"version":3,"sources":["components/InlineEdit.js"],"names":["InlineEdit","props","state","editMode","texto","setState","$","id","val","margin","hideEditMode","bind","height","width","display","marginRight","cursor","updateTexto","showEditMode","fontFamily","color","React","Component"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;IAEqBA,U;;;;;AACnB,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,KADC;AAEXC,MAAAA,KAAK,EAAE,MAAKH,KAAL,CAAWG;AAFP,KAAb;AAFiB;AAMlB;;;;mCAEc;AACb,WAAKC,QAAL,CAAc;AACZF,QAAAA,QAAQ,EAAE;AADE,OAAd;AAGD;;;mCAEc;AACb,WAAKE,QAAL,CAAc;AACZF,QAAAA,QAAQ,EAAE;AADE,OAAd;AAGD;;;kCAEa;AACZ,WAAKE,QAAL,CAAc;AACZD,QAAAA,KAAK,EAAEE,CAAC,CAAC,MAAI,KAAKL,KAAL,CAAWM,EAAhB,CAAD,CAAqBC,GAArB,EADK;AAEZL,QAAAA,QAAQ,EAAE;AAFE,OAAd;AAID;;;6BAEO;AACN,UAAG,KAAKD,KAAL,CAAWC,QAAd,EAAwB;AACtB,eACE,6CACE;AAAO,UAAA,EAAE,EAAE,KAAKF,KAAL,CAAWM,EAAtB;AAA0B,UAAA,YAAY,EAAE,KAAKL,KAAL,CAAWE,KAAnD;AAA0D,UAAA,IAAI,EAAC,MAA/D;AAAsE,UAAA,SAAS,EAAE;AAAjF,UADF,EAEE;AAAK,UAAA,KAAK,EAAE;AAACK,YAAAA,MAAM,EAAE;AAAT;AAAZ,WACE;AAAK,UAAA,GAAG,EAAE,oCAAV;AAAgD,UAAA,OAAO,EAAE,KAAKC,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAAzD;AAAuF,UAAA,KAAK,EAAE;AAACC,YAAAA,MAAM,EAAE,MAAT;AAAiBC,YAAAA,KAAK,EAAE,MAAxB;AAAgCC,YAAAA,OAAO,EAAE,OAAzC;AAAkD,qBAAO,OAAzD;AAAkEC,YAAAA,WAAW,EAAE,MAA/E;AAAuFC,YAAAA,MAAM,EAAE;AAA/F;AAA9F,UADF,EAEE;AAAK,UAAA,GAAG,EAAE,gCAAV;AAA4C,UAAA,OAAO,EAAE,KAAKC,WAAL,CAAiBN,IAAjB,CAAsB,IAAtB,CAArD;AAAkF,UAAA,KAAK,EAAE;AAACC,YAAAA,MAAM,EAAE,MAAT;AAAiBC,YAAAA,KAAK,EAAE,MAAxB;AAAgCC,YAAAA,OAAO,EAAE,OAAzC;AAAkD,qBAAO,OAAzD;AAAkEC,YAAAA,WAAW,EAAE,MAA/E;AAAuFC,YAAAA,MAAM,EAAE;AAA/F;AAAzF,UAFF,CAFF,CADF;AASD,OAVD,MAUO;AACL,eACE;AAAK,UAAA,OAAO,EAAE,KAAKE,YAAL,CAAkBP,IAAlB,CAAuB,IAAvB;AAAd,WACE;AAAI,UAAA,EAAE,EAAE,KAAKV,KAAL,CAAWM,EAAnB;AAAuB,UAAA,KAAK,EAAE;AAACY,YAAAA,UAAU,EAAE,qBAAb;AAAoCC,YAAAA,KAAK,EAAE,SAA3C;AAAsDJ,YAAAA,MAAM,EAAE;AAA9D,WAA9B;AAAwG,UAAA,SAAS,EAAE;AAAnH,WAAsI,KAAKd,KAAL,CAAWE,KAAjJ,CADF,CADF;AAKD;AACF;;;;EA9CqCiB,kBAAMC,S","sourcesContent":["import React from 'react';\n\nexport default class InlineEdit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editMode: false,\n      texto: this.props.texto\n    }\n  }\n\n  showEditMode() {\n    this.setState({\n      editMode: true\n    });\n  }\n\n  hideEditMode() {\n    this.setState({\n      editMode: false\n    });\n  }\n\n  updateTexto() {\n    this.setState({\n      texto: $(\"#\"+this.props.id).val(),\n      editMode: false\n    });\n  }\n\n  render(){\n    if(this.state.editMode) {\n      return (\n        <div>\n          <input id={this.props.id} defaultValue={this.state.texto} type=\"text\" className={\"form-control\"}/>\n          <div style={{margin: \"2% 0% 0% 0%\"}}>\n            <img src={\"../assets/confirm-icons/cancel.png\"} onClick={this.hideEditMode.bind(this)} style={{height: \"20px\", width: \"20px\", display: \"block\", float: \"right\", marginRight: \"10px\", cursor: \"pointer\"}}></img>\n            <img src={\"../assets/confirm-icons/ok.png\"} onClick={this.updateTexto.bind(this)} style={{height: \"20px\", width: \"20px\", display: \"block\", float: \"right\", marginRight: \"10px\", cursor: \"pointer\"}}></img>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div onClick={this.showEditMode.bind(this)}>\n          <h4 id={this.props.id} style={{fontFamily: 'Circular Std Medium', color: \"#71748d\", cursor: \"pointer\"}} className={\"alert-heading\"} >{this.state.texto}</h4>\n        </div>\n      );\n    }\n  }\n}"],"file":"InlineEdit.js"}