{"version":3,"sources":["components/CeldaEquacion.js"],"names":["CeldaEquacion","width","props","height","index","formula","length","Array","isArray","variable","valor","clickEnFormula","tipo","localeCompare","React","Component"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;IAEqBA,a;;;;;;;;;;;;;6BACR;AACL,aACI;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAAnB;AAA0BE,UAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC,MAA7C;AAAqD,mBAAQ,KAAKD,KAAL,CAAWE,KAAX,IAAoB,KAAKF,KAAL,CAAWG,OAAX,CAAmBC,MAAnB,GAA0B,CAA/C,GAAoD,MAApD,GAA4D;AAAxH;AAAZ,SACMC,KAAK,CAACC,OAAN,CAAc,KAAKN,KAAL,CAAWO,QAAX,CAAoBC,KAAlC,IACE,gCAAC,oBAAD;AAAU,QAAA,OAAO,EAAE,KAAKR,KAAL,CAAWO,QAAX,CAAoBC,KAAvC;AAA8C,QAAA,cAAc,EAAE,KAAKR,KAAL,CAAWS,cAAzE;AAAyF,QAAA,UAAU,EAAE,KAArG;AAA4G,QAAA,MAAM,EAAE,MAApH;AAA4H,QAAA,KAAK,EAAE;AAAnI,QADF,GAGE;AAAK,QAAA,EAAE,EAAE,UAAQ,KAAKT,KAAL,CAAWO,QAAX,CAAoBC,KAArC;AAA4C,QAAA,KAAK,EAAE;AAACP,UAAAA,MAAM,EAAE,MAAT;AAAiBF,UAAAA,KAAK,EAAE;AAAxB;AAAnD,SAEQ,KAAKC,KAAL,CAAWO,QAAX,CAAoBG,IAApB,CAAyBC,aAAzB,CAAuC,UAAvC,KAAsD,CAAtD,GACE,gCAAC,iCAAD;AAAuB,QAAA,QAAQ,EAAE,KAAKX,KAAL,CAAWO,QAA5C;AAAsD,QAAA,cAAc,EAAE,KAAKP,KAAL,CAAWS,cAAjF;AAAiG,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAWE;AAAnH,QADF,GAEE,IAJV,EAOQ,KAAKF,KAAL,CAAWO,QAAX,CAAoBG,IAApB,CAAyBC,aAAzB,CAAuC,OAAvC,KAAmD,CAAnD,GACE,gCAAC,8BAAD;AAAoB,QAAA,QAAQ,EAAE,KAAKX,KAAL,CAAWO,QAAzC;AAAmD,QAAA,cAAc,EAAE,KAAKP,KAAL,CAAWS,cAA9E;AAA8F,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAWE;AAAhH,QADF,GAEE,IATV,EAYQ,KAAKF,KAAL,CAAWO,QAAX,CAAoBG,IAApB,CAAyBC,aAAzB,CAAuC,YAAvC,KAAwD,CAAxD,GACE,gCAAC,iCAAD;AAAuB,QAAA,QAAQ,EAAE,KAAKX,KAAL,CAAWO,QAA5C;AAAsD,QAAA,cAAc,EAAE,KAAKP,KAAL,CAAWS,cAAjF;AAAiG,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAWE;AAAnH,QADF,GAEE,IAdV,EAiBQ,KAAKF,KAAL,CAAWO,QAAX,CAAoBG,IAApB,CAAyBC,aAAzB,CAAuC,WAAvC,KAAuD,CAAvD,GACE,gCAAC,kCAAD;AAAwB,QAAA,QAAQ,EAAE,KAAKX,KAAL,CAAWO,QAA7C;AAAuD,QAAA,cAAc,EAAE,KAAKP,KAAL,CAAWS,cAAlF;AAAkG,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAWE;AAApH,QADF,GAEE,IAnBV,CAJR,CADJ;AA8BH;;;;EAhCsCU,kBAAMC,S","sourcesContent":["import React from 'react';\n\nimport Equacion from './Equacion.js';\nimport VariableCeldaEquacion from './VariableCeldaEquacion.js';\nimport SignoCeldaEquacion from './SignoCeldaEquacion.js';\nimport DivisionCeldaEquacion from './DivisionCeldaEquacion.js';\nimport IndicadorCeldaEquacion from './IndicadorCeldaEquacion.js';\n\nexport default class CeldaEquacion extends React.Component {\n    render() {\n        return (\n            <div style={{width: this.props.width, height: this.props.height, float: (this.props.index != this.props.formula.length-1) ? \"left\": \"right\"}}>\n                { Array.isArray(this.props.variable.valor) ? (\n                    <Equacion formula={this.props.variable.valor} clickEnFormula={this.props.clickEnFormula} isFirstRow={false} height={\"100%\"} width={\"100%\"}></Equacion>\n                ) : (\n                    <div id={\"fondo\"+this.props.variable.valor} style={{height: \"100%\", width: \"100%\"}}>\n                        {\n                            this.props.variable.tipo.localeCompare(\"variable\") == 0\n                            ? <VariableCeldaEquacion variable={this.props.variable} clickEnFormula={this.props.clickEnFormula} index={this.props.index}></VariableCeldaEquacion>\n                            : null\n                        }\n                        {\n                            this.props.variable.tipo.localeCompare(\"signo\") == 0\n                            ? <SignoCeldaEquacion variable={this.props.variable} clickEnFormula={this.props.clickEnFormula} index={this.props.index}></SignoCeldaEquacion>\n                            : null\n                        }\n                        {\n                            this.props.variable.tipo.localeCompare(\"division\\\\\") == 0\n                            ? <DivisionCeldaEquacion variable={this.props.variable} clickEnFormula={this.props.clickEnFormula} index={this.props.index}></DivisionCeldaEquacion>\n                            : null\n                        }\n                        {\n                            this.props.variable.tipo.localeCompare(\"indicador\") == 0\n                            ? <IndicadorCeldaEquacion variable={this.props.variable} clickEnFormula={this.props.clickEnFormula} index={this.props.index}></IndicadorCeldaEquacion>\n                            : null\n                        }\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n"],"file":"CeldaEquacion.js"}