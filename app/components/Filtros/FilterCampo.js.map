{"version":3,"sources":["components/Filtros/FilterCampo.js"],"names":["FilterCampo","props","checkFieldType","bind","valor","$","prop","console","log","campos","toString","length","campoSeleccionado","tipo","indexOf","esNumero","esBoolean","esFecha","esTexto","map","campo","i","nombre","React","Component"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;IAEqBA,W;;;;;AACjB,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;AACA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,+BAAtB;AAFe;AAGlB;;;;qCAEgB;AACb,UAAIC,KAAK,GAAGC,CAAC,CAAC,QAAD,CAAD,CAAYC,IAAZ,CAAiB,eAAjB,CAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAWJ,KAAvB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWQ,MAAvB;;AACA,UAAGL,KAAK,CAACM,QAAN,GAAiBC,MAAjB,GAA0B,CAA7B,EAAgC;AAC5B,YAAIC,iBAAiB,GAAG,KAAKX,KAAL,CAAWQ,MAAX,CAAkBL,KAAlB,CAAxB;;AACA,YAAGQ,iBAAiB,CAACC,IAAlB,CAAuBC,OAAvB,CAA+B,KAA/B,KAAyC,CAA5C,EAA+C;AAC3C,eAAKb,KAAL,CAAWc,QAAX;AACH,SAFD,MAEO,IAAGH,iBAAiB,CAACC,IAAlB,CAAuBC,OAAvB,CAA+B,KAA/B,KAAyC,CAA5C,EAA+C;AAClD,eAAKb,KAAL,CAAWe,SAAX;AACH,SAFM,MAEA,IAAGJ,iBAAiB,CAACC,IAAlB,CAAuBC,OAAvB,CAA+B,MAA/B,KAA0C,CAA7C,EAAgD;AACnD,eAAKb,KAAL,CAAWgB,OAAX;AACH,SAFM,MAEA,IAAGL,iBAAiB,CAACC,IAAlB,CAAuBC,OAAvB,CAA+B,SAA/B,KAA6C,CAAhD,EAAmD;AACtD,eAAKb,KAAL,CAAWiB,OAAX;AACH;AACJ;AACJ;;;6BAEQ;AACL,aACI,6CACI;AAAK,QAAA,SAAS,EAAE;AAAhB,SACC;AAAK,QAAA,SAAS,EAAE;AAAhB,SACO,gEADP,EAEO;AAAK,QAAA,SAAS,EAAE;AAAhB,SACI;AAAQ,QAAA,EAAE,EAAC,OAAX;AAAmB,QAAA,SAAS,EAAE,8BAA9B;AAA8D,QAAA,QAAQ,EAAE,KAAKhB;AAA7E,SACK,KAAKD,KAAL,CAAWQ,MAAX,CAAkBU,GAAlB,CAAsB,UAACC,KAAD,EAAQC,CAAR;AAAA,eACnB;AAAQ,UAAA,KAAK,EAAEA,CAAf;AAAkB,UAAA,GAAG,EAAEA;AAAvB,WAA2BD,KAAK,CAACE,MAAjC,CADmB;AAAA,OAAtB,CADL,CADJ,CAFP,CADD,CADJ,CADJ;AAgBH;;;;EAzCoCC,kBAAMC,S","sourcesContent":["import React from 'react';\n\nexport default class FilterCampo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.checkFieldType = this.checkFieldType.bind(this);\n    }\n\n    checkFieldType() {\n        let valor = $('#campo').prop('selectedIndex');\n        console.log(\"valor = \"+valor);\n        console.log(this.props.campos);\n        if(valor.toString().length > 0) {\n            let campoSeleccionado = this.props.campos[valor];\n            if(campoSeleccionado.tipo.indexOf(\"int\") == 0) {\n                this.props.esNumero();\n            } else if(campoSeleccionado.tipo.indexOf(\"bit\") == 0) {\n                this.props.esBoolean();\n            } else if(campoSeleccionado.tipo.indexOf(\"date\") == 0) {\n                this.props.esFecha();\n            } else if(campoSeleccionado.tipo.indexOf(\"varchar\") == 0) {\n                this.props.esTexto();\n            }\n        }\n    }\n    \n    render() {\n        return (\n            <div>\n                <div className={\"row\"}>\n                \t<div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                        <h3>Seleccionar Campo</h3>\n                        <div className={\"form-group\"}>\n                            <select id=\"campo\" className={\"form-control form-control-lg\"} onChange={this.checkFieldType}>\n                                {this.props.campos.map((campo, i) =>\n                                    <option value={i} key={i}>{campo.nombre}</option>\n                                )}\n                            </select>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n"],"file":"FilterCampo.js"}