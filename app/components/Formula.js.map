{"version":3,"sources":["components/Formula.js"],"names":["operaciones","operacionesNumero","valor","tipo","operacionesNumeroMasDeUnValor","operacionesFecha","operacionesBoolean","operacionesCadena","operacionesCadenaMasDeUnValor","variablesEscalares","objetos","camposDeObjetos","anchuraSeccionFormula","tablasOriginales","camposTablasOriginales","variablesEscalaresOriginales","variablesOriginales","camposVariablesOriginales","excelOriginales","camposExcelOriginales","formasOriginales","variablesOriginalesSQL","camposVariablesOriginalesSQL","variableSeleccionada","operacionSeleccionada","posicionDeIndicadorSeleccionadoEnFormula","posicionIndicador","posicionIndicadorAgregarEnFormula","operacionGuardarFormula","formulaGuardarFormula","seleccionValidaVarDivision","identificadorIndicador","seleccionManual","Formula","props","state","formula","tablas","camposTablas","variables","camposVariables","excel","camposDeExcel","formas","variablesSQL","camposVariablesSQL","clickEnFormula","bind","retornoSeleccionCampo","retornoSeleccionOperacion","existeReglaAsignacion","retornarCodigoOperacion","agregarAFormula","verificarSeleccionoTodosDivision","getFormula","crearArregloDeFormula","esOperacionAritmetica","esOperacionCompleja","getPalabraFormula","agregarFormulaAnchuraYAltura","findVariableInFormula","clearSelectsInFormulaIndicadores","clearSelectsInFormulaVariables","findSelectedIndicador","getSelectedVariables","getFormulaAndOperationText","iniciarGuardarFormula","guardarVariable","actualizarEstadoInputManual","loadTablas","initLoadTablasCampos","loadTablasCampos","loadScalarVariables","loadScalarVariablesFields","loadVariables","initLoadVariablesCampos","loadVariablesCampos","loadVariablesSQL","initLoadVariablesCamposSQL","loadVariablesCamposSQL","loadExcel","initLoadExcelCampos","loadExcelCampos","loadFormas","arreglo","variable","posicionEnArreglo","index","i","length","Array","isArray","localeCompare","posicion","$","removeClass","addClass","activa","undefined","hasClass","arregloVarSeleccionadas","push","e","nombre","copyTemp","setState","console","log","temp","tempVar","eval","esOperacion","posicionTabla","columnaSeleccionada","jQuery","extend","tipoVariable","nivelRegla","nivel","actualizarNivelNuevaRegla","operacion","retornoOperacion","codigo","val","isNaN","parseFloat","esFuenteDato","esObjeto","esInstruccionSQL","tipoOriginal","retornoCampo","formulaTemp","texto","varAInsertar","concat","self","setTimeout","arregloConexionesTemp","arregloCamposConexionesTemp","ID","tablaID","j","arregloVariablesTemp","arregloCamposVariablesTemp","variableID","arregloVariablesSQLTemp","arregloCamposVariablesSQLTemp","ultimoIndice1","substring","lastIndexOf","ultimoIndice2","parseInt","indiceVarAEliminar1","indiceVarAEliminar2","indiceVarAEliminarAnterior1","indiceVarAEliminarAnterior2","variableAEliminar","variableAntesEliminar","copyFormula","alert","posicionArreglo","ultimoIndice","noHaLeidoUltimoIndice","charAt","indicadorSeleccionado","split","pos1","pos2","esUltimoIndice","indicesVarSeleccionadas","arregloVarSeleccionadasPorIndicesInicial","posInicial","existe","posInicialComparacion","elMasCorto","seleccionVariablesContinuas","a","variableAEvaluar","variableDeComparacion","indiceOriginal","seleccionVarEnNumerador","esAntesDenominador","copiaAntiguaVariable","arregloAInsertarNuevo","indIzquierdo","width","height","signoDivision","division","indDerecho","posicionAInsertarNuevaDivsion","divisionAInsertar","transaction","sql","Transaction","pool","begin","err","rolledBack","on","aborted","request","Request","query","tablaVarEditar","idVarEditar","result","rollback","commit","recordset","nuevoArregloFormula","variableProcesarFormula","esVariable","caracter","posicionCaracter","palabra","campos","arregloFormula","esIndiceCero","contadorIndicadoresNumerador","contadorIndicadoresDenominador","contadorSignosNumerador","contadorSignosDenominador","contadorVariablesNumerador","contadorVariablesDenominador","esDespuesDivision","widthNumerador","restaTotalIndicadoresNumerador","restaTotalSignosNumerador","widthDenominador","restaTotalIndicadoresDenominador","restaTotalSignosDenominador","esDespuesDivisionWidth","esNivelRaiz","objetoFormula","variableCampoID","numeroDeFormulaDeVariable","anadirFormula","seleccion","arregloTemp","tabla","nombreTabla","array","nombreColumnas","COLUMN_NAME","DATA_TYPE","merge","excelArchivoID","excelVariableID","formaVariableID","navbar","display","alignItems","justifyContent","backgroundColor","color","overflowWrap","wordWrap","whiteSpace","borderRight","borderTop","borderBottom","padding","overflowY","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport sql from 'mssql';\n\nimport Equacion from './Equacion.js';\nimport ListasSeleVariableContenedorVariable from './ListasSeleVariableContenedorVariable.js';\nimport ListasSeleVariableContenedorOperador from './ListasSeleVariableContenedorOperador.js';\n\n//const campos = [{valor: \"idCLiente\", tipo: \"variable\"}, {valor: \"saldoTotal\", tipo: \"variable\"}, {valor: \"tipoPersona\", tipo: \"variable\"}, {valor: \"impuestosTotal\", tipo: \"variable\"}, {valor: \"nombreCliente\", tipo: \"variable\"}, {valor: \"diasMora\", tipo: \"variable\"}, {valor: \"mesMora\", tipo: \"variable\"}];\n//var tablas = [], camposTablas = [];\nconst operaciones = [];\n//const operaciones = [{valor: \"Asignar\", tipo: \"signo\"}, {valor: \"Contar\", tipo: \"signo\"}];\nconst operacionesNumero = [{valor: \"Contar\", tipo: \"signo\"}, {valor: \"Calcular Promedio\", tipo: \"signo\"}, {valor: \"Máximo\", tipo: \"signo\"}, {valor: \"Mínimo\", tipo: \"signo\"}, {valor: \"Autosumar\", tipo: \"signo\"}];\nconst operacionesNumeroMasDeUnValor = [{valor: \"+\", tipo: \"signo\"}, {valor: \"-\", tipo: \"signo\"}, {valor: \"*\", tipo: \"signo\"}, {valor: \"/\", tipo: \"signo\"}];\nconst operacionesFecha = [{valor: \"Contar\", tipo: \"signo\"}, {valor: \"Máximo\", tipo: \"signo\"}, {valor: \"Mínimo\", tipo: \"signo\"}, {valor: \"Día\", tipo: \"signo\"}, {valor: \"Mes\", tipo: \"signo\"}, {valor: \"Año\", tipo: \"signo\"}];\nconst operacionesBoolean = [{valor: \"Contar\", tipo: \"signo\"}];\nconst operacionesCadena = [{valor: \"Contar\", tipo: \"signo\"}];\nconst operacionesCadenaMasDeUnValor = [{valor: \"+\", tipo: \"signo\"}];\n/*const operaciones = [{valor: \"Asignar Valor Único\", tipo: \"signo\"}, {valor: \"Asignar Valor Único Si\", tipo: \"signo\"}, {valor: \"Asignar Valor Multiples\", tipo: \"signo\"}, {valor: \"Asignar Valor Multiples Si\", tipo: \"signo\"}, {valor: \"Contar\", tipo: \"signo\"}, {valor: \"Contar Si\", tipo: \"signo\"}];\nconst operacionesNumero = [{valor: \"Asignar Valor Único\", tipo: \"signo\"}, {valor: \"Asignar Valor Único Si\", tipo: \"signo\"}, {valor: \"Asignar Valor Multiples\", tipo: \"signo\"}, {valor: \"Asignar Valor Multiples Si\", tipo: \"signo\"}, {valor: \"Contar\", tipo: \"signo\"}, {valor: \"Contar Si\", tipo: \"signo\"}, {valor: \"Calcular Promedio\", tipo: \"signo\"}, {valor: \"Máximo\", tipo: \"signo\"}, {valor: \"Mínimo\", tipo: \"signo\"}, {valor: \"+\", tipo: \"signo\"}, {valor: \"-\", tipo: \"signo\"}, {valor: \"*\", tipo: \"signo\"}, {valor: \"/\", tipo: \"signo\"}];\nconst operacionesFecha = [{valor: \"Asignar Valor Único\", tipo: \"signo\"}, {valor: \"Asignar Valor Único Si\", tipo: \"signo\"}, {valor: \"Asignar Valor Multiples\", tipo: \"signo\"}, {valor: \"Asignar Valor Multiples Si\", tipo: \"signo\"}, {valor: \"Contar\", tipo: \"signo\"}, {valor: \"Contar Si\", tipo: \"signo\"}];\nconst operacionesBoolean = [{valor: \"Asignar Valor Único\", tipo: \"signo\"}, {valor: \"Asignar Valor Único Si\", tipo: \"signo\"}, {valor: \"Asignar Valor Multiples\", tipo: \"signo\"}, {valor: \"Asignar Valor Multiples Si\", tipo: \"signo\"}, {valor: \"Contar\", tipo: \"signo\"}, {valor: \"Contar Si\", tipo: \"signo\"}];\nconst operacionesCadena = [{valor: \"Asignar Valor Único\", tipo: \"signo\"}, {valor: \"Asignar Valor Único Si\", tipo: \"signo\"}, {valor: \"Asignar Valor Multiples\", tipo: \"signo\"}, {valor: \"Asignar Valor Multiples Si\", tipo: \"signo\"}, {valor: \"Contar\", tipo: \"signo\"}, {valor: \"Contar Si\", tipo: \"signo\"}, {valor: \"+\", tipo: \"signo\"}];*/\n\nconst variablesEscalares = [];\nconst objetos = [];\nconst camposDeObjetos = [];\nconst anchuraSeccionFormula = [\"100%\", \"50\", \"33%\", \"25%\", \"25%\", \"17%\", \"15%\", \"13%\", \"11%\", \"10%\", \"9%\"];\n\nvar tablasOriginales = [], camposTablasOriginales = [], variablesEscalaresOriginales = [], variablesOriginales = [], camposVariablesOriginales = [], excelOriginales = [], camposExcelOriginales = [], formasOriginales = [], variablesOriginalesSQL = [], camposVariablesOriginalesSQL = [];\n\nvar variableSeleccionada = [], operacionSeleccionada = [], posicionDeIndicadorSeleccionadoEnFormula = '', posicionIndicador ='';\n\nvar posicionIndicadorAgregarEnFormula = '';\n\nvar operacionGuardarFormula = '';\nvar formulaGuardarFormula = '';\n\n//bandera para ver si seleccion de variables para agregar division es correcta\nvar seleccionValidaVarDivision = true;\n//contador para poner identificadorIndicador\nvar identificadorIndicador = 0;\n\n//bandera para ver si selecciono\nvar seleccionManual = false;\n\n// diferencia posicionDeIndicadorSeleccionadoEnFormula y posicionIndicadorAgregarEnFormula\n//se usan en diferentes metodos, posicionDeIndicadorSeleccionadoEnFormula en clickFormula, y posicionIndicadorAgregarEnFormula para agregar var a formula\n\n/*var arrregloPrueba = [  {valor: \"\\\\\", width: \"5%\", height: \"100%\", tipo: \"indicador\", posicion: \"izquierda\"},\n                        {valor: [{valor: \"a\", width: \"100%\", height: \"49%\", tipo: \"variable\"},\n                            {valor: \"division\\\\\", width: \"100%\", height: \"2%\", tipo: \"division\\\\\"},\n                            {valor: \"b\", width: \"100%\", height: \"49%\", tipo: \"variable\"}],\n                        width: \"90%\", height: \"100%\", tipo: \"contenedorDivision\"},\n                        {valor: \"\\\\\", width: \"5%\", height: \"100%\", tipo: \"indicador\", posicion: \"derecha\"}];\nX = (SALDOS_MAYO)/(CLIENTES_RIESGOS)    |     (SONDEO_FINAL)/((CLIENTES_RIESGOS+FINALES_X)-B)\nINPUT: NOMBRE VARIABLE, CADA TECLA SE METE A ARREGLO A MOSTRAR, QUE ES INPUT EN MAYUSCULA SI ES LETRA, CADA ESPACIO ES _*/\n/*var arrregloPrueba = [\n                        {valor: \"\\\\\", width: \"5%\", height: \"100%\", tipo: \"indicador\", posicion: \"izquierda\"},\n                            {valor: [\n                                {valor: \"a\", width: \"49%\", height: \"49%\", tipo: \"variable\"},\n                                {valor: \"-\", width: \"2%\", height: \"49%\", tipo: \"signo\"},\n                                {valor: \"m\", width: \"49%\", height: \"49%\", tipo: \"variable\"},\n                                {valor: \"division\\\\\", width: \"100%\", height: \"2%\", tipo: \"division\\\\\"},\n                                {valor: \"b\", width: \"100%\", height: \"49%\", tipo: \"variable\"}],\n                            width: \"90%\", height: \"100%\", tipo: \"contenedorDivision\"},\n                        {valor: \"\\\\\", width: \"5%\", height: \"100%\", tipo: \"indicador\", posicion: \"derecha\"}];*/\n//var arrregloPrueba = [{valor: \"\\\\\", width: \"5%\", height: \"100%\", tipo: \"indicador\", posicion: \"izquierda\"}, {valor: [{valor: \"a\", width: \"49%\", height: \"49%\", tipo: \"variable\"}, {valor: \"-\", width: \"2%\", height: \"49%\", tipo: \"signo\"}, {valor: \"m\", width: \"49%\", height: \"49%\", tipo: \"variable\"}, {valor: \"division\\\\\", width: \"100%\", height: \"2%\", tipo: \"division\\\\\"}, {valor: \"b\", width: \"32%\", height: \"49%\", tipo: \"variable\"}, {valor: \"+\", width: \"2%\", height: \"49%\", tipo: \"signo\"}, {valor: \"zsasasas\", width: \"32%\", height: \"49%\", tipo: \"variable\"}, {valor: \"*\", width: \"2%\", height: \"49%\", tipo: \"signo\"}, {valor: \"d\", width: \"32%\", height: \"49%\", tipo: \"variable\"}], width: \"90%\", height: \"100%\", tipo: \"contenedorDivision\"}, {valor: \"\\\\\", width: \"5%\", height: \"100%\", tipo: \"indicador\", posicion: \"derecha\"}];\n//var arrregloPrueba = [{valor: \"\\\\\", width: \"5%\", height: \"100%\", tipo: \"indicador\", posicion: \"izquierda\"}, {valor: \"a\", width: \"90%\", height: \"100%\", tipo: \"variable\"}, {valor: \"\\\\\", width: \"5%\", height: \"100%\", tipo: \"indicador\", posicion: \"derecha\"}];\n/*var arrregloPrueba = [\n                        {valor: \"\\\\\", width: \"5%\", height: \"100%\", tipo: \"indicador\", posicion: \"izquierda\", identificadorIndicador: 0}, \n                            {valor: [\n                                {valor: \"a\", width: \"44%\", height: \"49%\", tipo: \"variable\"},\n                                {valor: \"-\", width: \"2%\", height: \"49%\", tipo: \"signo\"},\n                                {valor: \"\\\\\", width: \"5%\", height: \"49%\", tipo: \"indicador\", posicion: \"izquierda\", identificadorIndicador: 1},\n                                    {valor: [\n                                        {valor: \"saldo\", width: \"100%\", height: \"49%\", tipo: \"variable\"},\n                                        {valor: \"division\\\\\", width: \"100%\", height: \"2%\", tipo: \"division\\\\\"},\n                                        {valor: \"local\", width: \"100%\", height: \"49%\", tipo: \"variable\"}]\n                                    , width: \"44%\", height: \"49%\", tipo: \"contenedorDivision\"},\n                                {valor: \"\\\\\", width: \"5%\", height: \"49%\", tipo: \"indicador\", posicion: \"derecha\", identificadorIndicador: 2},\n                                {valor: \"division\\\\\", width: \"100%\", height: \"2%\", tipo: \"division\\\\\"},\n                                {valor: \"b\", width: \"100%\", height: \"49%\", tipo: \"variable\"}]\n                            , width: \"90%\", height: \"100%\", tipo: \"contenedorDivision\"},\n                        {valor: \"\\\\\", width: \"5%\", height: \"100%\", tipo: \"indicador\", posicion: \"derecha\", identificadorIndicador: 3}];*/\n/*var arrregloPrueba = [\n                        {valor: \"\\\\\", width: \"5%\", height: \"100%\", tipo: \"indicador\", posicion: \"izquierda\", identificadorIndicador: 0},\n                        {valor: [\n                            {valor: \"\\\\\", width: \"5%\", height: \"49%\", tipo: \"indicador\", posicion: \"izquierda\", identificadorIndicador: 1},\n                            {valor: [\n                                {valor: \"a\", width: \"100%\", height: \"49%\", tipo: \"variable\"},\n                                {valor: \"division\\\\\", width: \"100%\", height: \"2%\", tipo: \"division\\\\\"},\n                                {valor: \"b\", width: \"100%\", height: \"49%\", tipo: \"variable\"}]\n                            , width: \"90%\", height: \"49%\", tipo: \"contenedorDivision\"},\n                            {valor: \"\\\\\", width: \"5%\", height: \"49%\", tipo: \"indicador\", posicion: \"derecha\", identificadorIndicador: 2},\n                            {valor: \"division\\\\\", width: \"100%\", height: \"2%\", tipo: \"division\\\\\"},\n                            {valor: \"c\", width: \"100%\", height: \"49%\", tipo: \"variable\"},]\n                        , width: \"90%\", height: \"100%\", tipo: \"contenedorDivision\"},\n                        {valor: \"\\\\\", width: \"5%\", height: \"100%\", tipo: \"indicador\", posicion: \"derecha\", identificadorIndicador: 3}];*/\n\nexport default class Formula extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            formula: [],\n            tablas: [],\n            camposTablas: [],\n            variablesEscalares: [],\n            variables: [],\n            camposVariables: [],\n            operaciones: [],\n            excel: [],\n            camposDeExcel: [],\n            formas: [],\n            variablesSQL: [],\n            camposVariablesSQL: []\n        }\n        this.clickEnFormula = this.clickEnFormula.bind(this);\n        this.retornoSeleccionCampo = this.retornoSeleccionCampo.bind(this);\n        this.retornoSeleccionOperacion = this.retornoSeleccionOperacion.bind(this);\n        this.existeReglaAsignacion = this.existeReglaAsignacion.bind(this);\n        this.retornarCodigoOperacion = this.retornarCodigoOperacion.bind(this);\n        this.agregarAFormula = this.agregarAFormula.bind(this);\n        this.verificarSeleccionoTodosDivision = this.verificarSeleccionoTodosDivision.bind(this);\n        this.getFormula = this.getFormula.bind(this);\n        this.crearArregloDeFormula = this.crearArregloDeFormula.bind(this);\n        this.esOperacionAritmetica = this.esOperacionAritmetica.bind(this);\n        this.esOperacionCompleja = this.esOperacionCompleja.bind(this);\n        this.getPalabraFormula = this.getPalabraFormula.bind(this);\n        this.agregarFormulaAnchuraYAltura = this.agregarFormulaAnchuraYAltura.bind(this);\n        this.findVariableInFormula = this.findVariableInFormula.bind(this);\n        this.clearSelectsInFormulaIndicadores = this.clearSelectsInFormulaIndicadores.bind(this);\n        this.clearSelectsInFormulaVariables = this.clearSelectsInFormulaVariables.bind(this);\n        this.findSelectedIndicador = this.findSelectedIndicador.bind(this);\n        this.getSelectedVariables = this.getSelectedVariables.bind(this);\n        this.getFormulaAndOperationText = this.getFormulaAndOperationText.bind(this);\n        this.iniciarGuardarFormula = this.iniciarGuardarFormula.bind(this);\n        this.guardarVariable = this.guardarVariable.bind(this);\n        this.actualizarEstadoInputManual = this.actualizarEstadoInputManual.bind(this);\n        this.loadTablas = this.loadTablas.bind(this);\n        this.initLoadTablasCampos = this.initLoadTablasCampos.bind(this);\n        this.loadTablasCampos = this.loadTablasCampos.bind(this);\n        this.loadScalarVariables = this.loadScalarVariables.bind(this);\n        this.loadScalarVariablesFields = this.loadScalarVariablesFields.bind(this);\n        this.loadVariables = this.loadVariables.bind(this);\n        this.initLoadVariablesCampos = this.initLoadVariablesCampos.bind(this);\n        this.loadVariablesCampos = this.loadVariablesCampos.bind(this);\n        this.loadVariablesSQL = this.loadVariablesSQL.bind(this);\n        this.initLoadVariablesCamposSQL = this.initLoadVariablesCamposSQL.bind(this);\n        this.loadVariablesCamposSQL = this.loadVariablesCamposSQL.bind(this);\n        this.loadExcel = this.loadExcel.bind(this);\n        this.initLoadExcelCampos = this.initLoadExcelCampos.bind(this);\n        this.loadExcelCampos = this.loadExcelCampos.bind(this);\n        this.loadFormas = this.loadFormas.bind(this);\n    }\n\n    componentDidMount() {\n        /*console.log('arrregloPrueba');\n        console.log(arrregloPrueba);\n        this.findVariableInFormula(arrregloPrueba, \"b\", '');\n        console.log( posicionDeIndicadorSeleccionadoEnFormula );*/\n        //this.getFormula();\n        this.loadTablas();\n        this.loadScalarVariables();\n        this.loadVariables();\n        this.loadVariablesSQL();\n        this.loadExcel();\n        this.loadFormas();\n    }\n\n    findVariableInFormula (arreglo, variable, posicionEnArreglo, index) {\n        for (var i = 0; i < arreglo.length; i++) {\n            if( !Array.isArray(arreglo[i].valor) && arreglo[i].valor.localeCompare(variable) == 0 && index == i) {\n                posicionDeIndicadorSeleccionadoEnFormula = posicionEnArreglo+'['+i+']';\n            } else if( Array.isArray(arreglo[i].valor) ) {\n                this.findVariableInFormula (arreglo[i].valor, variable, posicionEnArreglo+'['+i+'].valor', index);\n            }\n        };\n    }\n\n    clearSelectsInFormulaIndicadores (arreglo) {\n        for (var i = 0; i < arreglo.length; i++) {\n            if( !Array.isArray(arreglo[i].valor)) {\n                if(arreglo[i].tipo.localeCompare(\"indicador\") == 0) {\n                    if(arreglo[i].posicion.localeCompare(\"izquierda\") == 0) {\n                        $(\"#indicadorIzquierdaDiv\"+arreglo[i].identificadorIndicador).removeClass(\"colorPunteroFormula\");\n                        $(\"#indicadorIzquierdaDiv\"+arreglo[i].identificadorIndicador).removeClass(\"blink\");\n                        $(\"#indicadorIzquierdaDiv\"+arreglo[i].identificadorIndicador).addClass(\"highlightFormulaBackground\");\n                    } else {\n                        $(\"#indicadorDerechaDiv\"+arreglo[i].identificadorIndicador).removeClass(\"colorPunteroFormula\");\n                        $(\"#indicadorDerechaDiv\"+arreglo[i].identificadorIndicador).removeClass(\"blink\");\n                        $(\"#indicadorDerechaDiv\"+arreglo[i].identificadorIndicador).addClass(\"highlightFormulaBackground\");\n                    }\n                } else {\n                    $(\"#indicadorIzquierda\"+arreglo[i].valor+i).removeClass(\"colorPunteroFormula\");\n                    $(\"#indicadorIzquierda\"+arreglo[i].valor+i).removeClass(\"blink\");\n                    $(\"#indicadorIzquierda\"+arreglo[i].valor+i).addClass(\"highlightFormulaBackground\");\n                    $(\"#indicadorDerecha\"+arreglo[i].valor+i).removeClass(\"colorPunteroFormula\");\n                    $(\"#indicadorDerecha\"+arreglo[i].valor+i).removeClass(\"blink\");\n                    $(\"#indicadorDerecha\"+arreglo[i].valor+i).addClass(\"highlightFormulaBackground\");\n                }\n            } else if( Array.isArray(arreglo[i].valor) ) {\n                this.clearSelectsInFormulaIndicadores (arreglo[i].valor);\n            }\n        };\n    }\n\n    clearSelectsInFormulaVariables (arreglo) {\n        for (var i = 0; i < arreglo.length; i++) {\n            if( !Array.isArray(arreglo[i].valor) && arreglo[i].activa != undefined) {\n                arreglo[i].activa = false;\n            } else if( Array.isArray(arreglo[i].valor) ) {\n                this.clearSelectsInFormulaVariables (arreglo[i].valor);\n            }\n        };\n    }\n\n    findSelectedIndicador (arreglo, posicionEnArreglo) {\n        for (var i = 0; i < arreglo.length; i++) {\n            if( !Array.isArray(arreglo[i].valor)) {\n                if(arreglo[i].tipo.localeCompare(\"indicador\") == 0) {\n                    if(arreglo[i].posicion.localeCompare(\"izquierda\") == 0) {\n                        if ($(\"#indicadorIzquierdaDiv\"+arreglo[i].identificadorIndicador).hasClass(\"colorPunteroFormula\") ) {\n                            posicionIndicadorAgregarEnFormula = posicionEnArreglo+'['+i+'].valor';\n                        }\n                    } else {\n                        if ($(\"#indicadorDerechaDiv\"+arreglo[i].identificadorIndicador).hasClass(\"colorPunteroFormula\") ) {\n                            posicionIndicadorAgregarEnFormula = posicionEnArreglo+'['+i+'].valor';\n                        }\n                    }\n                } else {\n                    if ($(\"#indicadorIzquierda\"+arreglo[i].valor+i).hasClass(\"colorPunteroFormula\") ) {\n                        posicionIndicadorAgregarEnFormula = posicionEnArreglo+'['+i+'].valor';\n                    }\n                    if ($(\"#indicadorDerecha\"+arreglo[i].valor+i).hasClass(\"colorPunteroFormula\") ) {\n                        posicionIndicadorAgregarEnFormula = posicionEnArreglo+'['+i+'].valor';\n                    }\n                }\n            } else if( Array.isArray(arreglo[i].valor) ) {\n                this.findSelectedIndicador (arreglo[i].valor, posicionEnArreglo+'['+i+'].valor');\n            }\n        };\n    }\n\n    getSelectedVariables (arreglo, arregloVarSeleccionadas, posicionEnArreglo) {\n        for (var i = 0; i < arreglo.length; i++) {\n            if( !Array.isArray(arreglo[i].valor) && arreglo[i].activa ) {\n                arregloVarSeleccionadas.push(posicionEnArreglo+'['+i+']');\n            } else if( Array.isArray(arreglo[i].valor) ) {\n                this.getSelectedVariables (arreglo[i].valor, arregloVarSeleccionadas, posicionEnArreglo+'['+i+'].valor');\n            }\n        };\n    }\n\n    clickEnFormula (e, posicion, nombre, index) {\n        var copyTemp = [...this.state.formula];\n        if(posicion != null) {\n            this.clearSelectsInFormulaVariables(copyTemp);\n            this.setState({\n                formula: copyTemp\n            });\n        }\n        console.log('posicion')\n        console.log(posicion)\n        console.log('nombre')\n        console.log(nombre)\n        console.log('index')\n        console.log(index)\n        this.clearSelectsInFormulaIndicadores(this.state.formula);\n        if(posicion == null) {\n            posicionIndicador = '';\n            this.findVariableInFormula(this.state.formula, nombre, '', index);\n            var temp = [...this.state.formula];\n            var tempVar;\n            console.log('posicionDeIndicadorSeleccionadoEnFormula')\n            console.log(posicionDeIndicadorSeleccionadoEnFormula)\n            eval(\"tempVar = temp\"+posicionDeIndicadorSeleccionadoEnFormula);\n            tempVar.activa = !tempVar.activa;\n            //temp.splice(index, 1, tempVar);\n            this.setState({\n                formula: temp\n            });\n        } else if (posicion.localeCompare(\"izquierda\") == 0) {\n            posicionIndicador = 'izquierda';\n            $(\"#indicadorIzquierda\"+nombre+index).addClass(\"colorPunteroFormula\");\n            $(\"#indicadorIzquierda\"+nombre+index).addClass(\"blink\");\n            $(\"#indicadorIzquierda\"+nombre+index).removeClass(\"highlightFormulaBackground\");\n            this.findVariableInFormula(this.state.formula, nombre, '', index);\n        } else if (posicion.localeCompare(\"derecha\") == 0) {\n            posicionIndicador = 'derecha';\n            $(\"#indicadorDerecha\"+nombre+index).addClass(\"colorPunteroFormula\");\n            $(\"#indicadorDerecha\"+nombre+index).addClass(\"blink\");\n            $(\"#indicadorDerecha\"+nombre+index).removeClass(\"highlightFormulaBackground\");\n            this.findVariableInFormula(this.state.formula, nombre, '', index);\n        } else if (posicion.localeCompare(\"empty\") == 0) {\n            if($(\"#indicadorFormulaVacia\").hasClass(\"colorPunteroFormula\")) {\n                $(\"#indicadorFormulaVacia\").removeClass(\"blink\");\n                $(\"#indicadorFormulaVacia\").removeClass(\"colorPunteroFormula\");\n            } else {\n                $(\"#indicadorFormulaVacia\").addClass(\"blink\");\n                $(\"#indicadorFormulaVacia\").addClass(\"colorPunteroFormula\");\n            }\n        } else if (posicion.localeCompare(\"indicadorIzq\") == 0) {\n            $(\"#indicadorIzquierdaDiv\"+nombre).addClass(\"colorPunteroFormula\");\n            $(\"#indicadorIzquierdaDiv\"+nombre).addClass(\"blink\");\n            $(\"#indicadorIzquierdaDiv\"+nombre).removeClass(\"highlightFormulaBackground\");\n            posicionIndicador = 'izquierda';\n        } else if (posicion.localeCompare(\"indicadorDer\") == 0) {\n            $(\"#indicadorDerechaDiv\"+nombre).addClass(\"colorPunteroFormula\");\n            $(\"#indicadorDerechaDiv\"+nombre).addClass(\"blink\");\n            $(\"#indicadorDerechaDiv\"+nombre).removeClass(\"highlightFormulaBackground\");\n            posicionIndicador = 'derecha';\n        }\n    }\n\n    retornoSeleccionCampo (esOperacion, variable, posicionTabla) {\n        if(variable[0].valor.length > 0) {\n            var columnaSeleccionada = variable[0];\n            console.log('columnaSeleccionada')\n            console.log(columnaSeleccionada)\n            variableSeleccionada = jQuery.extend(true, {}, variable[0]);\n            var tipoVariable = '';\n            if(columnaSeleccionada.tipo.localeCompare(\"int\") == 0 && this.state.formula.length == 0) {\n                tipoVariable = 'int';\n                this.setState({\n                    operaciones: operacionesNumero\n                });\n            } else if(columnaSeleccionada.tipo.localeCompare(\"decimal\") == 0 && this.state.formula.length == 0) {\n                tipoVariable = 'decimal';\n                this.setState({\n                    operaciones: operacionesNumero\n                });\n            } else if(columnaSeleccionada.tipo.localeCompare(\"varchar\") == 0 && this.state.formula.length == 0) {\n                tipoVariable = 'varchar';\n                this.setState({\n                    operaciones: operacionesCadena\n                });\n            } else if(columnaSeleccionada.tipo.localeCompare(\"date\") == 0 && this.state.formula.length == 0) {\n                tipoVariable = 'date';\n                this.setState({\n                    operaciones: operacionesFecha\n                });\n            } else if(columnaSeleccionada.tipo.localeCompare(\"bit\") == 0 && this.state.formula.length == 0) {\n                tipoVariable = 'bit';\n                this.setState({\n                    operaciones: operacionesBoolean\n                });\n            } else if(columnaSeleccionada.tipo.localeCompare(\"int\") == 0 && this.state.formula.length > 0) {\n                tipoVariable = 'int';\n                this.setState({\n                    operaciones: operacionesNumeroMasDeUnValor\n                });\n            } else if(columnaSeleccionada.tipo.localeCompare(\"decimal\") == 0 && this.state.formula.length > 0) {\n                tipoVariable = 'decimal';\n                this.setState({\n                    operaciones: operacionesNumeroMasDeUnValor\n                });\n            } else if(columnaSeleccionada.tipo.localeCompare(\"varchar\") == 0 && this.state.formula.length > 0) {\n                tipoVariable = 'varchar';\n                this.setState({\n                    operaciones: operacionesCadenaMasDeUnValor\n                });\n            }\n            var nivelRegla = 0;\n            if(variableSeleccionada.nivel != undefined)\n                nivelRegla = variableSeleccionada.nivel+1;\n            console.log('variableSeleccionada')\n            console.log(variableSeleccionada)\n            console.log('nivelRegla')\n            console.log(nivelRegla)\n            this.props.actualizarNivelNuevaRegla(nivelRegla);\n        }\n    }\n\n    retornoSeleccionOperacion (esOperacion, operacion) {\n        if(operacion[0].valor.length > 0) {\n            operacionSeleccionada = operacion[0];\n            this.props.retornoOperacion(operacionSeleccionada);\n        }\n    }\n\n    existeReglaAsignacion (operacion) {\n        for (var i = 0; i < this.state.operaciones.length; i++) {\n            if( (this.state.operaciones[i].valor.localeCompare(\"Asignar\") == 0 && this.state.operaciones[i].valor.localeCompare(operacion) == 0) || \n                (this.state.operaciones[i].valor.localeCompare(\"Contar\") == 0 && this.state.operaciones[i].valor.localeCompare(operacion) == 0) || \n                (this.state.operaciones[i].valor.localeCompare(\"Calcular Promedio\") == 0 && this.state.operaciones[i].valor.localeCompare(operacion) == 0) || \n                (this.state.operaciones[i].valor.localeCompare(\"Máximo\") == 0 && this.state.operaciones[i].valor.localeCompare(operacion) == 0) || \n                (this.state.operaciones[i].valor.localeCompare(\"Mínimo\") == 0 && this.state.operaciones[i].valor.localeCompare(operacion) == 0) ||\n                (this.state.operaciones[i].valor.localeCompare(\"Autosumar\") == 0 && this.state.operaciones[i].valor.localeCompare(operacion) == 0) /*|| \n                this.state.operaciones[i].valor.localeCompare(\"Sumar\") == 0*/) {\n                return true;\n            }\n        };\n        return false;\n    }\n\n    retornarCodigoOperacion (codigo) {\n        if(codigo.localeCompare(\"Asignar\") == 0) {\n            return \"ASIG\";\n        }\n        if(codigo.localeCompare(\"Contar\") == 0) {\n            return \"COUNT\";\n        }\n        if(codigo.localeCompare(\"Calcular Promedio\") == 0) {\n            return \"PROM\";\n        }\n        if(codigo.localeCompare(\"Máximo\") == 0) {\n            return \"MAX\";\n        }\n        if(codigo.localeCompare(\"Mínimo\") == 0) {\n            return \"MIN\";\n        }\n        if(codigo.localeCompare(\"Autosumar\") == 0) {\n            return \"AUTOSUM\";\n        }\n        if(codigo.localeCompare(\"Sumar\") == 0) {\n            return \"SUM\";\n        }\n        if(codigo.localeCompare(\"Día\") == 0) {\n            return \"DATE\";\n        }\n        if(codigo.localeCompare(\"Mes\") == 0) {\n            return \"MONTH\";\n        }\n        if(codigo.localeCompare(\"Año\") == 0) {\n            return \"YEAR\";\n        }\n    }\n\n    agregarAFormula () {\n        if (variableSeleccionada.valor != undefined || seleccionManual) {\n            console.log('seleccionManual')\n            console.log(seleccionManual)\n            if(seleccionManual) {\n                var valor = $(\"#valorManual\").val();\n                var tipo = 'varchar';\n                if(isNaN(valor)) {\n                    tipo = 'varchar';\n                } else {\n                    tipo = 'decimal';\n                    valor = parseFloat(valor);\n                }\n                variableSeleccionada = {\n                    valor: valor,\n                    tipo: tipo,\n                    activa: false,\n                    esFuenteDato: false,\n                    esObjeto: false,\n                    esInstruccionSQL: false,\n                    nivel: 0,\n                    tipoOriginal: tipo\n                }\n            }\n            //retornando tipo de variable\n            if (operacionSeleccionada.valor == undefined) {\n                this.props.retornoCampo(variableSeleccionada.tipo);\n            } else {\n                if(operacionSeleccionada.valor.localeCompare(\"Asignar\") == 0 || operacionSeleccionada.valor.localeCompare(\"Máximo\") == 0 || operacionSeleccionada.valor.localeCompare(\"Mínimo\") == 0 || operacionSeleccionada.valor.localeCompare(\"Autosumar\") == 0 || operacionSeleccionada.valor.localeCompare(\"Sumar\") == 0) {\n                    this.props.retornoCampo(variableSeleccionada.tipo);\n                }\n                if(operacionSeleccionada.valor.localeCompare(\"Contar\") == 0 || operacionSeleccionada.valor.localeCompare(\"Día\") == 0 || operacionSeleccionada.valor.localeCompare(\"Mes\") == 0 || operacionSeleccionada.valor.localeCompare(\"Año\") == 0) {\n                    this.props.retornoCampo(\"int\");\n                }\n                if(operacionSeleccionada.valor.localeCompare(\"Calcular Promedio\") == 0) {\n                    this.props.retornoCampo(\"decimal\");\n                }\n            }\n            if(this.state.formula.length == 0 && $(\"div\").hasClass(\"colorPunteroFormula\")) {        //caso inicial, agregar primera variable\n                console.log('1')\n                var formulaTemp = [...this.state.formula];\n                variableSeleccionada.activa = false;\n                var tipoOriginal = variableSeleccionada.tipo;\n                variableSeleccionada.tipo = \"variable\";\n                variableSeleccionada.texto = variableSeleccionada.valor;\n                variableSeleccionada.operacion = '';\n                variableSeleccionada.tipoOriginal = tipoOriginal;\n                //variableSeleccionada.tipoColumnaEnTabla = ;\n                if(this.existeReglaAsignacion(operacionSeleccionada.valor)) {\n                    variableSeleccionada.texto = this.retornarCodigoOperacion(operacionSeleccionada.valor) + \"(\" + variableSeleccionada.valor + \")\";\n                    variableSeleccionada.operacion = this.retornarCodigoOperacion(operacionSeleccionada.valor);\n                }\n                if (operacionSeleccionada.valor == undefined) {\n                    //cuando se agrega campo a formula para crear operacion ASIG\n                    variableSeleccionada.operacion = 'ASIG';\n                }/* else {\n                    variableSeleccionada.operacion = operacionSeleccionada.valor;\n                }*/\n                var varAInsertar = jQuery.extend(true, {}, variableSeleccionada);\n                formulaTemp = formulaTemp.concat(varAInsertar);\n                this.agregarFormulaAnchuraYAltura(formulaTemp, true);\n                this.setState({\n                    operaciones: [],\n                    formula: formulaTemp\n                });\n                var self = this;\n                setTimeout(function(){\n                    console.log(self.state.formula)\n                }, 2000);\n                console.log('tipoOriginal');\n                console.log(tipoOriginal);\n                console.log('camposTablasOriginales');\n                console.log(camposTablasOriginales);\n                console.log('camposTablasOriginales');\n                console.log(camposTablasOriginales);\n\n                //actualizando campos de variables a mostrar segun el campo que se acaba de agregar\n                if(variableSeleccionada.esFuenteDato) {\n                    //solo mostrar campos que sean de conexiones tabla\n                    var arregloConexionesTemp = [], arregloCamposConexionesTemp = [];\n                    for (var i = 0; i < tablasOriginales.length; i++) {\n                        if(tablasOriginales[i].ID == variableSeleccionada.tablaID) {\n                            arregloConexionesTemp.push(tablasOriginales[i]);\n                            for (var j = 0; j < camposTablasOriginales[i].length; j++) {\n                                if(arregloCamposConexionesTemp[arregloConexionesTemp.length-1] == undefined)\n                                    arregloCamposConexionesTemp[arregloConexionesTemp.length-1] = [];\n                                if(tipoOriginal.localeCompare(\"int\") == 0 || tipoOriginal.localeCompare(\"decimal\") == 0) {\n                                    if(camposTablasOriginales[i][j].tipo.localeCompare(\"int\") == 0 || camposTablasOriginales[i][j].tipo.localeCompare(\"decimal\") == 0)\n                                        arregloCamposConexionesTemp[arregloConexionesTemp.length-1].push(camposTablasOriginales[i][j]);\n                                } else {\n                                    if(camposTablasOriginales[i][j].tipo.localeCompare(tipoOriginal) == 0)\n                                        arregloCamposConexionesTemp[arregloConexionesTemp.length-1].push(camposTablasOriginales[i][j]);\n                                }\n                            };\n                            break;\n                        }\n                    };\n                    this.setState({\n                        tablas: arregloConexionesTemp,\n                        camposTablas: arregloCamposConexionesTemp,\n                        variablesEscalares: [],\n                        variables: [],\n                        camposVariables: [],\n                        variablesSQL: [],\n                        camposVariablesSQL: []\n                    });\n                } else {\n                    if(variableSeleccionada.esObjeto) {\n                        var arregloVariablesTemp = [], arregloCamposVariablesTemp = [];\n                        for (var i = 0; i < variablesOriginales.length; i++) {\n                            if(variablesOriginales[i].ID == variableSeleccionada.variableID) {\n                                arregloVariablesTemp.push(variablesOriginales[i]);\n                                for (var j = 0; j < camposVariablesOriginales[i].length; j++) {\n                                    if(arregloCamposVariablesTemp[arregloVariablesTemp.length-1] == undefined)\n                                        arregloCamposVariablesTemp[arregloVariablesTemp.length-1] = [];\n                                    if(tipoOriginal.localeCompare(\"int\") == 0 || tipoOriginal.localeCompare(\"decimal\") == 0) {\n                                        if(camposVariablesOriginales[i][j].tipo.localeCompare(\"int\") == 0 || camposVariablesOriginales[i][j].tipo.localeCompare(\"decimal\") == 0)\n                                            arregloCamposVariablesTemp[arregloVariablesTemp.length-1].push(camposVariablesOriginales[i][j]);\n                                    } else {\n                                        if(camposVariablesOriginales[i][j].tipo.localeCompare(tipoOriginal) == 0)\n                                            arregloCamposVariablesTemp[arregloVariablesTemp.length-1].push(camposVariablesOriginales[i][j]);\n                                    }\n                                };\n                                break;\n                            }\n                        };\n                        console.log(variablesEscalaresOriginales)\n                        this.setState({\n                            tablas: [],\n                            camposTablas: [],\n                            variablesEscalares: variablesEscalaresOriginales,\n                            variables: arregloVariablesTemp,\n                            camposVariables: arregloCamposVariablesTemp,\n                            variablesSQL: [],\n                            camposVariablesSQL: []\n                        });\n                    } else if(variableSeleccionada.esInstruccionSQL) {\n                        var arregloVariablesSQLTemp = [], arregloCamposVariablesSQLTemp = [];\n                        for (var i = 0; i < variablesOriginalesSQL.length; i++) {\n                            if(variablesOriginalesSQL[i].ID == variableSeleccionada.variableID) {\n                                arregloVariablesSQLTemp.push(variablesOriginalesSQL[i]);\n                                for (var j = 0; j < camposVariablesOriginalesSQL[i].length; j++) {\n                                    if(arregloCamposVariablesSQLTemp[arregloVariablesSQLTemp.length-1] == undefined)\n                                        arregloCamposVariablesSQLTemp[arregloVariablesSQLTemp.length-1] = [];\n                                    if(tipoOriginal.localeCompare(\"int\") == 0 || tipoOriginal.localeCompare(\"decimal\") == 0) {\n                                        if(camposVariablesOriginalesSQL[i][j].tipo.localeCompare(\"int\") == 0 || camposVariablesOriginalesSQL[i][j].tipo.localeCompare(\"decimal\") == 0)\n                                            arregloCamposVariablesSQLTemp[arregloVariablesSQLTemp.length-1].push(camposVariablesOriginalesSQL[i][j]);\n                                    } else {\n                                        if(camposVariablesOriginalesSQL[i][j].tipo.localeCompare(tipoOriginal) == 0)\n                                            arregloCamposVariablesSQLTemp[arregloVariablesSQLTemp.length-1].push(camposVariablesOriginalesSQL[i][j]);\n                                    }\n                                };\n                                break;\n                            }\n                        };\n                        this.setState({\n                            tablas: [],\n                            camposTablas: [],\n                            variablesEscalares: variablesEscalaresOriginales,\n                            variables: [],\n                            camposVariables: [],\n                            variablesSQL: arregloVariablesSQLTemp,\n                            camposVariablesSQL: arregloCamposVariablesSQLTemp\n                        });\n                    } else {\n                        this.setState({\n                            tablas: [],\n                            camposTablas: [],\n                            variablesEscalares: this.state.variablesEscalares,\n                            variables: this.state.variables,\n                            camposVariables: this.state.camposVariables,\n                            variablesSQL: this.state.variablesSQL,\n                            camposVariablesSQL: this.state.camposVariablesSQL\n                        });\n                    }\n                }\n            } else if (operacionSeleccionada.valor != undefined && operacionSeleccionada.valor.localeCompare(\"Borrar\") == 0) {\n                var arregloVarSeleccionadas = [];\n                this.getSelectedVariables (this.state.formula, arregloVarSeleccionadas, '');\n                console.log('arregloVarSeleccionadas')\n                console.log(arregloVarSeleccionadas)\n                if(arregloVarSeleccionadas.length == 1) {\n                    //viendo si tiene variable antes de var a eliminar\n                    var ultimoIndice1 = arregloVarSeleccionadas[0].substring(0, arregloVarSeleccionadas[0].lastIndexOf(']'));\n                    console.log('ultimoIndice1')\n                    console.log(ultimoIndice1)\n                    var ultimoIndice2 = ultimoIndice1.substring(ultimoIndice1.lastIndexOf('[')+1);\n                    console.log('ultimoIndice2')\n                    console.log(ultimoIndice2)\n                    if(parseInt(ultimoIndice2) != 0) {\n                        var indiceVarAEliminar1 = arregloVarSeleccionadas[0].substring(0, arregloVarSeleccionadas[0].lastIndexOf(']'));\n                        var indiceVarAEliminar2 = indiceVarAEliminar1.substring(indiceVarAEliminar1.lastIndexOf('[')+1);\n                        console.log('indiceVarAEliminar1')\n                        console.log(indiceVarAEliminar1)\n                        console.log('indiceVarAEliminar2')\n                        console.log(indiceVarAEliminar2)\n                        var indiceVarAEliminarAnterior1 = arregloVarSeleccionadas[0].substring(0, arregloVarSeleccionadas[0].lastIndexOf(']'));\n                        var indiceVarAEliminarAnterior2 = indiceVarAEliminar1.substring(indiceVarAEliminar1.lastIndexOf('[')+1);\n                        indiceVarAEliminarAnterior2 = parseInt(indiceVarAEliminarAnterior2)-1;\n                        console.log('indiceVarAEliminarAnterior1')\n                        console.log(indiceVarAEliminarAnterior1)\n                        console.log('indiceVarAEliminarAnterior2')\n                        console.log(indiceVarAEliminarAnterior2)\n                        var variableAEliminar, variableAntesEliminar;\n                        var copyFormula = [...this.state.formula];\n                        eval(\"variableAEliminar = this.state.formula\"+arregloVarSeleccionadas[0]);\n                        eval(\"copyFormula\"+arregloVarSeleccionadas[0].substring(0, arregloVarSeleccionadas[0].lastIndexOf('['))+\".splice(indiceVarAEliminar2, 1)\")\n                        console.log('arregloVarSeleccionadas[0].substring(0, arregloVarSeleccionadas[0].lastIndexOf([))')\n                        console.log( arregloVarSeleccionadas[0].substring(arregloVarSeleccionadas[0].lastIndexOf('[')) )\n                        eval(\"variableAntesEliminar = this.state.formula\"+arregloVarSeleccionadas[0].substring(0, arregloVarSeleccionadas[0].lastIndexOf('['))+\"[indiceVarAEliminarAnterior2]\");\n                        if(variableAntesEliminar.tipo.localeCompare(\"signo\") == 0)     \n                            eval(\"copyFormula\"+arregloVarSeleccionadas[0].substring(0, arregloVarSeleccionadas[0].lastIndexOf('['))+\".splice(indiceVarAEliminarAnterior2, 1)\")                   \n                        console.log('variableAEliminar')\n                        console.log(variableAEliminar)\n                        console.log('variableAntesEliminar')\n                        console.log(variableAntesEliminar)\n                        this.agregarFormulaAnchuraYAltura(copyFormula, true);\n                        this.setState({\n                            formula: copyFormula\n                        }, console.log(this.state.formula) );\n                    } else {\n                        var indiceVarAEliminar1 = arregloVarSeleccionadas[0].substring(0, arregloVarSeleccionadas[0].lastIndexOf(']'));\n                        var indiceVarAEliminar2 = indiceVarAEliminar1.substring(indiceVarAEliminar1.lastIndexOf('[')+1);\n                        console.log('indiceVarAEliminar1')\n                        console.log(indiceVarAEliminar1)\n                        console.log('indiceVarAEliminar2')\n                        console.log(indiceVarAEliminar2)\n                        var copyFormula = [...this.state.formula];\n                        console.log('arregloVarSeleccionadas[0].substring(0, arregloVarSeleccionadas[0].lastIndexOf([)+')\n                        console.log( arregloVarSeleccionadas[0].substring(0, arregloVarSeleccionadas[0].lastIndexOf('[')) )\n                        eval(\"copyFormula\"+arregloVarSeleccionadas[0].substring(0, arregloVarSeleccionadas[0].lastIndexOf('['))+\".splice(indiceVarAEliminar2, 1)\")\n                        this.agregarFormulaAnchuraYAltura(copyFormula, true);\n                        this.setState({\n                            formula: copyFormula\n                        }, console.log(this.state.formula) );\n                    }\n                } else if(arregloVarSeleccionadas.length > 1) {\n                    alert(\"Solo debe seleccionar una variable a eliminar.\");\n                } else {\n                    alert(\"Debe seleccionar por lo menos la variable a eliminar.\");\n                }\n            } else if(this.state.formula.length > 0 && $(\"div\").hasClass(\"colorPunteroFormula\") && operacionSeleccionada.valor != undefined && operacionSeleccionada.valor.localeCompare(\"/\") != 0) {\n                console.log('2')\n                var formulaTemp = [...this.state.formula];\n                //quitar cualquier operacion seleccionada anteriormente\n                for (var i = 0; i < formulaTemp.length; i++) {\n                    formulaTemp[i].operacion = 'FORMULA';\n                    formulaTemp[i].texto = formulaTemp[i].valor;\n                };\n                var tipoOriginal = variableSeleccionada.tipo;\n                variableSeleccionada.tipoOriginal = tipoOriginal;\n                variableSeleccionada.activa = false;\n                variableSeleccionada.tipo = \"variable\";\n                variableSeleccionada.texto = variableSeleccionada.valor;\n                variableSeleccionada.operacion = '';\n                if(this.existeReglaAsignacion(operacionSeleccionada.valor)) {\n                    variableSeleccionada.texto = this.retornarCodigoOperacion(operacionSeleccionada.valor) + \"(\" + variableSeleccionada.valor + \")\";\n                    variableSeleccionada.operacion = this.retornarCodigoOperacion(operacionSeleccionada.valor);\n                } else {\n                    variableSeleccionada.operacion = 'FORMULA';\n                }\n                var posicionArreglo = '', ultimoIndice = '', noHaLeidoUltimoIndice = true;\n                for (var i = posicionDeIndicadorSeleccionadoEnFormula.length - 1; i >= 0; i--) {\n                    if (!noHaLeidoUltimoIndice) {\n                        posicionArreglo += posicionDeIndicadorSeleccionadoEnFormula.charAt(i);\n                    }\n                    if (posicionDeIndicadorSeleccionadoEnFormula.charAt(i).localeCompare('[') != 0 && posicionDeIndicadorSeleccionadoEnFormula.charAt(i).localeCompare(']') != 0 && noHaLeidoUltimoIndice) {\n                        if( posicionDeIndicadorSeleccionadoEnFormula.charAt(i).localeCompare('[') != 0 && posicionDeIndicadorSeleccionadoEnFormula.charAt(i).localeCompare(']') != 0 )\n                            ultimoIndice += posicionDeIndicadorSeleccionadoEnFormula.charAt(i);\n                        if(posicionDeIndicadorSeleccionadoEnFormula.charAt(i).localeCompare('[') == 0) {\n                            noHaLeidoUltimoIndice = false;\n                        }\n                    }\n                };\n                var arregloVarSeleccionadas = [];\n                //this.getSelectedIndicador (this.state.formula, arregloVarSeleccionadas, '');\n                //this.findVariableInFormula(this.state.formula, nombre, '');\n                console.log('posicionDeIndicadorSeleccionadoEnFormula');\n                console.log(posicionDeIndicadorSeleccionadoEnFormula);\n                console.log('posicionArreglo');\n                console.log(posicionArreglo);\n                console.log('posicionIndicadorAgregarEnFormula antes');\n                console.log(posicionIndicadorAgregarEnFormula);\n                this.findSelectedIndicador (this.state.formula, '');\n                console.log('posicionIndicadorAgregarEnFormula despues');\n                console.log(posicionIndicadorAgregarEnFormula);\n                var indicadorSeleccionado;\n                //eval(\"indicadorSeleccionado = this.state.formula[\"+posicionIndicadorAgregarEnFormula.substring(0, posicionIndicadorAgregarEnFormula.lastIndexOf(\".\")))\n                //var tempVar;\n                //eval(\"tempVar = temp\"+posicionArreglo);\n                operacionSeleccionada.operacion = operacionSeleccionada.valor;\n                var varAInsertar = jQuery.extend(true, {}, variableSeleccionada);\n                if(posicionIndicador.localeCompare(\"derecha\") == 0) {\n                    /*if(posicionArreglo.length > 0) {\n                        formulaTemp[posicionArreglo].splice(parseInt(ultimoIndice)+1, 0, varAInsertar);\n                        formulaTemp[posicionArreglo].splice(parseInt(ultimoIndice)+1, 0, operacionSeleccionada);\n                    } else {\n                        formulaTemp.splice(parseInt(ultimoIndice)+1, 0, varAInsertar);\n                        formulaTemp.splice(parseInt(ultimoIndice)+1, 0, operacionSeleccionada);\n                    }*/\n                    if(posicionIndicadorAgregarEnFormula.split(\"[\").length > 2) {\n                        console.log('1');\n                        var pos1 = posicionIndicadorAgregarEnFormula.substring(posicionIndicadorAgregarEnFormula.lastIndexOf(\"[\")+1);\n                        console.log('pos1');\n                        console.log(pos1);\n                        var pos2 = pos1.substring(0, pos1.lastIndexOf(\"]\"));\n                        console.log('pos2');\n                        console.log(pos2);\n                        console.log('posicionIndicadorAgregarEnFormula.substring(0, posicionIndicadorAgregarEnFormula.lastIndexOf(\"[\"))');\n                        console.log(posicionIndicadorAgregarEnFormula.substring(0, posicionIndicadorAgregarEnFormula.lastIndexOf(\"[\")));\n                        console.log(\"console.log(formulaTemp\"+posicionIndicadorAgregarEnFormula.substring(0, posicionIndicadorAgregarEnFormula.lastIndexOf(\"[\"))+\".length)\" );\n                        eval(\"console.log(formulaTemp\"+posicionIndicadorAgregarEnFormula.substring(0, posicionIndicadorAgregarEnFormula.lastIndexOf(\"[\"))+\".length)\" );\n                        eval(\"console.log(formulaTemp\"+posicionIndicadorAgregarEnFormula.substring(0, posicionIndicadorAgregarEnFormula.lastIndexOf(\"[\"))+\".length == parseInt(pos2)+1)\" );\n                        var esUltimoIndice = false;\n                        eval(\"if (formulaTemp\"+posicionIndicadorAgregarEnFormula.substring(0, posicionIndicadorAgregarEnFormula.lastIndexOf(\"[\"))+\".length == parseInt(pos2)+1) esUltimoIndice = true\" );\n                        console.log('esUltimoIndice');\n                        console.log(esUltimoIndice);\n                        eval(\"formulaTemp\"+posicionIndicadorAgregarEnFormula.substring(0, posicionIndicadorAgregarEnFormula.lastIndexOf(\"[\"))+\".splice( parseInt(pos2)+1, 0, operacionSeleccionada)\" );\n                        eval(\"formulaTemp\"+posicionIndicadorAgregarEnFormula.substring(0, posicionIndicadorAgregarEnFormula.lastIndexOf(\"[\"))+\".splice( parseInt(pos2)+2, 0, varAInsertar)\" );\n                        /*if(esUltimoIndice) {\n                            eval(\"formulaTemp\"+posicionIndicadorAgregarEnFormula.substring(0, posicionIndicadorAgregarEnFormula.lastIndexOf(\"[\"))+\".splice( parseInt(pos2)+1, 0, operacionSeleccionada)\" );\n                            eval(\"formulaTemp\"+posicionIndicadorAgregarEnFormula.substring(0, posicionIndicadorAgregarEnFormula.lastIndexOf(\"[\"))+\".splice( parseInt(pos2)+1, 0, varAInsertar)\" );\n                        } else {\n                            eval(\"formulaTemp\"+posicionIndicadorAgregarEnFormula.substring(0, posicionIndicadorAgregarEnFormula.lastIndexOf(\"[\"))+\".splice( parseInt(pos2)+1, 0, varAInsertar)\" );\n                            eval(\"formulaTemp\"+posicionIndicadorAgregarEnFormula.substring(0, posicionIndicadorAgregarEnFormula.lastIndexOf(\"[\"))+\".splice( parseInt(pos2)+1, 0, operacionSeleccionada)\" );\n                        }*/\n                    } else {\n                        var pos1 = posicionIndicadorAgregarEnFormula.substring(posicionIndicadorAgregarEnFormula.lastIndexOf(\"[\")+1);\n                        console.log('2');\n                        console.log('pos1');\n                        console.log(pos1);\n                        var pos2 = pos1.substring(0, pos1.lastIndexOf(\"]\"));\n                        console.log('pos2');\n                        console.log(pos2);\n                        eval(\"formulaTemp.splice( parseInt(pos2)+1, 0, operacionSeleccionada)\" );\n                        eval(\"formulaTemp.splice( parseInt(pos2)+2, 0, varAInsertar)\" );\n                    }\n                    //eval(\"formulaTemp[posicionArreglo].splice(parseInt(ultimoIndice)+1, 0, variableSeleccionada[0])\");\n                } else {\n                    if(posicionIndicadorAgregarEnFormula.split(\"[\").length > 2) {\n                        console.log('1');\n                        var pos1 = posicionIndicadorAgregarEnFormula.substring(posicionIndicadorAgregarEnFormula.lastIndexOf(\"[\")+1);\n                        console.log('pos1');\n                        console.log(pos1);\n                        var pos2 = pos1.substring(0, pos1.lastIndexOf(\"]\"));\n                        console.log('pos2');\n                        console.log(pos2);\n                        console.log('posicionIndicadorAgregarEnFormula.substring(0, posicionIndicadorAgregarEnFormula.lastIndexOf(\"[\"))');\n                        console.log(posicionIndicadorAgregarEnFormula.substring(0, posicionIndicadorAgregarEnFormula.lastIndexOf(\"[\")));\n                        console.log(\"console.log(formulaTemp\"+posicionIndicadorAgregarEnFormula.substring(0, posicionIndicadorAgregarEnFormula.lastIndexOf(\"[\"))+\".length)\" );\n                        eval(\"console.log(formulaTemp\"+posicionIndicadorAgregarEnFormula.substring(0, posicionIndicadorAgregarEnFormula.lastIndexOf(\"[\"))+\".length)\" );\n                        eval(\"console.log(formulaTemp\"+posicionIndicadorAgregarEnFormula.substring(0, posicionIndicadorAgregarEnFormula.lastIndexOf(\"[\"))+\".length == parseInt(pos2)+1)\" );\n                        var esUltimoIndice = false;\n                        eval(\"if (formulaTemp\"+posicionIndicadorAgregarEnFormula.substring(0, posicionIndicadorAgregarEnFormula.lastIndexOf(\"[\"))+\".length == parseInt(pos2)+1) esUltimoIndice = true\" );\n                        console.log('esUltimoIndice');\n                        console.log(esUltimoIndice);\n                        eval(\"formulaTemp\"+posicionIndicadorAgregarEnFormula.substring(0, posicionIndicadorAgregarEnFormula.lastIndexOf(\"[\"))+\".splice( parseInt(pos2), 0, operacionSeleccionada)\" );\n                        eval(\"formulaTemp\"+posicionIndicadorAgregarEnFormula.substring(0, posicionIndicadorAgregarEnFormula.lastIndexOf(\"[\"))+\".splice( parseInt(pos2), 0, varAInsertar)\" );\n                        /*if(esUltimoIndice) {\n                            eval(\"formulaTemp\"+posicionIndicadorAgregarEnFormula.substring(0, posicionIndicadorAgregarEnFormula.lastIndexOf(\"[\"))+\".splice( parseInt(pos2)+1, 0, operacionSeleccionada)\" );\n                            eval(\"formulaTemp\"+posicionIndicadorAgregarEnFormula.substring(0, posicionIndicadorAgregarEnFormula.lastIndexOf(\"[\"))+\".splice( parseInt(pos2)+1, 0, varAInsertar)\" );\n                        } else {\n                            eval(\"formulaTemp\"+posicionIndicadorAgregarEnFormula.substring(0, posicionIndicadorAgregarEnFormula.lastIndexOf(\"[\"))+\".splice( parseInt(pos2)+1, 0, varAInsertar)\" );\n                            eval(\"formulaTemp\"+posicionIndicadorAgregarEnFormula.substring(0, posicionIndicadorAgregarEnFormula.lastIndexOf(\"[\"))+\".splice( parseInt(pos2)+1, 0, operacionSeleccionada)\" );\n                        }*/\n                    } else {\n                        var pos1 = posicionIndicadorAgregarEnFormula.substring(posicionIndicadorAgregarEnFormula.lastIndexOf(\"[\")+1);\n                        console.log('2');\n                        console.log('pos1');\n                        console.log(pos1);\n                        var pos2 = pos1.substring(0, pos1.lastIndexOf(\"]\"));\n                        console.log('pos2');\n                        console.log(pos2);\n                        eval(\"formulaTemp.splice( parseInt(pos2), 0, operacionSeleccionada)\" );\n                        eval(\"formulaTemp.splice( parseInt(pos2), 0, varAInsertar)\" );\n                    }\n                    /*if(posicionArreglo.length > 0) {\n                        formulaTemp[posicionArreglo].splice(parseInt(ultimoIndice), 0, operacionSeleccionada);\n                        formulaTemp[posicionArreglo].splice(parseInt(ultimoIndice), 0, varAInsertar);\n                    } else {\n                        formulaTemp.splice(parseInt(ultimoIndice), 0, operacionSeleccionada);\n                        formulaTemp.splice(parseInt(ultimoIndice), 0, varAInsertar);\n                    }*/\n                }\n                console.log('varAInsertar');\n                console.log(varAInsertar);\n                console.log('operacionSeleccionada');\n                console.log(operacionSeleccionada);\n                console.log('formulaTemp');\n                console.log(formulaTemp);\n                this.agregarFormulaAnchuraYAltura(formulaTemp, true);\n                this.setState({\n                    operaciones: [],\n                    formula: formulaTemp\n                });\n                var self = this;\n                setTimeout(function(){\n                    console.log(self.state.formula)\n                }, 2000);\n                //actualizando campos de variables a mostrar segun el campo que se acaba de agregar\n                var tipoOriginal = variableSeleccionada.tipo;\n                if(variableSeleccionada.esFuenteDato) {\n                    //solo mostrar campos que sean de conexiones tabla\n                    var arregloConexionesTemp = [], arregloCamposConexionesTemp = [];\n                    for (var i = 0; i < tablasOriginales.length; i++) {\n                        if(tablasOriginales[i].ID == variableSeleccionada.tablaID) {\n                            arregloConexionesTemp.push(tablasOriginales[i]);\n                            for (var j = 0; j < camposTablasOriginales[i].length; j++) {\n                                if(arregloCamposConexionesTemp[arregloConexionesTemp.length-1] == undefined)\n                                    arregloCamposConexionesTemp[arregloConexionesTemp.length-1] = [];\n                                if(tipoOriginal.localeCompare(\"int\") == 0 || tipoOriginal.localeCompare(\"decimal\") == 0) {\n                                    if(camposTablasOriginales[i][j].tipo.localeCompare(\"int\") == 0 || camposTablasOriginales[i][j].tipo.localeCompare(\"decimal\") == 0)\n                                        arregloCamposConexionesTemp[arregloConexionesTemp.length-1].push(camposTablasOriginales[i][j]);\n                                } else {\n                                    if(camposTablasOriginales[i][j].tipo.localeCompare(tipoOriginal) == 0)\n                                        arregloCamposConexionesTemp[arregloConexionesTemp.length-1].push(camposTablasOriginales[i][j]);\n                                }\n                            };\n                            break;\n                        }\n                    };\n                    this.setState({\n                        tablas: arregloConexionesTemp,\n                        camposTablas: arregloCamposConexionesTemp,\n                        variablesEscalares: [],\n                        variables: [],\n                        camposVariables: [],\n                        variablesSQL: [],\n                        camposVariablesSQL: []\n                    });\n                } else {\n                    if(variableSeleccionada.esObjeto) {\n                        var arregloVariablesTemp = [], arregloCamposVariablesTemp = [];\n                        for (var i = 0; i < variablesOriginales.length; i++) {\n                            if(variablesOriginales[i].ID == variableSeleccionada.variableID) {\n                                arregloVariablesTemp.push(variablesOriginales[i]);\n                                for (var j = 0; j < camposVariablesOriginales[i].length; j++) {\n                                    if(arregloCamposVariablesTemp[arregloVariablesTemp.length-1] == undefined)\n                                        arregloCamposVariablesTemp[arregloVariablesTemp.length-1] = [];\n                                    if(tipoOriginal.localeCompare(\"int\") == 0 || tipoOriginal.localeCompare(\"decimal\") == 0) {\n                                        if(camposVariablesOriginales[i][j].tipo.localeCompare(\"int\") == 0 || camposVariablesOriginales[i][j].tipo.localeCompare(\"decimal\") == 0)\n                                            arregloCamposVariablesTemp[arregloVariablesTemp.length-1].push(camposVariablesOriginales[i][j]);\n                                    } else {\n                                        if(camposVariablesOriginales[i][j].tipo.localeCompare(tipoOriginal) == 0)\n                                            arregloCamposVariablesTemp[arregloVariablesTemp.length-1].push(camposVariablesOriginales[i][j]);\n                                    }\n                                };\n                                break;\n                            }\n                        };\n                        console.log(variablesEscalaresOriginales)\n                        this.setState({\n                            tablas: [],\n                            camposTablas: [],\n                            variablesEscalares: variablesEscalaresOriginales,\n                            variables: arregloVariablesTemp,\n                            camposVariables: arregloCamposVariablesTemp,\n                            variablesSQL: [],\n                            camposVariablesSQL: []\n                        });\n                    } else if(variableSeleccionada.esInstruccionSQL) {\n                        var arregloVariablesSQLTemp = [], arregloCamposVariablesSQLTemp = [];\n                        for (var i = 0; i < variablesOriginalesSQL.length; i++) {\n                            if(variablesOriginalesSQL[i].ID == variableSeleccionada.variableID) {\n                                arregloVariablesSQLTemp.push(variablesOriginalesSQL[i]);\n                                for (var j = 0; j < camposVariablesOriginalesSQL[i].length; j++) {\n                                    if(arregloCamposVariablesSQLTemp[arregloVariablesSQLTemp.length-1] == undefined)\n                                        arregloCamposVariablesSQLTemp[arregloVariablesSQLTemp.length-1] = [];\n                                    if(tipoOriginal.localeCompare(\"int\") == 0 || tipoOriginal.localeCompare(\"decimal\") == 0) {\n                                        if(camposVariablesOriginalesSQL[i][j].tipo.localeCompare(\"int\") == 0 || camposVariablesOriginalesSQL[i][j].tipo.localeCompare(\"decimal\") == 0)\n                                            arregloCamposVariablesSQLTemp[arregloVariablesSQLTemp.length-1].push(camposVariablesOriginalesSQL[i][j]);\n                                    } else {\n                                        if(camposVariablesOriginalesSQL[i][j].tipo.localeCompare(tipoOriginal) == 0)\n                                            arregloCamposVariablesSQLTemp[arregloVariablesSQLTemp.length-1].push(camposVariablesOriginalesSQL[i][j]);\n                                    }\n                                };\n                                break;\n                            }\n                        };\n                        this.setState({\n                            tablas: [],\n                            camposTablas: [],\n                            variablesEscalares: variablesEscalaresOriginales,\n                            variables: [],\n                            camposVariables: [],\n                            variablesSQL: arregloVariablesSQLTemp,\n                            camposVariablesSQL: arregloCamposVariablesSQLTemp\n                        });\n                    } else {\n                        this.setState({\n                            tablas: [],\n                            camposTablas: [],\n                            variablesEscalares: this.state.variablesEscalares,\n                            variables: this.state.variables,\n                            camposVariables: this.state.camposVariables,\n                            variablesSQL: this.state.variablesSQL,\n                            camposVariablesSQL: this.state.camposVariablesSQL\n                        });\n                    }\n                }\n                //FIN actualizando campos de variables a mostrar segun el campo que se acaba de agregar\n            } else if(this.state.formula.length > 0  && operacionSeleccionada.valor != undefined && operacionSeleccionada.valor.localeCompare(\"/\") == 0) {\n                console.log('3')\n                //quitar cualquier operacion seleccionada anteriormente\n                var formulaTemp = [...this.state.formula];\n                for (var i = 0; i < formulaTemp.length; i++) {\n                    formulaTemp[i].operacion = 'FORMULA';\n                    formulaTemp[i].texto = formulaTemp[i].valor;\n                };\n                this.setState({\n                    formula: formulaTemp\n                });\n                var arregloVarSeleccionadas = [];\n                this.getSelectedVariables (this.state.formula, arregloVarSeleccionadas, '');\n                console.log('arregloVarSeleccionadas')\n                console.log(arregloVarSeleccionadas)\n                if($(\"div\").hasClass(\"colorPunteroFormula\") || arregloVarSeleccionadas.length == 0) {\n                    alert(\"Para agregar una división, seleccione las variables a ser numerador en la fórmula.\");\n                } else {\n                    var tipoOriginal = variableSeleccionada.tipo;\n                    variableSeleccionada.tipoOriginal = tipoOriginal;\n                    variableSeleccionada.tipo = \"variable\";\n                    variableSeleccionada.texto = variableSeleccionada.valor;\n                    variableSeleccionada.operacion = 'FORMULA';\n                    //variableSeleccionada.tipoColumnaEnTabla = ;\n                    if(this.existeReglaAsignacion(operacionSeleccionada.valor)) {\n                        variableSeleccionada.texto = this.retornarCodigoOperacion(operacionSeleccionada.valor) + \"(\" + variableSeleccionada.valor + \")\";\n                        variableSeleccionada.operacion = this.retornarCodigoOperacion(operacionSeleccionada.valor);\n                    }\n\n                    //separar arreglo arregloVarSeleccionadas por diferentes primer indices, elegir el mas corto y quitar ultimo indice solo si length != 1\n                        // 1) eje: [1][0],[1][2]    [5][1][0],[5][1][2],[5][1][4]       [8]\n                        // 2) res: [1], [5][1], [8]\n                    //========================\n                    //SE CREAN ARREGLOS 1) Y 2)\n                    //SI ARREGLO 2) LENGTH > 1\n                        //VER QUE PRIMEROS INDICES DE ARREGLO 2) ESTEN A UNA DISTANCIA DE 3 SI ES DIV Y 2 SI ES VAR, PARA COMPROBAR QUE DIFERENTES\n                            //SELECCIONES DE VARIABLES ESTAN CONTINUAS EN FORMULA, EJE: [\\\\,[P1,DIV\\,P2],\\\\,-,P4,+,\\\\,[P5,DIV\\,P6],\\\\,-,P7,+,P8]\n                                                                                    //  [\\\\,[P1,DIV\\,P2],\\\\,-,P4,+,P6]\n                        //POR CADA POSICION INICIAL (PRIMER INDICE), PROBAR QUE LA SELECCION FUE CORRECTA SI ES DIV\n                            //SI SELECCIONO UNA DIVISION SE TIENE QUE SELECCIONAR TODAS LAS VAR DE LA DIV\n\n                    //SI ARREGLO 2) LENGTH == 1\n                        //COMPROBAR QUE LA SELECCION ES CORRECTA\n                            //SI SOLO SE SELECIONO DEL NUMERADOR\n                                //SI SOLO UNA BIEN\n                                //SINO SI VERIFICAR QUE CADA VAR SELECCIONADA ESTE CONTINUA O SEA A UNA DISTANCIA DE 2, eje: [0] -> [2] -> [4]\n                            //SI SE SELECCIONO DE UN DENOMINADOR SE TIENEN QUE SELECCIONAR LAS DEMAS VAR DEL DENOMINADOR, TAMBIEN TODO LO \n                            //QUE ESTE EN EL NUMERADOR\n                                //SE EMPIEZA POR EL VALOR DE SUB-ARREGLO 1) (EJE: [5][1][0],[5][1][2],[5][1][4]) MAS CORTO Y SE MANDA A LLAMAR METODO:\n                                    //METODO:\n                                        //SE RECORREN TODAS LAS VAR DE ESE NIVEL QUE NO SEAN ARREGLOS Y SE VERIFICAN SI ESTA SEL, SINO RETORNAR FALSO\n                                        //POR ULTIMO SE VUELVE A LLAMAR EL METODO POR CADA ARREGLO\n\n                    //SI SELECCION ES CORRECTA (PROCESO ANTERIOR)\n                        //SI ARREGLO 2) LENGTH == 1\n                            //SACAR EL ULTIMO INDICE EN COMUN MAS CERCANO, CREAR\n                                //SI EL ULTIMO INDICE ES DIV, SOLO INSERTAR NUEVA DIVISION EN ESA POS\n                                //SI NO ES DIV, CREAR INDICADOR IZQ, INSERTAR NUEVA DIVISION Y DESPUES CREAR INDICADOR DER\n                        //SI ARREGLO 2) LENGTH > 1\n                            //RECORRIENDO DE IZQ A DER CREANDO ARREGLO DE VALORES A INSERTAR, SOLO AGARRAR LAS VAR, SIGNOS E INDICADORES DEL PRIMER INDICE/NIVEL\n                            //RECORRIENDO DE DER A IZQ ELIMINAR CADA VALOR ANTERIORMENTE SEL, Y METER ARREGLO DE VALORES A INSERTAR \n                                //EN PRIMER VALOR DE ARREGLO 2) VERIFICANDO SI ES DIV, PARA METER EN LA POS ANTERIOR\n\n\n                    //separar arreglo arregloVarSeleccionadas por diferentes primer indices, elegir el mas corto y quitar ultimo indice solo si length != 1\n                        // 1) eje: [1][0],[1][2]    [5][1][0],[5][1][2],[5][1][4]       [8]\n                        // 2) res: [1], [5][1], [8]\n                    var indicesVarSeleccionadas = [];   //arreglo 2)\n                    var arregloVarSeleccionadasPorIndicesInicial = []; //arreglo 1)\n                    for (var i = 0; i < arregloVarSeleccionadas.length; i++) {\n                        var posInicial = arregloVarSeleccionadas[i].split(\"]\")[0].split(\"[\")[1];\n                        var existe = false;\n                        for (var j = 0; j < arregloVarSeleccionadasPorIndicesInicial.length; j++) {\n                            var posInicialComparacion = arregloVarSeleccionadasPorIndicesInicial[j][0].split(\"]\")[0].split(\"[\")[1];\n                            if (posInicialComparacion.localeCompare(posInicial) == 0) {\n                                existe = true;\n                                break;\n                            }\n                        };\n                        if(!existe) {\n                            arregloVarSeleccionadasPorIndicesInicial.push([arregloVarSeleccionadas[i]]);\n                        } else {\n                            arregloVarSeleccionadasPorIndicesInicial[j].push(arregloVarSeleccionadas[i]);\n                        }\n                    };\n                    for (var i = 0; i < arregloVarSeleccionadasPorIndicesInicial.length; i++) {\n                        var elMasCorto = '';\n                        for (var j = 0; j < arregloVarSeleccionadasPorIndicesInicial[i].length; j++) {\n                            if(elMasCorto.length == 0) {\n                                elMasCorto = arregloVarSeleccionadasPorIndicesInicial[i][j];\n                            } else if(elMasCorto.length > arregloVarSeleccionadasPorIndicesInicial[i][j].length) {\n                                elMasCorto = arregloVarSeleccionadasPorIndicesInicial[i][j];\n                            }\n                        };\n                        if(elMasCorto.length > 0) {\n                            if(elMasCorto.split(\"[\").length > 2) {\n                                indicesVarSeleccionadas.push( elMasCorto.substring(0, elMasCorto.lastIndexOf(\"[\")) );\n                            } else {\n                                indicesVarSeleccionadas.push( elMasCorto );\n                            }\n                        }\n                    };\n\n                    console.log('this.state.formula');\n                    console.log(this.state.formula);\n\n                    console.log('indicesVarSeleccionadas');\n                    console.log(indicesVarSeleccionadas);\n                    console.log('arregloVarSeleccionadasPorIndicesInicial');\n                    console.log(arregloVarSeleccionadasPorIndicesInicial);\n\n                    if(indicesVarSeleccionadas.length > 1) {\n                        //VER QUE DISTANCIA PRIMEROS INDICES DE ARREGLO\n                        var seleccionVariablesContinuas = false;\n                        for (var a = 0; a < indicesVarSeleccionadas.length; a++) {\n                            var variableAEvaluar;\n                            if(indicesVarSeleccionadas[a].split(\"[\").length > 2) {\n                                eval(\"variableAEvaluar = this.state.formula\"+indicesVarSeleccionadas[a].substring(0, indicesVarSeleccionadas[a].lastIndexOf(\"[\")) );\n                            } else {\n                                eval(\"variableAEvaluar = this.state.formula\"+indicesVarSeleccionadas[a]);\n                            }\n                            console.log('variableAEvaluar');\n                            console.log(variableAEvaluar);\n                            if(a != 0) {\n                                if (variableAEvaluar.tipo.localeCompare(\"contenedorDivision\") == 0) {\n                                    var variableDeComparacion;\n                                    var indiceOriginal = parseInt(indicesVarSeleccionadas[a].split(\"]\")[0].split(\"[\")[1]);\n                                    eval(\"variableDeComparacion = this.state.formula\"+(indiceOriginal-3));\n                                    console.log('variableDeComparacion');\n                                    console.log(variableDeComparacion);\n                                    if(variableDeComparacion.tipo.localeCompare(\"indicador\") == 0 && variableDeComparacion.posicion.localeCompare(\"derecha\") == 0) {\n                                        seleccionVariablesContinuas = true;\n                                    } else if(variableDeComparacion.tipo.localeCompare(\"variable\") == 0) {\n                                        seleccionVariablesContinuas = true;\n                                    } else {\n                                        seleccionVariablesContinuas = false;\n                                        break;\n                                    }\n                                } else if (variableAEvaluar.tipo.localeCompare(\"variable\") == 0) {\n                                    var variableDeComparacion;\n                                    var indiceOriginal = parseInt(indicesVarSeleccionadas[a].split(\"]\")[0].split(\"[\")[1]);\n                                    eval(\"variableDeComparacion = this.state.formula\"+(indiceOriginal-2));\n                                    console.log('variableDeComparacion');\n                                    console.log(variableDeComparacion);\n                                    if(variableDeComparacion.tipo.localeCompare(\"indicador\") == 0 && variableDeComparacion.posicion.localeCompare(\"derecha\") == 0) {\n                                        seleccionVariablesContinuas = true;\n                                    } else if(variableDeComparacion.tipo.localeCompare(\"variable\") == 0) {\n                                        seleccionVariablesContinuas = true;\n                                    } else {\n                                        seleccionVariablesContinuas = false;\n                                        break;\n                                    }\n                                }\n                            }\n                        };\n\n                        if(seleccionVariablesContinuas) {\n                            //VER QUE TODAS LAS VARIABLES DE LA DIVISION ESTEN SELECCIONADAS\n                            for (var a = 0; a < indicesVarSeleccionadas.length; a++) {\n                                var variableAEvaluar;\n                                if(indicesVarSeleccionadas[a].split(\"[\").length > 2) {\n                                    eval(\"variableAEvaluar = this.state.formula\"+indicesVarSeleccionadas[a].substring(0, indicesVarSeleccionadas[a].lastIndexOf(\"[\")) );\n                                } else {\n                                    eval(\"variableAEvaluar = this.state.formula\"+indicesVarSeleccionadas[a]);\n                                }\n                                console.log('variableAEvaluar');\n                                console.log(variableAEvaluar);\n                                if( Array.isArray(variableAEvaluar.valor) ) {\n                                    seleccionValidaVarDivision = true;\n                                    this.verificarSeleccionoTodosDivision(variableAEvaluar);\n                                    if(!seleccionValidaVarDivision) {\n                                        break;\n                                    }\n                                }\n                            };\n                            console.log('seleccionValidaVarDivision');\n                            console.log(seleccionValidaVarDivision);\n                            /*if(seleccionValidaVarDivision) {\n                                //CREANDO ARREGLOS VALORES A INSERTAR\n                                var arregloAInsertarNuevo = [];\n                                for (var a = 0; a < indicesVarSeleccionadas.length; a++) {\n                                    var indiceOriginal = parseInt(indicesVarSeleccionadas[a].split(\"]\")[0].split(\"[\")[1]);\n                                    if( Array.isArray(this.state.formula[indiceOriginal].valor) ) {\n                                        //insertar indicador izquierda\n                                        //var indIzquierdo = {valor: \"\\\\\\\\\", width: \"5%\", height: \"100%\", tipo: \"indicador\", posicion: \"izquierda\"};\n                                        arregloAInsertarNuevo.push(this.state.formula[indiceOriginal-1]);\n                                        //insertar arreglo / division\n                                        arregloAInsertarNuevo.push(this.state.formula[indiceOriginal]);\n                                        //insertar indicador derecha\n                                        //var indDerecho = {valor: \"\\\\\\\\\", width: \"5%\", height: \"100%\", tipo: \"indicador\", posicion: \"derecha\"};\n                                        arregloAInsertarNuevo.push(this.state.formula[indiceOriginal+1]);\n                                        if(a != indicesVarSeleccionadas.length-1) {\n                                            arregloAInsertarNuevo.push(this.state.formula[indiceOriginal+2]);\n                                        }\n                                    } else if( !Array.isArray(this.state.formula[indiceOriginal].valor) && this.state.formula[indiceOriginal].tipo.localeCompare(\"variable\") == 0 ) {\n                                        arregloAInsertarNuevo.push(this.state.formula[indiceOriginal]);\n                                        if(a != indicesVarSeleccionadas.length-1) {\n                                            arregloAInsertarNuevo.push(this.state.formula[indiceOriginal+1]);\n                                        }\n                                    }\n                                };\n                                console.log('arregloAInsertarNuevo');\n                                console.log(arregloAInsertarNuevo);\n                                //ELIMINANDO VARIABLES DEL ARREGLO ORIGINAL\n                                var copyFormula = [...this.state.formula];\n                                var posicionInicialAInsertarNuevaDiv = -1;\n                                console.log('copyFormula antes');\n                                console.log(copyFormula);\n                                for (var a = indicesVarSeleccionadas.length; a >= 0; a--) {\n                                    var indiceOriginal = parseInt(indicesVarSeleccionadas[a].split(\"]\")[0].split(\"[\")[1]);\n                                    if( Array.isArray(this.state.formula[indiceOriginal].valor) ) {\n                                        if(a != indicesVarSeleccionadas.length-1) {\n                                            copyFormula.splice(indiceOriginal+2, 1);\n                                        }\n                                        //quitar indicador derecha\n                                        copyFormula.splice(indiceOriginal+1, 1);\n                                        //quitar arreglo / division\n                                        copyFormula.splice(indiceOriginal, 1);\n                                        //quitar indicador izquierda\n                                        copyFormula.splice(indiceOriginal-1, 1);\n                                        posicionInicialAInsertarNuevaDiv = indiceOriginal-1;\n                                    } else if( !Array.isArray(this.state.formula[indiceOriginal].valor) && this.state.formula[indiceOriginal].tipo.localeCompare(\"variable\") == 0 ) {\n                                        if(a != indicesVarSeleccionadas.length-1) {\n                                            copyFormula.splice(indiceOriginal+1, 1);\n                                        }\n                                        copyFormula.splice(indiceOriginal, 1);\n                                        posicionInicialAInsertarNuevaDiv = indiceOriginal;\n                                    }\n                                };\n                                console.log('posicionInicialAInsertar');\n                                console.log(posicionInicialAInsertar);\n                                console.log('copyFormula despues quitar');\n                                console.log(copyFormula);\n                                for (var i = 0; i < arregloAInsertarNuevo.length; i++) {\n                                    copyFormula.splice(posicionInicialAInsertarNuevaDiv+i, 0, arregloAInsertarNuevo[i]);\n                                };\n                                console.log('copyFormula despues añadir');\n                                console.log(copyFormula);\n                                this.setState({\n                                    formula: copyFormula\n                                });\n                            } else {\n                                alert(\"La selecciones de divisiones tiene que tener todas las variables de la division seleccionada.\")\n                            }*/\n                        } else {\n                            alert(\"La seleccion de variables deben ser seguidas en la formula.\");\n                        }\n                        console.log('seleccionVariablesContinuas');\n                        console.log(seleccionVariablesContinuas);\n                    } else if(indicesVarSeleccionadas.length == 1) {\n                        //VIENDO SI SE SELECCIONO SOLO UNA VARIABLE\n                        if(arregloVarSeleccionadasPorIndicesInicial[0].length == 1) {\n                            //SELECCIONO SOLO UNA VARIABLE\n                            var variableAEvaluar;\n                            if(arregloVarSeleccionadasPorIndicesInicial[0][0].split(\"[\").length > 2) {\n                                eval(\"variableAEvaluar = this.state.formula\"+arregloVarSeleccionadasPorIndicesInicial[0][0].substring(0, arregloVarSeleccionadasPorIndicesInicial[0][0].lastIndexOf(\"[\")) );\n                            } else {\n                                eval(\"variableAEvaluar = this.state.formula\"+arregloVarSeleccionadasPorIndicesInicial[0][0]);\n                            }\n                            console.log('variableAEvaluar');\n                            console.log(variableAEvaluar);\n                            var seleccionVarEnNumerador = true, esAntesDenominador = true;;\n                            if(variableAEvaluar.length != undefined) {\n                                for (var i = 0; i < variableAEvaluar.length; i++) {\n                                    if(!Array.isArray(variableAEvaluar[i].valor) && variableAEvaluar[i].valor.localeCompare(\"division\\\\\\\\\") == 0) {\n                                        esAntesDenominador = false;\n                                    } else if(!Array.isArray(variableAEvaluar[i].valor) && variableAEvaluar[i].activa && !esAntesDenominador) {\n                                        seleccionVarEnNumerador = false;\n                                        break;\n                                    }\n                                };\n                            }\n                            console.log('seleccionVarEnNumerador');\n                            console.log(seleccionVarEnNumerador);\n                            if(seleccionVarEnNumerador) {\n                                //CREANDO ARREGLOS VALORES A INSERTAR\n                                var copiaAntiguaVariable, arregloAInsertarNuevo = [];\n                                eval(\"copiaAntiguaVariable = this.state.formula\"+arregloVarSeleccionadasPorIndicesInicial[0][0]);\n                                var indIzquierdo = {valor: \"\\\\\\\\\", width: \"5%\", height: \"100%\", tipo: \"indicador\", posicion: \"izquierda\"};\n                                arregloAInsertarNuevo.push(indIzquierdo);\n                                var signoDivision = {valor: \"division\\\\\\\\\", width: \"100%\", height: \"2%\", tipo: \"division\\\\\\\\\"};\n                                var division = {valor: [copiaAntiguaVariable, signoDivision, variableSeleccionada], width: \"90%\", height: \"49%\", tipo: \"contenedorDivision\"};\n                                arregloAInsertarNuevo.push(division);\n                                var indDerecho = {valor: \"\\\\\\\\\", width: \"5%\", height: \"100%\", tipo: \"indicador\", posicion: \"derecha\"};\n                                arregloAInsertarNuevo.push(indDerecho);\n                                //ELIMINANDO VARIABLES DEL ARREGLO ORIGINAL\n                                var copyFormula = [...this.state.formula];\n                                /*if(arregloVarSeleccionadasPorIndicesInicial[0][0].split(\"[\").length > 2) {\n                                    var variablePosicionAnterior;\n                                    eval(\"variablePosicionAnterior = copyFormula\"+arregloVarSeleccionadasPorIndicesInicial[0][0]);\n                                    if(variablePosicionAnterior.tipo.localeCompare(\"variable\") == 0) {\n                                        //var arregloConIndicadores = [];\n                                        //var indIzquierdo = {valor: \"\\\\\\\\\", width: \"5%\", height: \"100%\", tipo: \"indicador\", posicion: \"izquierda\"};\n                                        //var indDerecho = {valor: \"\\\\\\\\\", width: \"5%\", height: \"100%\", tipo: \"indicador\", posicion: \"derecha\"};\n                                        //var signoDivision = {valor: \"division\\\\\\\\\", width: \"100%\", height: \"2%\", tipo: \"division\\\\\\\\\"};\n                                        //var division = {valor: [copiaAntiguaVariable, signoDivision, variableSeleccionada], width: \"90%\", height: \"49%\", tipo: \"contenedorDivision\"};\n                                        //arregloConIndicadores.push()\n                                        for (var i = arregloAInsertarNuevo.length - 1; i >= 0; i--) {\n                                            if(i == arregloAInsertarNuevo.length - 1) {\n                                                console.log('1.');\n                                                console.log('posInsertar');\n                                                console.log( arregloVarSeleccionadasPorIndicesInicial[0][0].substring(0, arregloVarSeleccionadasPorIndicesInicial[0][0].lastIndexOf(\"[\")) );\n                                                console.log('arregloAInsertarNuevo[i]');\n                                                console.log(arregloAInsertarNuevo[i]);\n                                                eval(\"copyFormula\"+arregloVarSeleccionadasPorIndicesInicial[0][0].substring(0, arregloVarSeleccionadasPorIndicesInicial[0][0].lastIndexOf(\"[\"))+\".splice(\"+arregloVarSeleccionadasPorIndicesInicial[0][0].substring(arregloVarSeleccionadasPorIndicesInicial[0][0].lastIndexOf(\"[\"))+\", 1, arregloAInsertarNuevo[i])\");\n                                            } else {\n                                                console.log('2.');\n                                                console.log('posInsertar');\n                                                console.log( arregloVarSeleccionadasPorIndicesInicial[0][0].substring(0, arregloVarSeleccionadasPorIndicesInicial[0][0].lastIndexOf(\"[\")) );\n                                                console.log('arregloAInsertarNuevo[i]');\n                                                console.log(arregloAInsertarNuevo[i]);\n                                                eval(\"copyFormula\"+arregloVarSeleccionadasPorIndicesInicial[0][0].substring(0, arregloVarSeleccionadasPorIndicesInicial[0][0].lastIndexOf(\"[\"))+\".splice(\"+arregloVarSeleccionadasPorIndicesInicial[0][0].substring(arregloVarSeleccionadasPorIndicesInicial[0][0].lastIndexOf(\"[\"))+\", 0, arregloAInsertarNuevo[i])\");\n                                            }\n                                        };\n                                        //eval(\"copyFormula\"+arregloVarSeleccionadasPorIndicesInicial[0][0].substring(0, arregloVarSeleccionadasPorIndicesInicial[0][0].lastIndexOf(\"[\"))+\" = arregloAInsertarNuevo\");\n                                    } else if(variablePosicionAnterior.tipo.localeCompare(\"division\\\\\\\\\") == 0) {\n                                        eval(\"copyFormula\"+arregloVarSeleccionadasPorIndicesInicial[0][0].substring(0, arregloVarSeleccionadasPorIndicesInicial[0][0].lastIndexOf(\"[\"))+\" = arregloAInsertarNuevo\");\n                                    }\n                                } else {\n                                    console.log('3.');\n                                    eval(\"copyFormula\"+arregloVarSeleccionadasPorIndicesInicial[0][0]+\" = arregloAInsertarNuevo\");\n                                }*/\n                                for (var i = arregloAInsertarNuevo.length - 1; i >= 0; i--) {\n                                    if(i == arregloAInsertarNuevo.length - 1) {\n                                        eval(\"copyFormula\"+arregloVarSeleccionadasPorIndicesInicial[0][0].substring(0, arregloVarSeleccionadasPorIndicesInicial[0][0].lastIndexOf(\"[\"))+\".splice(\"+arregloVarSeleccionadasPorIndicesInicial[0][0].substring(arregloVarSeleccionadasPorIndicesInicial[0][0].lastIndexOf(\"[\"))+\", 1, arregloAInsertarNuevo[i])\");\n                                    } else {\n                                        eval(\"copyFormula\"+arregloVarSeleccionadasPorIndicesInicial[0][0].substring(0, arregloVarSeleccionadasPorIndicesInicial[0][0].lastIndexOf(\"[\"))+\".splice(\"+arregloVarSeleccionadasPorIndicesInicial[0][0].substring(arregloVarSeleccionadasPorIndicesInicial[0][0].lastIndexOf(\"[\"))+\", 0, arregloAInsertarNuevo[i])\");\n                                    }\n                                };\n                                this.agregarFormulaAnchuraYAltura(copyFormula, true);\n                                this.setState({\n                                    operaciones: [],\n                                    formula: copyFormula\n                                });\n                                console.log('copyFormula')\n                                console.log(copyFormula);\n                            } else {\n                                alert(\"la variable seleccionada debe ser del numerador\");\n                            }\n                        } else if(arregloVarSeleccionadasPorIndicesInicial[0].length > 1) {\n                            //SELECCIONO MAS DE UNA VARIABLE\n                            var variableAEvaluar, posicionAInsertarNuevaDivsion;\n                            if(indicesVarSeleccionadas[0].split(\"[\").length > 2) {\n                                eval(\"variableAEvaluar = this.state.formula\"+indicesVarSeleccionadas[0].substring(0, indicesVarSeleccionadas[0].lastIndexOf(\".\")) );\n                                posicionAInsertarNuevaDivsion = indicesVarSeleccionadas[0].substring(0, indicesVarSeleccionadas[0].lastIndexOf(\".\"));\n                            } else {\n                                if(indicesVarSeleccionadas[0].lastIndexOf(\".\") != -1) {\n                                    eval(\"variableAEvaluar = this.state.formula\"+indicesVarSeleccionadas[0].substring(0, indicesVarSeleccionadas[0].lastIndexOf(\".\")) );\n                                    posicionAInsertarNuevaDivsion = indicesVarSeleccionadas[0];\n                                } else {\n                                    eval(\"variableAEvaluar = this.state.formula\"+indicesVarSeleccionadas[0] );\n                                    posicionAInsertarNuevaDivsion = indicesVarSeleccionadas[0];\n                                }\n                            }\n                            console.log('variableAEvaluar');\n                            console.log(variableAEvaluar);\n                            seleccionValidaVarDivision = true;\n                            this.verificarSeleccionoTodosDivision(variableAEvaluar.valor);\n                            console.log('seleccionValidaVarDivision');\n                            console.log(seleccionValidaVarDivision);\n                            console.log('this.state.formula');\n                            console.log(this.state.formula);\n                            if(seleccionValidaVarDivision) {\n                                var arregloAInsertarNuevo = [], divisionAInsertar;\n                                if(variableAEvaluar.tipo.localeCompare(\"contenedorDivision\") == 0) {\n                                    console.log('1');\n                                    var copiaAntiguaVariable = jQuery.extend(true, {}, variableAEvaluar);\n                                    var indIzquierdo = {valor: \"\\\\\\\\\", width: \"5%\", height: \"100%\", tipo: \"indicador\", posicion: \"izquierda\"};\n                                    var signoDivision = {valor: \"division\\\\\\\\\", width: \"100%\", height: \"2%\", tipo: \"division\\\\\\\\\"};\n                                    var indDerecho = {valor: \"\\\\\\\\\", width: \"5%\", height: \"100%\", tipo: \"indicador\", posicion: \"derecha\"};\n                                    var division = {valor: [indIzquierdo, copiaAntiguaVariable, indDerecho, signoDivision, variableSeleccionada], width: \"90%\", height: \"49%\", tipo: \"contenedorDivision\"};\n                                    divisionAInsertar = division;\n                                    console.log('divisionAInsertar DESPUES');\n                                    console.log(divisionAInsertar.valor);\n                                } else {\n                                    console.log('2');\n                                    var copiaAntiguaVariable = jQuery.extend(true, {}, variableAEvaluar);\n                                    var indIzquierdo = {valor: \"\\\\\\\\\", width: \"5%\", height: \"100%\", tipo: \"indicador\", posicion: \"izquierda\"};\n                                    arregloAInsertarNuevo.push(indIzquierdo);\n                                    var signoDivision = {valor: \"division\\\\\\\\\", width: \"100%\", height: \"2%\", tipo: \"division\\\\\\\\\"};\n                                    var division = {valor: [copiaAntiguaVariable, signoDivision, variableSeleccionada], width: \"90%\", height: \"49%\", tipo: \"contenedorDivision\"};\n                                    arregloAInsertarNuevo.push(division);\n                                    var indDerecho = {valor: \"\\\\\\\\\", width: \"5%\", height: \"100%\", tipo: \"indicador\", posicion: \"derecha\"};\n                                    arregloAInsertarNuevo.push(indDerecho);\n                                    divisionAInsertar = arregloAInsertarNuevo;\n                                    console.log('divisionAInsertar DESPUES');\n                                    console.log(divisionAInsertar.valor);\n                                }\n                                var copyFormula = [...this.state.formula];\n                                console.log('posicionAInsertarNuevaDivsion');\n                                console.log(posicionAInsertarNuevaDivsion);\n                                console.log('posicionAInsertarNuevaDivsion.substring(0, posicionAInsertarNuevaDivsion.lastIndexOf(\"[\")) 1');\n                                console.log(posicionAInsertarNuevaDivsion.substring(0, posicionAInsertarNuevaDivsion.lastIndexOf(\"[\")));\n                                console.log('posicionAInsertarNuevaDivsion.substring(0, posicionAInsertarNuevaDivsion.lastIndexOf(\"[\").substring(0, posicionAInsertarNuevaDivsion.lastIndexOf(\"]\")) 2');\n                                console.log( posicionAInsertarNuevaDivsion.substring(0, posicionAInsertarNuevaDivsion.lastIndexOf(\"[\")).substring(0, posicionAInsertarNuevaDivsion.lastIndexOf(\"]\")) );\n                                console.log('posicionAInsertarNuevaDivsion.substring(0, posicionAInsertarNuevaDivsion.lastIndexOf(\".\")) 2');\n                                console.log( posicionAInsertarNuevaDivsion.substring(0, posicionAInsertarNuevaDivsion.lastIndexOf(\".\")) );\n                                if(posicionAInsertarNuevaDivsion.split(\"[\").length > 2) {\n                                    console.log('1');\n                                    var pos1 = posicionAInsertarNuevaDivsion.substring(posicionAInsertarNuevaDivsion.lastIndexOf(\"[\")+1);\n                                    console.log('pos1');\n                                    console.log(pos1);\n                                    var pos2 = pos1.substring(0, pos1.lastIndexOf(\"]\"));\n                                    console.log('pos2');\n                                    console.log(pos2);\n                                    eval(\"copyFormula\"+posicionAInsertarNuevaDivsion.substring(0, posicionAInsertarNuevaDivsion.lastIndexOf(\"[\"))+\".splice(\"+pos2+\", 1, divisionAInsertar)\");\n                                } else {\n                                    console.log('2');\n                                    eval(\"copyFormula\"+posicionAInsertarNuevaDivsion.substring(0, posicionAInsertarNuevaDivsion.lastIndexOf(\"[\"))+\".splice(\"+posicionAInsertarNuevaDivsion.substring(0, posicionAInsertarNuevaDivsion.lastIndexOf(\".\"))+\", 1, divisionAInsertar)\");\n                                }\n                                //copyFormula[posicionAInsertarNuevaDivsion] = divisionAInsertar;\n                                //eval(\"copyFormula[\"+posicionAInsertarNuevaDivsion+\"] = divisionAInsertar\");\n                                console.log('copyFormula DESPUES');\n                                console.log(copyFormula);\n                                identificadorIndicador = 0;\n                                this.agregarFormulaAnchuraYAltura(copyFormula, true);\n                                this.setState({\n                                    operaciones: [],\n                                    formula: copyFormula\n                                });\n                            } else {\n                                alert(\"Selección de división invalida. Falta selección de numerador.\")\n                            }\n                        }\n                    }\n\n                    /*//verificar que seleccion de variables es valida\n                    if(arregloVarSeleccionadas.length == 1) {\n                        //caso base, siempre valido\n                        //verificar que no sea denominador seleccionado\n                        var esValida = false;\n                        forIndicesSeleccionados:\n                        for (var a = 0; a < indicesVarSeleccionadas.length; a++) {\n                            var posicionInicial, esAntesDenominador = true;\n                            //traer la pos mas arriba del arreglo que contiene la var seleccionada\n                                //o sea en [[[var1+var],/, var3],/,var4]    la var4 es la de mas arriba\n                            eval(\"posicionInicial = this.state.formula\"+indicesVarSeleccionadas[a]);\n                            console.log('posicionInicial');\n                            console.log(posicionInicial);\n                            for (var i = 0; i < posicionInicial.length; i++) {\n                                console.log('i = '+i);\n                                if(!Array.isArray(posicionInicial[i].valor)) {\n                                    console.log('no es arreglo');\n                                    if(posicionInicial[i].tipo.localeCompare(\"variable\") == 0 && posicionInicial[i].activa && esAntesDenominador) {\n                                        console.log('OOOOOO');\n                                        esValida = true;\n                                    }\n                                    if(posicionInicial[i].valor.localeCompare(\"division\\\\\\\\\") == 0) {\n                                        console.log('YYYYY');\n                                        esAntesDenominador = false;\n                                    }\n                                }\n                            };\n                            if(posicionInicial.length == undefined && posicionInicial.activa) {\n                                esValida = true;\n                            }\n                        };\n                        console.log('3.1');\n                        console.log('esValida');\n                        console.log(esValida);\n\n                        //separar arreglo arregloVarSeleccionadas por diferentes primer indices, elegir el mas corto y quitar ultimo indice solo si length != 1\n                            // 1) eje: [1][0],[1][2]    [5][1][0],[5][1][2],[5][1][4]       [8]\n                            // 2) res: [1], [5][1], [8]\n                        // verificar que cada indice inicial este a 3 numeros de distancia del otro: 1 -> 5 -> 8 ó 0 -> 3 -> 6\n                            //para verificar que cada division o variable selecc este justo al lado de la otra\n                        // en arreglo de indices arregloVarSeleccionadas[2)] tomar cada valor en el indice:\n                            //si valor es variable, tomar variable y siguiente valor si es operacion/signo, existe y arreglo de indices no ha llegado a su fin\n                            //si es arreglo, tomar arreglo, valor anterior y siguiente (indicadores->\\\\) y el siguiente valor si es operacion/signo, existe y arreglo de indices no ha llegado a su fin\n                        // se sigue misma logica anterior para seleccionar valores a ser quitados del arreglo de formulas\n                        //poner todo en un solo objeto/arreglo, y al final insertar eso en arreglo formula\n                        if (esValida) {\n                            var arregloAInsertar = [];\n                            for (var a = 0; a < indicesVarSeleccionadas.length; a++) {\n                                var posicionInicial;\n                                eval(\"posicionInicial = this.state.formula\"+indicesVarSeleccionadas[a]);\n                                console.log('posicionInicial');\n                                console.log(posicionInicial);\n                                for (var i = 0; i < posicionInicial.length; i++) {\n                                    console.log('posicionInicial[i]');\n                                    console.log(posicionInicial[i]);\n                                    if(!Array.isArray(posicionInicial[i].valor) && posicionInicial[i].activa && posicionInicial[i].tipo.localeCompare(\"indicador\") != 0 && posicionInicial[i].tipo.localeCompare(\"signo\") != 0) {\n                                        console.log('11');\n                                        arregloAInsertar.push(posicionInicial[i]);\n                                        if(posicionInicial[i+1] != undefined && posicionInicial[i+1].tipo.localeCompare(\"signo\") == 0) {\n                                            console.log('11.1');\n                                            //insertar signo que le sigue a variable\n                                            arregloAInsertar.push(posicionInicial[i+1]);\n                                        }\n                                    } else if(Array.isArray(posicionInicial[i].valor)) {\n                                        console.log('22');\n                                        //insertar indicador izquierda\n                                        arregloAInsertar.push(posicionInicial[i-1]);\n                                        //insertar arreglo / division\n                                        arregloAInsertar.push(posicionInicial[i]);\n                                        //insertar indicador derecha\n                                        arregloAInsertar.push(posicionInicial[i+1]);\n                                    }\n                                };\n                                if(posicionInicial.length == undefined) {\n                                    var indIzquierdo = {valor: \"\\\\\\\\\", width: \"5%\", height: \"100%\", tipo: \"indicador\", posicion: \"izquierda\"};\n                                    var indDerecho = {valor: \"\\\\\\\\\", width: \"5%\", height: \"100%\", tipo: \"indicador\", posicion: \"derecha\"};\n                                    var signoDivision = {valor: \"division\\\\\\\\\", width: \"100%\", height: \"2%\", tipo: \"division\\\\\\\\\"};\n                                    console.log('INSERTAR');\n                                    console.log('posicionInicial');\n                                    console.log(posicionInicial);\n                                    console.log('signoDivision');\n                                    console.log(signoDivision);\n                                    console.log('variableSeleccionada');\n                                    console.log(variableSeleccionada);\n                                    var division = {valor: [posicionInicial, signoDivision, variableSeleccionada], width: \"90%\", height: \"49%\", tipo: \"contenedorDivision\"};\n                                    arregloAInsertar.push(indIzquierdo);\n                                    arregloAInsertar.push(division);\n                                    arregloAInsertar.push(indDerecho);\n                                } else if(a == 0) {\n                                    arregloAInsertar\n                                }\n                            }\n                            console.log('arregloAInsertar');\n                            console.log(arregloAInsertar);\n                            //quitando variables a remover y seleccionando desde que posicion se insertara\n                            var posicionAInsertarNuevaDivsion = indicesVarSeleccionadas[0].split(\"]\")[0].split(\"[\")[1];\n                            console.log('posicionAInsertarNuevaDivsion');\n                            console.log(posicionAInsertarNuevaDivsion);\n                            var copyFormula = [...this.state.formula];\n                            for (var a = indicesVarSeleccionadas.length - 1; a >= 0; a--) {\n                                var posicionInicial;\n                                eval(\"posicionInicial = copyFormula\"+indicesVarSeleccionadas[a]);\n                                console.log('posicionInicial');\n                                console.log(posicionInicial);\n                                for (var i = posicionInicial.length - 1; i >= 0; i--) {\n                                    if(!Array.isArray(posicionInicial[i].valor) && posicionInicial[i].tipo.localeCompare(\"indicador\") != 0 && posicionInicial[i].tipo.localeCompare(\"signo\") != 0) {\n                                        console.log('A');\n                                        console.log('i = '+i);\n                                        if(posicionInicial[i+1] != undefined && posicionInicial[i+1].tipo.localeCompare(\"signo\") == 0) {\n                                            console.log('A.1');\n                                            //insertar signo que le sigue a variable\n                                            posicionInicial.splice(i+1,1);\n                                        }\n                                        console.log('posicionInicial antes');\n                                        console.log(posicionInicial);\n                                        console.log(posicionInicial[i]);\n                                        posicionInicial.splice(i,1);\n                                        console.log('posicionInicial despues');\n                                        console.log(posicionInicial);\n                                        console.log(posicionInicial[i]);\n                                    } else if(Array.isArray(posicionInicial[i].valor)) {\n                                        console.log('B');\n                                        //insertar indicador derecha\n                                        posicionInicial.splice(i+1,1);\n                                        //insertar arreglo / division\n                                        posicionInicial.splice(i,1);\n                                        //insertar indicador izquierda\n                                        posicionInicial.splice(i-1,1);\n                                    }\n                                };\n                                //revisar porque esta dentro de loop, que pasa cuando hay mas de un valor en indicesVarSeleccionadas\n                                if(posicionInicial.length == undefined) {\n                                    console.log('QUITAAAR');\n                                    console.log('copyFormula');\n                                    console.log(copyFormula);\n                                    copyFormula.splice(0,1);\n                                    console.log('copyFormula2');\n                                    console.log(copyFormula);\n                                }\n                            };\n                            for (var i = 0; i < arregloAInsertar.length; i++) {\n                                copyFormula.splice(posicionAInsertarNuevaDivsion+i, 0, arregloAInsertar[i]);\n                            };\n                            this.agregarFormulaAnchuraYAltura(copyFormula, false);\n                            console.log('copyFormula');\n                            console.log(copyFormula);\n                            this.setState({\n                                formula: copyFormula\n                            });\n                        } else {\n                            alert(\"Para agregar una división, seleccione las variables a ser numerador en la fórmula.\");\n                        }\n                    } else {\n                        for (var a = 0; a < indicesVarSeleccionadas.length; a++) {\n                            var posicionInicial, esAntesDenominador = true;\n                            //traer la pos mas arriba del arreglo que contiene la var seleccionada\n                                //o sea en [[[var1+var],/, var3],/,var4]    la var4 es la de mas arriba\n                            eval(\"posicionInicial = this.state.formula\"+indicesVarSeleccionadas[a]);\n                            console.log('posicionInicial');\n                            console.log(posicionInicial);\n                            //verificacion de seleccion correcta de una division\n                            //1) tienen que ser variables seleccionadas continuas, eje: [0] -> [2] -> [4]\n                                //Cuando se seleccionan variables del numerador, tienen que ser continuas\n                            //2) si de las variables anteriores, hay un cambio de nivel que puede ser\n                            //      a) cuando las var seleccionadas tienen un indice menos eje: [3][1][1][1][0], [3][1][1][1][2], [3][1][1][4]\n                            //      b) cambio de nivel puede ser en el mismo indice, pero cuando hay un valor div\\\\\n                                //en este caso se tienen que seleccionar todas las variables del nivel anterior o sea numerador y todas las variables del denominador\n                            \n                            //viendo si todos tienen la misma cantidad de indices\n                            var indices = 0, diferenteIndices = false;\n                            for (var i = 0; i < arregloVarSeleccionadasPorIndicesInicial[a].length; i++) {\n                                //asignando primera vez\n                                if(i == 0)\n                                    indices = arregloVarSeleccionadasPorIndicesInicial[a][i].split(\"]\").length;\n                                //comparando despues si el indice anterior es diferente al actual\n                                if(i > 0 && indices != arregloVarSeleccionadasPorIndicesInicial[a][i].split(\"]\").length) {\n                                    diferenteIndices = true;\n                                    break;\n                                }\n                            };\n                            if(diferenteIndices) {\n                                //caso 2) - a\n                                seleccionValidaVarDivision = true;\n                                this.verificarSeleccionoTodos(posicionInicial);\n                                console.log('3.2');\n                                console.log('seleccionValidaVarDivision');\n                                console.log(seleccionValidaVarDivision);\n                            } else {\n                                //caso 1)\n                                //var arreglo;\n                                //eval(\"arreglo = this.state.formula\"+arregloVarSeleccionadas[0]);\n                                //viendo si es division\n                                var esDivision = false;\n                                for (var i = 0; i < posicionInicial.length; i++) {\n                                    if(!Array.isArray(posicionInicial[i].valor)) {\n                                        if(posicionInicial[i].valor.localeCompare(\"division\\\\\") == 0) {\n                                            esDivision = true;\n                                            break;\n                                        }\n                                    }\n                                };\n                                if(esDivision) {\n                                    //caso 2) - b\n                                    var esValida = true;\n                                    for (var i = 0; i < posicionInicial.length; i++) {\n                                        if(!Array.isArray(posicionInicial[i].valor)) {\n                                            if(posicionInicial[i].tipo.localeCompare(\"variable\") == 0 && !posicionInicial[i].activa) {\n                                                esValida = false;\n                                                break;\n                                            }\n                                        }\n                                    };\n                                    console.log('3.3');\n                                    console.log('esValida');\n                                    console.log(esValida);\n                                } else {\n                                    //caso 1)\n                                    var esValida = true, esAntesDenominador = true, posicionAnterior = -1;\n                                    for (var i = 0; i < posicionInicial.length; i++) {\n                                        if(!Array.isArray(posicionInicial[i].valor)) {\n                                            if(posicionInicial[i].tipo.localeCompare(\"variable\") == 0 && posicionInicial[i].activa && esAntesDenominador) {\n                                                if (posicionAnterior == -1) {\n                                                    posicionAnterior = i;\n                                                } else {\n                                                    if(posicionAnterior+2 != i) {\n                                                        esValida = false;\n                                                        break;\n                                                    }\n                                                }\n                                            }\n                                            if(posicionInicial[i].valor.localeCompare(\"division\\\\\") == 0) {\n                                                esAntesDenominador = false;\n                                            }\n                                        }\n                                    };\n                                    console.log('3.4');\n                                    console.log('esValida');\n                                    console.log(esValida);\n                                }\n                            }\n                        };\n                    }*/\n                    //actualizando campos de variables a mostrar segun el campo que se acaba de agregar\n                    if(variableSeleccionada.esFuenteDato) {\n                        //solo mostrar campos que sean de conexiones tabla\n                        var arregloConexionesTemp = [], arregloCamposConexionesTemp = [];\n                        for (var i = 0; i < tablasOriginales.length; i++) {\n                            if(tablasOriginales[i].ID == variableSeleccionada.tablaID) {\n                                arregloConexionesTemp.push(tablasOriginales[i]);\n                                for (var j = 0; j < camposTablasOriginales[i].length; j++) {\n                                    if(arregloCamposConexionesTemp[arregloConexionesTemp.length-1] == undefined)\n                                        arregloCamposConexionesTemp[arregloConexionesTemp.length-1] = [];\n                                    if(tipoOriginal.localeCompare(\"int\") == 0 || tipoOriginal.localeCompare(\"decimal\") == 0) {\n                                        if(camposTablasOriginales[i][j].tipo.localeCompare(\"int\") == 0 || camposTablasOriginales[i][j].tipo.localeCompare(\"decimal\") == 0)\n                                            arregloCamposConexionesTemp[arregloConexionesTemp.length-1].push(camposTablasOriginales[i][j]);\n                                    } else {\n                                        if(camposTablasOriginales[i][j].tipo.localeCompare(tipoOriginal) == 0)\n                                            arregloCamposConexionesTemp[arregloConexionesTemp.length-1].push(camposTablasOriginales[i][j]);\n                                    }\n                                };\n                                break;\n                            }\n                        };\n                        this.setState({\n                            tablas: arregloConexionesTemp,\n                            camposTablas: arregloCamposConexionesTemp,\n                            variablesEscalares: [],\n                            variables: [],\n                            camposVariables: [],\n                            variablesSQL: [],\n                            camposVariablesSQL: []\n                        });\n                    } else {\n                        if(variableSeleccionada.esObjeto) {\n                            var arregloVariablesTemp = [], arregloCamposVariablesTemp = [];\n                            for (var i = 0; i < variablesOriginales.length; i++) {\n                                if(variablesOriginales[i].ID == variableSeleccionada.variableID) {\n                                    arregloVariablesTemp.push(variablesOriginales[i]);\n                                    for (var j = 0; j < camposVariablesOriginales[i].length; j++) {\n                                        if(arregloCamposVariablesTemp[arregloVariablesTemp.length-1] == undefined)\n                                            arregloCamposVariablesTemp[arregloVariablesTemp.length-1] = [];\n                                        if(tipoOriginal.localeCompare(\"int\") == 0 || tipoOriginal.localeCompare(\"decimal\") == 0) {\n                                            if(camposVariablesOriginales[i][j].tipo.localeCompare(\"int\") == 0 || camposVariablesOriginales[i][j].tipo.localeCompare(\"decimal\") == 0)\n                                                arregloCamposVariablesTemp[arregloVariablesTemp.length-1].push(camposVariablesOriginales[i][j]);\n                                        } else {\n                                            if(camposVariablesOriginales[i][j].tipo.localeCompare(tipoOriginal) == 0)\n                                                arregloCamposVariablesTemp[arregloVariablesTemp.length-1].push(camposVariablesOriginales[i][j]);\n                                        }\n                                    };\n                                    break;\n                                }\n                            };\n                            console.log(variablesEscalaresOriginales)\n                            this.setState({\n                                tablas: [],\n                                camposTablas: [],\n                                variablesEscalares: variablesEscalaresOriginales,\n                                variables: arregloVariablesTemp,\n                                camposVariables: arregloCamposVariablesTemp,\n                                variablesSQL: [],\n                                camposVariablesSQL: []\n                            });\n                        } else if(variableSeleccionada.esInstruccionSQL) {\n                            var arregloVariablesSQLTemp = [], arregloCamposVariablesSQLTemp = [];\n                            for (var i = 0; i < variablesOriginalesSQL.length; i++) {\n                                if(variablesOriginalesSQL[i].ID == variableSeleccionada.variableID) {\n                                    arregloVariablesSQLTemp.push(variablesOriginalesSQL[i]);\n                                    for (var j = 0; j < camposVariablesOriginalesSQL[i].length; j++) {\n                                        if(arregloCamposVariablesSQLTemp[arregloVariablesSQLTemp.length-1] == undefined)\n                                            arregloCamposVariablesSQLTemp[arregloVariablesSQLTemp.length-1] = [];\n                                        if(tipoOriginal.localeCompare(\"int\") == 0 || tipoOriginal.localeCompare(\"decimal\") == 0) {\n                                            if(camposVariablesOriginalesSQL[i][j].tipo.localeCompare(\"int\") == 0 || camposVariablesOriginalesSQL[i][j].tipo.localeCompare(\"decimal\") == 0)\n                                                arregloCamposVariablesSQLTemp[arregloVariablesSQLTemp.length-1].push(camposVariablesOriginalesSQL[i][j]);\n                                        } else {\n                                            if(camposVariablesOriginalesSQL[i][j].tipo.localeCompare(tipoOriginal) == 0)\n                                                arregloCamposVariablesSQLTemp[arregloVariablesSQLTemp.length-1].push(camposVariablesOriginalesSQL[i][j]);\n                                        }\n                                    };\n                                    break;\n                                }\n                            };\n                            this.setState({\n                                tablas: [],\n                                camposTablas: [],\n                                variablesEscalares: variablesEscalaresOriginales,\n                                variables: [],\n                                camposVariables: [],\n                                variablesSQL: arregloVariablesSQLTemp,\n                                camposVariablesSQL: arregloCamposVariablesSQLTemp\n                            });\n                        } else {\n                            this.setState({\n                                tablas: [],\n                                camposTablas: [],\n                                variablesEscalares: this.state.variablesEscalares,\n                                variables: this.state.variables,\n                                camposVariables: this.state.camposVariables,\n                                variablesSQL: this.state.variablesSQL,\n                                camposVariablesSQL: this.state.camposVariablesSQL\n                            });\n                        }\n                    }\n                    //FIN actualizando campos de variables a mostrar segun el campo que se acaba de agregar\n                }\n            } else if( !$(\"div\").hasClass(\"colorPunteroFormula\") ){\n                alert(\"Seleccione una posición en la fórmula.\");\n            } else if(this.state.formula.length > 0 && $(\"div\").hasClass(\"colorPunteroFormula\") && operacionSeleccionada.valor == undefined) {\n                alert(\"Seleccione una operación.\");\n            }\n        } else {\n            alert(\"Seleccione un campo\");\n        }\n    }\n\n    verificarSeleccionoTodosDivision (arreglo) {\n        console.log('arreglo')\n        console.log(arreglo)\n        //se verifica que todas las variables esten seleccionadas que esten en el denominador, y tofas las vars de los numeradores\n        if(seleccionValidaVarDivision) {\n            for (var i = 0; i < arreglo.length; i++) {\n                console.log('arreglo[i]')\n                console.log(arreglo[i])\n                if( !Array.isArray(arreglo[i].valor) ) {\n                    if( arreglo[i].tipo.localeCompare(\"variable\") == 0 && !arreglo[i].activa ) {\n                        console.log('arreglo[i]');\n                        console.log(arreglo[i]);\n                        seleccionValidaVarDivision = false;\n                        return;\n                    }\n                }\n            };\n            for (var i = 0; i < arreglo.length; i++) {\n                if( Array.isArray(arreglo[i].valor) ) {\n                    this.verificarSeleccionoTodosDivision (arreglo[i].valor);\n                }\n            };\n        } else {\n            return;\n        }\n    }\n\n    getFormula () {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select formula from \"+this.props.tablaVarEditar+\" where ID = \"+this.props.idVarEditar, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        if(result.recordset.length > 0) {\n                            this.crearArregloDeFormula(result.recordset[0].formula);\n                        }\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    crearArregloDeFormula (formula) {\n        var nuevoArregloFormula = [];\n        for (var i = 0; i < formula.length; i++) {\n            var variableProcesarFormula = getPalabraFormula\n            if(formula.charAt(i).localeCompare('(') == 0 || formula.charAt(i).localeCompare(')') == 0) {\n                nuevoArregloFormula.push({valor: \"seleccion\"});\n            } else if(formula.charAt(i).localeCompare('[') == 0) {\n                //\n            } else if(this.esOperacionAritmetica(formula.charAt(i))) {\n                nuevoArregloFormula.push({valor: formula.charAt(i)});\n            } else if(this.esOperacionCompleja(formula, i)) {\n                var nombre = this.getPalabraFormula(formula, i);\n                nuevoArregloFormula.push({valor: nombre});\n            } else if(this.esVariable(formula, i)) {\n                var nombre = this.getPalabraFormula(formula, i);\n                nuevoArregloFormula.push({valor: nombre});\n            }\n        };\n        this.agregarFormulaAnchuraYAltura(nuevoArregloFormula, true);\n    }\n\n    esOperacionAritmetica (caracter) {\n        if(caracter.localeCompare('+') == 0) {\n            return true;\n        } else if(caracter.localeCompare('-') == 0) {\n            return true;\n        } else if(caracter.localeCompare('/') == 0) {\n            return true;\n        } else if(caracter.localeCompare('*') == 0) {\n            return true;\n        } else if(caracter.localeCompare('x') == 0) {\n            return true;\n        }\n        return false;\n    }\n\n    esOperacionCompleja (formula, posicionCaracter) {\n        var palabra = this.getPalabraFormula(formula, posicionCaracter);\n        if(palabra.localeCompare('RAND') == 0) {\n            return true;\n        } else if(palabra.localeCompare('DIA') == 0) {\n            return true;\n        } else if(palabra.localeCompare('AVERAJE') == 0) {\n            return true;\n        } else if(palabra.localeCompare('MEDIA') == 0) {\n            return true;\n        }\n        return false;\n    }\n\n    getPalabraFormula (formula, posicionCaracter) {\n        var variable = '';\n        for (var i = posicionCaracter; i < formula.length; i++) {\n            if(formula.charAt(i) != \"(\" && formula.charAt(i) != \")\" && formula.charAt(i) != \"\\\\\" && \n                formula.charAt(i) != \"/\" && formula.charAt(i) != \"*\" && formula.charAt(i) != \"[\" && \n                formula.charAt(i) != \"√\" && formula.charAt(i) != \"+\" && formula.charAt(i) != \"-\")\n                variable+=formula[i];\n            else\n                return variable;\n        };\n        return variable;\n    }\n\n    esVariable (formula, posicionCaracter) {\n        var palabra = this.getPalabraFormula(formula, posicionCaracter);\n        for (var i = 0; i < campos.length; i++) {\n            if(campos[i].nombre.localeCompare(palabra) == 0) {\n                return true;\n            }\n        };\n        for (var i = 0; i < variables.length; i++) {\n            if(variables[i].nombre.localeCompare(palabra) == 0) {\n                return true;\n            }\n        };\n        for (var i = 0; i < objetos.length; i++) {\n            for (var j = 0; j < camposDeObjetos[i].length; j++) {\n                if(camposDeObjetos[i][j].nombre.localeCompare(palabra) == 0) {\n                    return true;\n                }\n            };\n        };\n        return false;\n    }\n\n    agregarFormulaAnchuraYAltura(arregloFormula, esIndiceCero) {\n        var contadorIndicadoresNumerador = 0, contadorIndicadoresDenominador = 0, contadorSignosNumerador = 0, contadorSignosDenominador = 0, contadorVariablesNumerador = 0, contadorVariablesDenominador = 0, esDespuesDivision = false;\n        for (var i = 0; i < arregloFormula.length; i++) {\n            if( !Array.isArray(arregloFormula[i].valor) && this.esOperacionAritmetica(arregloFormula[i].valor) ) {\n                if(!esDespuesDivision) {\n                    contadorSignosNumerador++;\n                } else {\n                    contadorSignosDenominador++;\n                }\n            } else if( (!Array.isArray(arregloFormula[i].valor) && arregloFormula[i].valor.localeCompare(\"\\\\\\\\\") != 0 && !this.esOperacionAritmetica(arregloFormula[i].valor) && arregloFormula[i].valor.localeCompare(\"division\\\\\\\\\") != 0) || Array.isArray(arregloFormula[i].valor) ) {\n                if(!esDespuesDivision) {\n                    contadorVariablesNumerador++;\n                } else {\n                    contadorVariablesDenominador++;\n                }\n            } else if( !Array.isArray(arregloFormula[i].valor) && arregloFormula[i].valor.localeCompare(\"\\\\\\\\\") == 0 ) {\n                arregloFormula[i].identificadorIndicador = identificadorIndicador;\n                identificadorIndicador++;\n                if(!esDespuesDivision) {\n                    contadorIndicadoresNumerador++;\n                } else {\n                    contadorIndicadoresDenominador++;\n                }\n            }\n            if ( !Array.isArray(arregloFormula[i].valor) && arregloFormula[i].valor.localeCompare(\"division\\\\\\\\\") == 0 ) {\n                esDespuesDivision = true;\n            }\n        };\n        var widthNumerador = 100;\n        //var height = 100;\n        var restaTotalIndicadoresNumerador = contadorIndicadoresNumerador * 5;\n        widthNumerador -= restaTotalIndicadoresNumerador;\n        var restaTotalSignosNumerador = contadorSignosNumerador * 2;\n        widthNumerador -= restaTotalSignosNumerador;\n        widthNumerador /= contadorVariablesNumerador;\n\n        var widthDenominador = 100;\n        var restaTotalIndicadoresDenominador = contadorIndicadoresDenominador * 5;\n        widthDenominador -= restaTotalIndicadoresDenominador;\n        var restaTotalSignosDenominador = contadorSignosDenominador * 2;\n        widthDenominador -= restaTotalSignosDenominador;\n        widthDenominador /= contadorVariablesDenominador;\n\n        var esDespuesDivisionWidth = false;\n        for (var i = 0; i < arregloFormula.length; i++) {\n            if( !Array.isArray(arregloFormula[i].valor) && this.esOperacionAritmetica(arregloFormula[i].valor) ) {\n                arregloFormula[i].width = \"2%\";\n            } else if( (!Array.isArray(arregloFormula[i].valor) && arregloFormula[i].valor.localeCompare(\"\\\\\\\\\") != 0 && !this.esOperacionAritmetica(arregloFormula[i].valor) && arregloFormula[i].valor.localeCompare(\"division\\\\\\\\\") != 0) /*|| Array.isArray(arregloFormula[i].valor)*/ ) {\n                if(!esDespuesDivisionWidth) {\n                    arregloFormula[i].width = widthNumerador+\"%\";\n                } else {\n                    arregloFormula[i].width = widthDenominador+\"%\";\n                }\n            } else if( !Array.isArray(arregloFormula[i].valor) && arregloFormula[i].valor.localeCompare(\"\\\\\\\\\") == 0 ) {\n                //if(!esIndiceCero) {\n                    arregloFormula[i].width = \"5%\";\n                /*} else {\n                    arregloFormula[i].width = (widthNumerador*0.05)+\"%\";\n                }*/\n            }else if( Array.isArray(arregloFormula[i].valor)) {\n                if(!esIndiceCero) {\n                    arregloFormula[i].width = \"90%\";\n                } else {\n                    arregloFormula[i].width = widthNumerador+\"%\";\n                }\n            }\n            if ( !Array.isArray(arregloFormula[i].valor) && arregloFormula[i].valor.localeCompare(\"division\\\\\\\\\") == 0 ) {\n                arregloFormula[i].height = \"2%\";\n            } else if(!Array.isArray(arregloFormula[i].valor)) {\n                if(!esIndiceCero) {\n                    if(esDespuesDivision)\n                        arregloFormula[i].height = \"49%\";\n                    else\n                        arregloFormula[i].height = \"100%\";\n                } else {\n                    arregloFormula[i].height = \"100%\";\n                }\n            } else if(Array.isArray(arregloFormula[i].valor)) {\n                if(!esIndiceCero) {\n                    if(esDespuesDivision)\n                        arregloFormula[i].height = \"49%\";\n                    else\n                        arregloFormula[i].height = \"100%\";\n                } else {\n                    arregloFormula[i].height = \"100%\";\n                }\n            }\n            if ( !Array.isArray(arregloFormula[i].valor) && arregloFormula[i].valor.localeCompare(\"division\\\\\\\\\") == 0 ) {\n                esDespuesDivisionWidth = true;\n            }\n        };\n        for (var i = 0; i < arregloFormula.length; i++) {\n            if( Array.isArray(arregloFormula[i].valor) ) {\n                this.agregarFormulaAnchuraYAltura(arregloFormula[i].valor, false);\n            }\n        }\n        /*var width = 0, posicionX = 0, posicionY = 0;\n        for (var i = 0; i < nuevoArregloFormula.length; i++) {\n            if (nuevoArregloFormula[i].length == undefined) {\n                //\n            }\n        };\n        this.setState({\n            formula: formulaTemp,\n            anchuraSeccionFormula: width\n        }, console.log(this.state.formula) );*/\n    }\n\n    //esNivelRaiz es bandera para saber si el arreglo que se esta recorriendo es el principal/original nivel 0 del arreglo de formulas\n    getFormulaAndOperationText (arreglo, esNivelRaiz) {\n        for (var i = 0; i < arreglo.length; i++) {\n            if( Array.isArray(arreglo[i].valor) ) {\n                this.getFormulaAndOperationText(arreglo[i].valor, false);\n            } else if( !Array.isArray(arreglo[i].valor) ) {\n                if(arreglo[i].operacion != undefined && arreglo[i].operacion.localeCompare(\"ASIG\") == 0) {\n                    formulaGuardarFormula += \"ASIG(\"+arreglo[i].valor+\")\";\n                    operacionGuardarFormula = \"ASIG\";\n                } else if(arreglo[i].operacion != undefined && arreglo[i].operacion.localeCompare(\"COUNT\") == 0) {\n                    formulaGuardarFormula += \"COUNT(\"+arreglo[i].valor+\")\";\n                    operacionGuardarFormula = \"COUNT\";\n                } else if(arreglo[i].operacion != undefined && arreglo[i].operacion.localeCompare(\"PROM\") == 0) {\n                    formulaGuardarFormula += \"PROM(\"+arreglo[i].valor+\")\";\n                    operacionGuardarFormula = \"PROM\";\n                } else if(arreglo[i].operacion != undefined && arreglo[i].operacion.localeCompare(\"MAX\") == 0) {\n                    formulaGuardarFormula += \"MAX(\"+arreglo[i].valor+\")\";\n                    operacionGuardarFormula = \"MAX\";\n                } else if(arreglo[i].operacion != undefined && arreglo[i].operacion.localeCompare(\"MIN\") == 0) {\n                    formulaGuardarFormula += \"MIN(\"+arreglo[i].valor+\")\";\n                    operacionGuardarFormula = \"MIN\";\n                } else if(arreglo[i].operacion != undefined && arreglo[i].operacion.localeCompare(\"AUTOSUM\") == 0) {\n                    formulaGuardarFormula += \"AUTOSUM(\"+arreglo[i].valor+\")\";\n                    operacionGuardarFormula = \"AUTOSUM\";\n                } else if(arreglo[i].operacion != undefined && arreglo[i].operacion.localeCompare(\"FORMULA\") == 0) {\n                    if(!esNivelRaiz && i == 0)\n                        formulaGuardarFormula += \"(\";\n                    formulaGuardarFormula += arreglo[i].valor;\n                    operacionGuardarFormula = \"FORMULA\";\n                } else if(arreglo[i].tipo != undefined && arreglo[i].tipo.localeCompare(\"signo\") == 0) {\n                    formulaGuardarFormula += arreglo[i].valor;\n                    operacionGuardarFormula = \"FORMULA\";\n                } else if(arreglo[i].tipo != undefined && arreglo[i].tipo.localeCompare(\"division\\\\\\\\\") == 0) {\n                    formulaGuardarFormula += \"/\";\n                    operacionGuardarFormula = \"FORMULA\";\n                }\n            }\n            if(!esNivelRaiz && i == arreglo.length-1)\n                formulaGuardarFormula += \")\";\n        };\n    }\n\n    iniciarGuardarFormula () {\n        console.log('this.state.formula')\n        console.log(this.state.formula)\n        formulaGuardarFormula = '';\n        operacionGuardarFormula = '';\n        this.getFormulaAndOperationText(this.state.formula, true);\n        /*for (var i = 0; i < this.state.formula.length; i++) {\n            if(this.state.formula[i].operacion != undefined && this.state.formula[i].operacion.localeCompare(\"ASIG\") == 0) {\n                formula += \"ASIG(\"+this.state.formula[i].valor+\")\";\n                operacion = \"ASIG\";\n            } else if(this.state.formula[i].operacion != undefined && this.state.formula[i].operacion.localeCompare(\"COUNT\") == 0) {\n                formula += \"COUNT(\"+this.state.formula[i].valor+\")\";\n                operacion = \"COUNT\";\n            } else if(this.state.formula[i].operacion != undefined && this.state.formula[i].operacion.localeCompare(\"PROM\") == 0) {\n                formula += \"PROM(\"+this.state.formula[i].valor+\")\";\n                operacion = \"PROM\";\n            } else if(this.state.formula[i].operacion != undefined && this.state.formula[i].operacion.localeCompare(\"MAX\") == 0) {\n                formula += \"MAX(\"+this.state.formula[i].valor+\")\";\n                operacion = \"MAX\";\n            } else if(this.state.formula[i].operacion != undefined && this.state.formula[i].operacion.localeCompare(\"MIN\") == 0) {\n                formula += \"MIN(\"+this.state.formula[i].valor+\")\";\n                operacion = \"MIN\";\n            } else if(this.state.formula[i].operacion != undefined && this.state.formula[i].operacion.localeCompare(\"AUTOSUM\") == 0) {\n                formula += \"AUTOSUM(\"+this.state.formula[i].valor+\")\";\n                operacion = \"AUTOSUM\";\n            } else {\n                formula += this.state.formula[i].valor;\n                operacion = \"FORMULA\";\n            }\n        };*/\n        console.log('formulaGuardarFormula');\n        console.log(formulaGuardarFormula);\n        console.log('operacionGuardarFormula');\n        console.log(operacionGuardarFormula);\n        console.log('variableSeleccionada');\n        console.log(variableSeleccionada);\n        var objetoFormula = {variableID: -1, variableCampoID: -1, numeroDeFormulaDeVariable: -1, tablaID: -1, formula: formulaGuardarFormula, operacion: operacionGuardarFormula};\n        if(variableSeleccionada.tablaID != undefined) {\n            objetoFormula.tablaID = variableSeleccionada.tablaID;\n        } else {\n            objetoFormula.variableID = variableSeleccionada.variableID;\n            objetoFormula.variableCampoID = variableSeleccionada.variableCampoID;\n        }\n        console.log('objetoFormula');\n        console.log(objetoFormula);\n        /*console.log('formula');\n        console.log(this.state.formula);*/\n        //this.props.anadirFormula(formula, this.state.formula);\n        variableSeleccionada = {};\n        operacionSeleccionada = {};\n        this.props.anadirFormula(objetoFormula, this.state.formula);\n        alert(\"Fórmula guardada.\");\n        //camposTablas={this.state.camposTablas} variables={this.state.variablesEscalares} objetos={this.state.variables} camposDeObjetos={this.state.camposVariables} excel={this.state.excel} camposDeExcel={this.state.camposDeExcel} formas={this.state.formas} variablesSQL={this.state.variablesSQL} camposVariablesSQL={this.state.camposVariablesSQL}\n        //this.guardarVariable(formula);\n    }\n\n    guardarVariable (formula) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"update \"+this.props.tablaVarEditar+\" set formula = '\"+formula+\"' where ID = \"+this.props.idVarEditar, (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    actualizarEstadoInputManual (seleccion) {\n        seleccionManual = seleccion;\n    }\n\n    loadTablas () {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Tablas\", (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        tablasOriginales = result.recordset;\n                        this.setState({\n                            tablas: result.recordset\n                        }, this.initLoadTablasCampos );\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    initLoadTablasCampos() {\n        var arregloTemp = [];\n        for (var i = 0; i < this.state.tablas.length; i++) {\n            this.loadTablasCampos(this.state.tablas[i].tabla, i, arregloTemp);\n        };\n    }\n\n    loadTablasCampos (nombreTabla, index, array) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = '\"+nombreTabla+\"'\", (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        var nombreColumnas = [];\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            nombreColumnas.push({valor: result.recordset[i].COLUMN_NAME,tipo: result.recordset[i].DATA_TYPE, esFuenteDato: true, esObjeto: false, esInstruccionSQL: false, tablaID: this.state.tablas[index].ID});\n                        };\n                        if(array[index] == undefined) {\n                            array[index] = [];\n                        }\n                        array[index] = $.merge(array[index], nombreColumnas);\n                        camposTablasOriginales = array;\n                        this.setState({\n                            camposTablas: array\n                        });\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    loadScalarVariables () {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Variables where esObjeto = 'false'\", (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            this.loadScalarVariablesFields(result.recordset[i]);\n                        };\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    loadScalarVariablesFields (variable) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from VariablesCampos where variableID = \"+variable.ID, (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        var temp = [...this.state.variablesEscalares];\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            temp.push({valor: result.recordset[i].nombre, tipo: result.recordset[i].tipo, esFuenteDato: false, variableID: variable.ID, variableCampoID: result.recordset[i].ID, esObjeto: variable.esObjeto, esInstruccionSQL: false, nivel: result.recordset[i].nivel})\n                        };\n                        variablesEscalaresOriginales = temp;\n                        this.setState({\n                            variablesEscalares: variablesEscalaresOriginales\n                        } );\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    loadVariables () {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Variables where esObjeto = 'true'\", (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        variablesOriginales = result.recordset;\n                        this.setState({\n                            variables: result.recordset\n                        }, this.initLoadVariablesCampos );\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    initLoadVariablesCampos() {\n        var arregloTemp = [];\n        for (var i = 0; i < this.state.variables.length; i++) {\n            this.loadVariablesCampos(this.state.variables[i], i, arregloTemp);\n        };\n    }\n\n    loadVariablesCampos (variable, index, array) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from VariablesCampos where variableID = \"+variable.ID, (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        var nombreColumnas = [];\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            nombreColumnas.push({valor: result.recordset[i].nombre, tipo: result.recordset[i].tipo, esFuenteDato: false, variableID: variable.ID, variableCampoID: result.recordset[i].ID, esObjeto: variable.esObjeto, esInstruccionSQL: false, nivel: result.recordset[i].nivel});\n                        };\n                        if(array[index] == undefined) {\n                            array[index] = [];\n                        }\n                        array[index] = $.merge(array[index], nombreColumnas);\n                        camposVariablesOriginales = array;\n                        this.setState({\n                            camposVariables: array\n                        });\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    loadVariablesSQL () {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Variables where esInstruccionSQL = 'true'\", (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        variablesOriginalesSQL = result.recordset;\n                        this.setState({\n                            variablesSQL: result.recordset\n                        }, this.initLoadVariablesCamposSQL );\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    initLoadVariablesCamposSQL() {\n        var arregloTemp = [];\n        for (var i = 0; i < this.state.variablesSQL.length; i++) {\n            this.loadVariablesCamposSQL(this.state.variablesSQL[i], i, arregloTemp);\n        };\n    }\n\n    loadVariablesCamposSQL (variable, index, array) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from InstruccionSQLCampos where variableID = \"+variable.ID, (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        var nombreColumnas = [];\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            nombreColumnas.push({valor: result.recordset[i].nombre, tipo: result.recordset[i].tipo, esFuenteDato: false, variableID: variable.ID, variableCampoID: result.recordset[i].ID, esObjeto: variable.esObjeto, esInstruccionSQL: true,  nivel: 0});\n                        };\n                        if(array[index] == undefined) {\n                            array[index] = [];\n                        }\n                        array[index] = $.merge(array[index], nombreColumnas);\n                        camposVariablesOriginalesSQL = array;\n                        this.setState({\n                            camposVariablesSQL: array\n                        });\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    loadExcel () {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from ExcelArchivos\", (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        excelOriginales = result.recordset;\n                        this.setState({\n                            excel: result.recordset\n                        }, this.initLoadExcelCampos );\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n    initLoadExcelCampos () {\n        var arregloTemp = [];\n        for (var i = 0; i < this.state.excel.length; i++) {\n            this.loadExcelCampos(this.state.excel[i], i, arregloTemp);\n        };\n    }\n\n    loadExcelCampos (excel, index, array) {\n         const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from ExcelVariables where excelArchivoID = \"+excel.ID, (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        var nombreColumnas = [];\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            var tipo;\n                            if(result.recordset[i].operacion.localeCompare(\"SUM\") == 0 || result.recordset[i].operacion.localeCompare(\"PROM\") == 0 || result.recordset[i].operacion.localeCompare(\"COUNT\") == 0) {\n                                tipo = 'decimal';\n                            } else if(result.recordset[i].operacion.localeCompare(\"MIN\") == 0 || result.recordset[i].operacion.localeCompare(\"MAX\") == 0 || result.recordset[i].operacion.localeCompare(\"ASIG\") == 0) {\n                                if(result.recordset[i].tipo.localeCompare(\"numero\") == 0)\n                                    tipo = 'decimal';\n                                else\n                                    tipo = result.recordset[i].tipo;\n                            }\n                            nombreColumnas.push({valor: result.recordset[i].nombre, tipo: tipo, esFuenteDato: false, excelArchivoID: excel.ID, excelVariableID: result.recordset[i].ID, esObjeto: false, esInstruccionSQL: false, nivel: 0});\n                        };\n                        if(array[index] == undefined) {\n                            array[index] = [];\n                        }\n                        array[index] = $.merge(array[index], nombreColumnas);\n                        camposExcelOriginales = array;\n                        this.setState({\n                            camposDeExcel: array\n                        });\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    loadFormas () {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from FormasVariables\", (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        var nombreColumnas = [];\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            nombreColumnas.push({valor: result.recordset[i].nombre, tipo: result.recordset[i].tipo, esFuenteDato: false, formaVariableID: result.recordset[i].ID, esObjeto: false, esInstruccionSQL: false, nivel: 0});\n                        };\n                        formasOriginales = result.recordset;\n                        this.setState({\n                            formas: nombreColumnas\n                        });\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n    \n    render() {\n        return (\n            <div>\n                {this.props.navbar}\n                <div className={\"row\"}>\n                    <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                        <div className={\"card\"}>\n                            <div className={\"border-top border-bottom\"} style={{width: \"100%\"}}>\n                                <div style={{width: \"100%\"}}>\n                                    <div className={\"font-20\"} style={{height: \"45vh\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", backgroundColor: \"#e6e6f2\", color: \"black\", overflowWrap: \"break-word\", wordWrap: \"break-word\", whiteSpace: \"-moz-pre-wrap\", whiteSpace: \"pre-wrap\"}}>\n                                        <Equacion formula={this.state.formula} clickEnFormula={this.clickEnFormula} height={\"100%\"} width={\"100%\"} isFirstRow={true} posicionEnArreglo={\"0\"}></Equacion>\n                                    </div>\n                                </div>\n                                <div style={{width: \"100%\", height: \"250px\"}}>\n                                    <div style={{width: \"50%\", height: \"100%\", float: \"left\", borderRight: \"1px solid black\", borderTop: \"1px solid black\", borderBottom: \"1px solid black\", padding: \"0% 1%\", overflowY: \"scroll\"}}>\n                                        <div className={\"font-18\"} style={{width: \"100%\", height: \"20%\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n                                            Seleccionar Variable\n                                        </div>\n                                        <div className={\"row\"} style={{height: \"100%\"}}>\n                                            <ListasSeleVariableContenedorVariable esOperacion={false} mostrarRosa={true}  tablas={this.state.tablas} camposTablas={this.state.camposTablas} variables={this.state.variablesEscalares} objetos={this.state.variables} camposDeObjetos={this.state.camposVariables} excel={this.state.excel} camposDeExcel={this.state.camposDeExcel} formas={this.state.formas} variablesSQL={this.state.variablesSQL} camposVariablesSQL={this.state.camposVariablesSQL} seleccionarMultiple={false} retornoSeleccionVariable={this.retornoSeleccionCampo} returnStateManualValue={this.actualizarEstadoInputManual}></ListasSeleVariableContenedorVariable>\n                                        </div>\n                                    </div>\n                                    <div style={{width: \"50%\", height: \"100%\", float: \"right\", borderTop: \"1px solid black\", borderBottom: \"1px solid black\", padding: \"0% 1%\", overflowY: \"scroll\"}}>\n                                        <div className={\"font-18\"} style={{width: \"100%\", height: \"20%\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n                                            Seleccionar Operacion\n                                        </div>\n                                        <div className={\"row\"} style={{height: \"100%\"}}>\n                                            <ListasSeleVariableContenedorOperador esOperacion={true} mostrarRosa={false} operaciones={this.state.operaciones} seleccionarMultiple={false} retornoSeleccionVariable={this.retornoSeleccionOperacion}></ListasSeleVariableContenedorOperador>\n                                        </div>\n                                    </div>\n                                </div>\n                                <br/>\n                                <div className={\"text-center\"} style={{width: \"100%\"}}>\n                                    <a href=\"#\" className=\"btn btn-primary active\" onClick={this.agregarAFormula}>Agregar Fórmula</a>\n                                </div>\n                                <br/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <br/>\n                <div className={\"row\"}>\n                    <a className={\"btn btn-success btn-block btnWhiteColorHover font-bold font-20\"} style={{color: \"#fafafa\"}} onClick={this.iniciarGuardarFormula}>Guardar Fórmula</a>\n                </div>\n                <br/>\n            </div>\n        );\n    }\n}\n"],"file":"Formula.js"}