{"version":3,"sources":["components/Dashboards/SeleccionarDashboard.js"],"names":["colores","SeleccionarDashboard","props","state","dashboards","getDashboards","bind","transaction","sql","Transaction","pool","begin","err","rolledBack","on","aborted","request","Request","query","result","console","log","rollback","commit","setState","recordset","navbar","color","crearDashboard","map","dashboard","i","editarDashboard","length","ID","nombre","width","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport sql from 'mssql';\n\nconst colores = [\"secondary\", \"success\", \"primary\", \"brand\"];\n\nexport default class SeleccionarDashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dashboards: []\n        }\n        this.getDashboards = this.getDashboards.bind(this);\n    }\n\n    componentDidMount() {\n        this.getDashboards();\n    }\n\n    getDashboards() {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Dashboard\", (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        this.setState({\n                            dashboards: result.recordset\n                        });\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.navbar}\n                \n                <div className={\"row\"}>\n                    <a className={\"btn btn-success btn-block btnWhiteColorHover font-bold font-20\"} style={{color: \"#fafafa\"}} onClick={this.props.crearDashboard}>Crear Dashboard</a>\n                </div>\n                <br/>\n                <div className={\"row\"}>\n                    <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                        <div className={\"card influencer-profile-data\"}>\n                            <div className={\"card-body\"}>\n                                <div className={\"row border-top border-bottom addPaddingToConfig\"}>\n                                    {this.state.dashboards.map((dashboard, i) =>\n                                        <a onClick={() => this.props.editarDashboard(dashboard)} style={{color: \"#fafafa\"}} className={\"btn btn-\" + (i <= colores.length-1 ? colores[i] : colores[i%colores.length]) + ' btn-block btnWhiteColorHover font-bold font-20'} key={dashboard.ID}>{dashboard.nombre}</a>\n                                    )}\n                                    {\n                                        this.state.dashboards.length == 0\n                                        ? <div className=\"p-3 mb-2 bg-dark text-white font-bold font-20 text-center\" style={{width: \"100%\"}}>No existen dashboards creados</div>\n                                        : null\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n"],"file":"SeleccionarDashboard.js"}