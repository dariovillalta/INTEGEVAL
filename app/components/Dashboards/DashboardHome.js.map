{"version":3,"sources":["components/Dashboards/DashboardHome.js"],"names":["DashboardHome","props","state","componenteActual","conexiones","camposConexiones","variablesEscalares","variables","camposVariables","variablesSQL","camposVariablesSQL","excel","camposDeExcel","formas","crearDashboard","bind","retornarSeleccionDashboards","editarVariables","changeStateFirstTimeToFalse","terminoCrearVariablesPasarAEdit","actualizarIDVariableModificada","getConections","getFieldsConections","getFieldConections","loadScalarVariables","loadScalarVariablesFields","getVariables","getFieldsVariables","getFieldVariables","loadVariablesSQL","initLoadVariablesCamposSQL","loadVariablesCamposSQL","loadExcel","initLoadExcelCampos","loadExcelCampos","loadFormas","setState","idVariable","esObjetoVariable","esInstruccionSQLVariable","tipoVariable","esPrimeraVez","nombreFuenteDatos","transaction","sql","Transaction","pool","begin","err","rolledBack","on","aborted","request","Request","query","result","console","log","rollback","commit","recordset","undefined","length","editarFuenteDatos","ID","nombre","descripcion","esObjeto","objetoPadreID","guardar","tablaDeVariableModificada","localeCompare","esInstruccionSQL","temp","i","push","valor","tabla","esTabla","arregloTemp","nombreTabla","index","array","tablaID","nombreColumnas","COLUMN_NAME","tipo","DATA_TYPE","$","merge","variable","esFuenteDato","variableID","variableCampoID","nivel","esVariable","esSQL","esExcel","operacion","excelArchivoID","excelVariableID","formaVariableID","esForma","configuracionHome","goOptions","terminoCrearFuenteDatosPasarAEdit","retornoSeleccionVariables","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport sql from 'mssql';\n\nimport SeleccionarDashboard from './SeleccionarDashboard.js';\nimport CrearDashboard from './CrearDashboard.js';\nimport EditarDashboardHome from './EditarDashboardHome.js';\n\nexport default class DashboardHome extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            componenteActual: \"selDashboard\",\n            conexiones: [],\n            camposConexiones: [],\n            variablesEscalares: [],\n            variables: [],\n            camposVariables: [],\n            variablesSQL: [],\n            camposVariablesSQL: [],\n            excel: [],\n            camposDeExcel: [],\n            formas: []\n        }\n        this.crearDashboard = this.crearDashboard.bind(this);\n        this.retornarSeleccionDashboards = this.retornarSeleccionDashboards.bind(this);\n        this.editarVariables = this.editarVariables.bind(this);\n        this.changeStateFirstTimeToFalse = this.changeStateFirstTimeToFalse.bind(this);\n        this.terminoCrearVariablesPasarAEdit = this.terminoCrearVariablesPasarAEdit.bind(this);\n        this.actualizarIDVariableModificada = this.actualizarIDVariableModificada.bind(this);\n\n        this.getConections = this.getConections.bind(this);\n        this.getFieldsConections = this.getFieldsConections.bind(this);\n        this.getFieldConections = this.getFieldConections.bind(this);\n        this.loadScalarVariables = this.loadScalarVariables.bind(this);\n        this.loadScalarVariablesFields = this.loadScalarVariablesFields.bind(this);\n        this.getVariables = this.getVariables.bind(this);\n        this.getFieldsVariables = this.getFieldsVariables.bind(this);\n        this.getFieldVariables = this.getFieldVariables.bind(this);\n        this.loadVariablesSQL = this.loadVariablesSQL.bind(this);\n        this.initLoadVariablesCamposSQL = this.initLoadVariablesCamposSQL.bind(this);\n        this.loadVariablesCamposSQL = this.loadVariablesCamposSQL.bind(this);\n        this.loadExcel = this.loadExcel.bind(this);\n        this.initLoadExcelCampos = this.initLoadExcelCampos.bind(this);\n        this.loadExcelCampos = this.loadExcelCampos.bind(this);\n        this.loadFormas = this.loadFormas.bind(this);\n    }\n\n    componentDidMount () {\n        this.getConections();\n        this.getVariables();\n        this.loadScalarVariables();\n        this.loadVariablesSQL();\n        this.loadExcel();\n        this.loadFormas();\n    }\n\n    crearDashboard () {\n        this.setState({\n            componenteActual: \"crearDashboard\"\n        });\n    }\n\n    retornarSeleccionDashboards () {\n        this.setState({\n            componenteActual: \"selDashboard\"\n        });\n    }\n\n    editarVariables (idVariable, esObjetoVariable, esInstruccionSQLVariable, tipoVariable) {\n        this.setState({\n            idVariable: idVariable,\n            componenteActual: \"editarVariables\",\n            tipoVariable: tipoVariable,\n            esObjetoVariable: esObjetoVariable,\n            esInstruccionSQLVariable: esInstruccionSQLVariable,\n            esPrimeraVez: true\n        });\n    }\n\n    changeStateFirstTimeToFalse() {\n        this.setState({\n            esPrimeraVez: false\n        });\n    }\n\n    terminoCrearVariablesPasarAEdit (nombreFuenteDatos) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Campos where nombre = '\"+nombreFuenteDatos+\"'\", (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        if(result.recordset != undefined) {\n                            if(result.recordset.length) {\n                                this.editarFuenteDatos(result.recordset[0].ID, result.recordset[0].nombre, result.recordset[0].descripcion, result.recordset[0].esObjeto, result.recordset[0].objetoPadreID, result.recordset[0].guardar);\n                            }\n                        }\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    actualizarIDVariableModificada (tablaDeVariableModificada) {\n        if(tablaDeVariableModificada.localeCompare(\"excel\") == 0) {\n            const transaction = new sql.Transaction( this.props.pool );\n            transaction.begin(err => {\n                var rolledBack = false;\n                transaction.on('rollback', aborted => {\n                    rolledBack = true;\n                });\n                const request = new sql.Request(transaction);\n                request.query(\"select top 1 * from ExcelArchivos order by ID desc\", (err, result) => {\n                    if (err) {\n                        console.log(err);\n                        if (!rolledBack) {\n                            transaction.rollback(err => {\n                            });\n                        }\n                    } else {\n                        transaction.commit(err => {\n                            if(result.recordset.length > 0) {\n                                this.editarVariables(result.recordset[0].ID, false, false, \"excel\");\n                            }\n                        });\n                    }\n                });\n            }); // fin transaction\n        } else if(tablaDeVariableModificada.localeCompare(\"forma\") == 0) {\n            const transaction = new sql.Transaction( this.props.pool );\n            transaction.begin(err => {\n                var rolledBack = false;\n                transaction.on('rollback', aborted => {\n                    rolledBack = true;\n                });\n                const request = new sql.Request(transaction);\n                request.query(\"select top 1 * from FormasVariables order by ID desc\", (err, result) => {\n                    if (err) {\n                        console.log(err);\n                        if (!rolledBack) {\n                            transaction.rollback(err => {\n                            });\n                        }\n                    } else {\n                        transaction.commit(err => {\n                            if(result.recordset.length > 0) {\n                                console.log(\"yeah\");\n                                this.editarVariables(result.recordset[0].ID, false, false, \"forma\");\n                            }\n                        });\n                    }\n                });\n            }); // fin transaction\n        } else if(tablaDeVariableModificada.localeCompare(\"variable\") == 0) {\n            const transaction = new sql.Transaction( this.props.pool );\n            transaction.begin(err => {\n                var rolledBack = false;\n                transaction.on('rollback', aborted => {\n                    rolledBack = true;\n                });\n                const request = new sql.Request(transaction);\n                request.query(\"select top 1 * from Variables order by ID desc\", (err, result) => {\n                    if (err) {\n                        console.log(err);\n                        if (!rolledBack) {\n                            transaction.rollback(err => {\n                            });\n                        }\n                    } else {\n                        transaction.commit(err => {\n                            if(result.recordset.length > 0) {\n                                this.editarVariables(result.recordset[0].ID, result.recordset[0].esObjeto, result.recordset[0].esInstruccionSQL, \"variable\");\n                            }\n                        });\n                    }\n                });\n            }); // fin transaction\n        }\n    }\n\n    /////////////////////////////////////////////////////////\n\n    getConections () {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Tablas\", (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                        return [];\n                    }\n                } else {\n                    transaction.commit(err => {\n                        var temp = [];\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            temp.push({valor: result.recordset[i].tabla, ID: result.recordset[i].ID, esTabla: true});\n                        };\n                        /*this.setState({\n                            conexiones: temp\n                        }, this.getFieldsConections );*/\n                        this.setState({\n                            conexiones: temp\n                        }, this.getFieldsConections );\n                        //this.getFieldsConections();\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    getFieldsConections () {\n        var arregloTemp = [];\n        for (var i = 0; i < this.state.conexiones.length; i++) {\n            this.getFieldConections(this.state.conexiones[i].valor, i, arregloTemp, this.state.conexiones[i].ID);\n        };\n    }\n\n    getFieldConections(nombreTabla, index, array, tablaID) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = '\"+nombreTabla+\"'\", (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        var nombreColumnas = [];\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            nombreColumnas.push({valor: result.recordset[i].COLUMN_NAME, tipo: result.recordset[i].DATA_TYPE, tablaID: tablaID});\n                        };\n                        if(array[index] == undefined) {\n                            array[index] = [];\n                        }\n                        array[index] = $.merge(array[index], nombreColumnas);\n                        this.setState({\n                            camposConexiones: array\n                        });\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    loadScalarVariables () {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Variables where esObjeto = 'false'\", (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            this.loadScalarVariablesFields(result.recordset[i]);\n                        };\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    loadScalarVariablesFields (variable) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from VariablesCampos where variableID = \"+variable.ID, (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        var temp = [...this.state.variablesEscalares];\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            temp.push({valor: result.recordset[i].nombre, tipo: result.recordset[i].tipo, esFuenteDato: false, variableID: variable.ID, variableCampoID: result.recordset[i].ID, esObjeto: variable.esObjeto, esInstruccionSQL: false, nivel: result.recordset[i].nivel, esVariable: true})\n                        };\n                        this.setState({\n                            variablesEscalares: temp\n                        } );\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    getVariables () {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Variables where esObjeto = 'true'\", (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                        return [];\n                    }\n                } else {\n                    transaction.commit(err => {\n                        var temp = [];\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            temp.push({valor: result.recordset[i].nombre, ID: result.recordset[i].ID, esVariable: true});\n                        };\n                        /*this.setState({\n                            variables: temp\n                        }, this.getFieldsVariables );*/\n                        this.setState({\n                            variables: temp\n                        }, this.getFieldsVariables );\n                        //this.getFieldsVariables();\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    getFieldsVariables () {\n        var arregloTemp = [];\n        for (var i = 0; i < this.state.variables.length; i++) {\n            this.getFieldVariables(this.state.variables[i].ID, i, arregloTemp);\n        };\n    }\n\n    getFieldVariables(variableID, index, array) {\n        if(variableID != undefined) {\n            const transaction = new sql.Transaction( this.props.pool );\n            transaction.begin(err => {\n                var rolledBack = false;\n                transaction.on('rollback', aborted => {\n                    rolledBack = true;\n                });\n                const request = new sql.Request(transaction);\n                request.query(\"select * from VariablesCampos where variableID = \"+variableID, (err, result) => {\n                    if (err) {\n                        console.log(err);\n                        if (!rolledBack) {\n                            transaction.rollback(err => {\n                            });\n                        }\n                    } else {\n                        transaction.commit(err => {\n                            var nombreColumnas = [];\n                            for (var i = 0; i < result.recordset.length; i++) {\n                                nombreColumnas.push({valor: result.recordset[i].nombre, tipo: result.recordset[i].tipo, ID: result.recordset[i].ID, variableID: variableID});\n                            };\n                            if(array[index] == undefined) {\n                                array[index] = [];\n                            }\n                            array[index] = $.merge(array[index], nombreColumnas);\n                            this.setState({\n                                camposVariables: array\n                            });\n                        });\n                    }\n                });\n            }); // fin transaction\n        }\n    }\n\n    loadVariablesSQL () {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Variables where esInstruccionSQL = 'true'\", (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        var temp = [];\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            temp.push(result.recordset[i]);\n                            temp[temp.length-1].esSQL = true;\n                        };\n                        this.setState({\n                            variablesSQL: temp\n                        }, this.initLoadVariablesCamposSQL );\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    initLoadVariablesCamposSQL() {\n        var arregloTemp = [];\n        for (var i = 0; i < this.state.variablesSQL.length; i++) {\n            this.loadVariablesCamposSQL(this.state.variablesSQL[i], i, arregloTemp);\n        };\n    }\n\n    loadVariablesCamposSQL (variable, index, array) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from InstruccionSQLCampos where variableID = \"+variable.ID, (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        var nombreColumnas = [];\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            nombreColumnas.push({valor: result.recordset[i].nombre, tipo: result.recordset[i].tipo, esFuenteDato: false, variableID: variable.ID, variableCampoID: result.recordset[i].ID, esObjeto: variable.esObjeto, esInstruccionSQL: true,  nivel: 0});\n                        };\n                        if(array[index] == undefined) {\n                            array[index] = [];\n                        }\n                        array[index] = $.merge(array[index], nombreColumnas);\n                        this.setState({\n                            camposVariablesSQL: array\n                        });\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    loadExcel () {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from ExcelArchivos\", (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        var temp = [];\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            temp.push(result.recordset[i]);\n                            temp[temp.length-1].esExcel = true;\n                        };\n                        this.setState({\n                            excel: temp\n                        }, this.initLoadExcelCampos );\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n    initLoadExcelCampos () {\n        var arregloTemp = [];\n        for (var i = 0; i < this.state.excel.length; i++) {\n            this.loadExcelCampos(this.state.excel[i], i, arregloTemp);\n        };\n    }\n\n    loadExcelCampos (excel, index, array) {\n         const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from ExcelVariables where excelArchivoID = \"+excel.ID, (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        var nombreColumnas = [];\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            var tipo;\n                            if(result.recordset[i].operacion.localeCompare(\"SUM\") == 0 || result.recordset[i].operacion.localeCompare(\"PROM\") == 0 || result.recordset[i].operacion.localeCompare(\"COUNT\") == 0) {\n                                tipo = 'decimal';\n                            } else if(result.recordset[i].operacion.localeCompare(\"MIN\") == 0 || result.recordset[i].operacion.localeCompare(\"MAX\") == 0 || result.recordset[i].operacion.localeCompare(\"ASIG\") == 0) {\n                                if(result.recordset[i].tipo.localeCompare(\"numero\") == 0)\n                                    tipo = 'decimal';\n                                else\n                                    tipo = result.recordset[i].tipo;\n                            }\n                            nombreColumnas.push({valor: result.recordset[i].nombre, tipo: tipo, esFuenteDato: false, excelArchivoID: excel.ID, excelVariableID: result.recordset[i].ID, esObjeto: false, esInstruccionSQL: false, nivel: 0});\n                        };\n                        if(array[index] == undefined) {\n                            array[index] = [];\n                        }\n                        array[index] = $.merge(array[index], nombreColumnas);\n                        this.setState({\n                            camposDeExcel: array\n                        });\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    loadFormas () {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from FormasVariables\", (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        var nombreColumnas = [];\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            nombreColumnas.push({valor: result.recordset[i].nombre, tipo: result.recordset[i].tipo, esFuenteDato: false, formaVariableID: result.recordset[i].ID, esObjeto: false, esInstruccionSQL: false, nivel: 0, esForma: true});\n                        };\n                        this.setState({\n                            formas: nombreColumnas\n                        });\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    render() {\n        if(this.state.componenteActual.localeCompare(\"selDashboard\") == 0) {\n            return (\n                <div>\n                    <SeleccionarDashboard pool={this.props.pool}\n                                            configuracionHome={this.props.configuracionHome}\n                                            crearDashboard={this.crearDashboard}\n                                            goOptions={this.props.goOptions}\n                                            editarVariable={this.editarVariables}>\n                    </SeleccionarDashboard>\n                </div>\n            );\n        } else if(this.state.componenteActual.localeCompare(\"crearDashboard\") == 0) {\n            return (\n                <div>\n                    <CrearDashboard pool={this.props.pool}\n                                            retornarSeleccionDashboards={this.retornarSeleccionDashboards}\n                                            terminoCrearCampo={this.terminoCrearFuenteDatosPasarAEdit}\n                                            tablas={this.state.conexiones}\n                                            camposTablas={this.state.camposConexiones}\n                                            variablesEscalares={this.state.variablesEscalares}\n                                            objetos={this.state.variables}\n                                            camposDeObjetos={this.state.camposVariables}\n                                            excel={this.state.excel}\n                                            camposDeExcel={this.state.camposDeExcel}\n                                            formas={this.state.formas}\n                                            variablesSQL={this.state.variablesSQL}\n                                            camposVariablesSQL={this.state.camposVariablesSQL}>\n                    </CrearDashboard>\n                </div>\n            );\n        } else if(this.state.componenteActual.localeCompare(\"editarVariables\") == 0) {\n            return (\n                <div>\n                    <EditarVariablesHome pool={this.props.pool}\n                                    goOptions={this.props.goOptions}\n                                    idVariable={this.state.idVariable}\n                                    tipoVariable={this.state.tipoVariable}\n                                    esObjetoVariable={this.state.esObjetoVariable}\n                                    esInstruccionSQLVariable={this.state.esInstruccionSQLVariable}\n                                    retornoSeleccionVariables={this.retornoSeleccionVariables}\n                                    configuracionHome={this.props.configuracionHome}\n                                    actualizarIDVariableModificada={this.actualizarIDVariableModificada}\n                                    changeStateFirstTimeToFalse={this.changeStateFirstTimeToFalse}\n                                    esPrimeraVez={this.state.esPrimeraVez}>\n                    </EditarVariablesHome>\n                </div>\n            );\n        }\n    }\n}\n"],"file":"DashboardHome.js"}