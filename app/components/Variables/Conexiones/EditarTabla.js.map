{"version":3,"sources":["components/Variables/Conexiones/EditarTabla.js"],"names":["campos","nombre","funciones","funcion","texto","funcionesTablas","EditarTabla","props","state","tablas","errorCreacionTabla","campo","descripcion","mostrar","mensajeModal","mostrarMensaje","mensajeConfirmado","esError","esConfirmar","titulo","mensaje","banderaMetodoInit","idElementoSelec","indiceX","indiceY","updateTable","bind","dismissTableNewError","dismissMessageModal","confirmMessageModal","showSuccesMessage","nombreTabla","$","val","usuarioTabla","contrasenaTabla","servidorTabla","basedatosTabla","tablaTabla","funcionTabla","length","setState","transaction","sql","Transaction","pool","begin","err","rolledBack","on","aborted","request","Request","query","idTablaSeleccionada","result","console","log","rollback","commit","localeCompare","copiaID","deleteTable","self","setTimeout","configuracionHome","goOptions","retornoSeleccionTabla","nombreTablaSeleccionada","usuarioTablaSeleccionada","contrasenaTablaSeleccionada","servidorTablaSeleccionada","baseDatosTablaSeleccionada","tablaTablaSeleccionada","display","alignItems","justifyContent","tipoConexion","margin","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport sql from 'mssql';\n\nimport ErrorMessage from '../../ErrorMessage.js';\nimport MessageModal from '../../MessageModal.js';\n\nconst campos = [ {nombre: \"varchar\"}, {nombre: \"bit\"}, {nombre: \"date\"}, {nombre: \"int\"} ];\nlet funciones = [ {funcion: \"idCliente\", texto: \"ID de Cliente\"}, {funcion: \"fecha\", texto: \"fecha\"}, {nombre: \"date\"}, {nombre: \"int\"} ];\nconst funcionesTablas = [{nombre: \"Otro\"}, {nombre: \"Pagos de Préstamos\"}, {nombre: \"Plan de Pagos\"}];\n\nexport default class EditarTabla extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tablas: [],\n            errorCreacionTabla: {campo: \"\", descripcion: \"\", mostrar: false},\n            mensajeModal: {mostrarMensaje: false, mensajeConfirmado: false, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: -1, indiceX: -1, indiceY: -1}\n        }\n        this.updateTable = this.updateTable.bind(this);\n        this.dismissTableNewError = this.dismissTableNewError.bind(this);\n        this.dismissMessageModal = this.dismissMessageModal.bind(this);\n        this.confirmMessageModal = this.confirmMessageModal.bind(this);\n        this.showSuccesMessage = this.showSuccesMessage.bind(this);\n    }\n    /* mensajeModal <- de state\n        //mostrarMensaje:bandera para mostrar modal mensaje en pantalla\n        //mensajeConfirmado:retorno del modal mensaje si fue conf\n        //esError:bandera para ver que tipo de modal mensaje mostrar\n        //esConfirmar:bandera para ver que tipo de modal mensaje mostrar\n        //titulo:titulo del modal\n        //mensaje:mensaje del modal\n        //banderaMetodoInit:variable para ver a que metodo ir cuando regresa de confirmar el modal\n        //idElementoSelec:id del elemento que mostro el modal mensaje\n        //indiceX:posicion de la tabla en el arreglo que mostro el modal mensaje\n        //indiceY:posicion del campo en el arreglo de tablas que mostro el modal mensaje\n    */\n\n    componentDidMount() {\n    }\n\n    updateTable() {\n        let nombreTabla = $(\"#nombreTablaNuevo\").val();\n        let usuarioTabla = $(\"#usuarioTablaNuevo\").val();\n        let contrasenaTabla = $(\"#contrasenaTablaNuevo\").val();\n        let servidorTabla = $(\"#servidorTablaNuevo\").val();\n        let basedatosTabla = $(\"#basedatosTablaNuevo\").val();\n        let tablaTabla = $(\"#tablaTablaNuevo\").val();\n        let funcionTabla = $(\"#funcionTabla\").val();\n        if(nombreTabla.length > 0 && nombreTabla.length < 71) {\n            if(usuarioTabla.length > 0 && usuarioTabla.length < 51) {\n                if(contrasenaTabla.length > 0 && contrasenaTabla.length < 201) {\n                    if(servidorTabla.length > 0 && servidorTabla.length < 51) {\n                        if(basedatosTabla.length > 0 && basedatosTabla.length < 51) {\n                            if(tablaTabla.length > 0 && tablaTabla.length < 71) {\n                                if(tablaTabla.length > 0 && tablaTabla.length < 71) {\n                                    this.setState({\n                                        errorCreacionTabla: {campo: \"\", descripcion: \"\", mostrar: false}\n                                    });\n                                    const transaction = new sql.Transaction( this.props.pool );\n                                    transaction.begin(err => {\n                                        var rolledBack = false;\n                                        transaction.on('rollback', aborted => {\n                                            rolledBack = true;\n                                        });\n                                        const request = new sql.Request(transaction);\n                                        request.query(\"update Tablas set Nombre = '\"+nombreTabla+\"', Usuario = '\"+usuarioTabla+\"', Contrasena = '\"+contrasenaTabla+\"', Servidor = '\"+servidorTabla+\"', BaseDatos = '\"+basedatosTabla+\"', Tabla = '\"+tablaTabla+\"' where ID = \"+this.props.idTablaSeleccionada, (err, result) => {\n                                            if (err) {\n                                                if (!rolledBack) {\n                                                    console.log(err);\n                                                    transaction.rollback(err => {\n                                                    });\n                                                }\n                                            } else {\n                                                transaction.commit(err => {\n                                                    this.showSuccesMessage(\"Exito\", \"Tabla creada con éxito.\");\n                                                });\n                                            }\n                                        });\n                                    }); // fin transaction\n                                } else {\n                                    let campo = \"Función de la Tabla\";\n                                    let descripcion;\n                                    if(funcionTabla.length == 0)\n                                        descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                                    else\n                                        descripcion = \"El campo debe tener una longitud menor a 31.\";\n                                    this.setState({\n                                        errorCreacionTabla: {campo: campo, descripcion: descripcion, mostrar: true}\n                                    });\n                                }\n                            } else {\n                                let campo = \"Nombre de la Tabla\";\n                                let descripcion;\n                                if(tablaTabla.length == 0)\n                                    descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                                else\n                                    descripcion = \"El campo debe tener una longitud menor a 71.\";\n                                this.setState({\n                                    errorCreacionTabla: {campo: campo, descripcion: descripcion, mostrar: true}\n                                });\n                            }\n                        } else {\n                            let campo = \"Base de Datos de la Tabla\";\n                            let descripcion;\n                            if(basedatosTabla.length == 0)\n                                descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                            else\n                                descripcion = \"El campo debe tener una longitud menor a 51.\";\n                            this.setState({\n                                errorCreacionTabla: {campo: campo, descripcion: descripcion, mostrar: true}\n                            });\n                        }\n                    } else {\n                        let campo = \"Servidor de la Tabla\";\n                        let descripcion;\n                        if(servidorTabla.length == 0)\n                            descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                        else\n                            descripcion = \"El campo debe tener una longitud menor a 51.\";\n                        this.setState({\n                            errorCreacionTabla: {campo: campo, descripcion: descripcion, mostrar: true}\n                        });\n                    }\n                } else {\n                    let campo = \"Contraseña de la Tabla\";\n                    let descripcion;\n                    if(contrasenaTabla.length == 0)\n                        descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                    else\n                        descripcion = \"El campo debe tener una longitud menor a 201.\";\n                    this.setState({\n                        errorCreacionTabla: {campo: campo, descripcion: descripcion, mostrar: true}\n                    });\n                }\n            } else {\n                let campo = \"Usuario de la Tabla\";\n                let descripcion;\n                if(usuarioTabla.length == 0)\n                    descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                else\n                    descripcion = \"El campo debe tener una longitud menor a 51.\";\n                this.setState({\n                    errorCreacionTabla: {campo: campo, descripcion: descripcion, mostrar: true}\n                });\n            }\n        } else {\n            let campo = \"Nombre de la Conección\";\n            let descripcion;\n            if(nombreTabla.length == 0)\n                descripcion = \"El campo debe tener una longitud mayor a 0.\";\n            else\n                descripcion = \"El campo debe tener una longitud menor a 71.\";\n            this.setState({\n                errorCreacionTabla: {campo: campo, descripcion: descripcion, mostrar: true}\n            });\n        }\n    }\n\n\n    /*======_______====== ======_______======   MENSAJES ERROR DE CAMPOS    ======_______====== ======_______======*/\n    /*======_______======                                                                       ======_______======*/\n    /*======_______======                                                                       ======_______======*/\n    /*======_______====== ======_______====== ====_____====  ====_____====  ======_______====== ======_______======*/\n\n    dismissTableNewError() {\n        this.setState({\n            errorCreacionTabla: {campo: \"\", descripcion: \"\", mostrar: false}\n        });\n    }\n\n    /*======_______====== ======_______======   MENSAJES MODAL    ======_______====== ======_______======*/\n    /*======_______======                                                             ======_______======*/\n    /*======_______======                                                             ======_______======*/\n    /*======_______====== ======_______====== ==_____==  ==___==  ======_______====== ======_______======*/\n\n    dismissMessageModal() {\n        this.setState({\n            mensajeModal: {mostrarMensaje: false, mensajeConfirmado: false, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: -1, indiceX: -1, indiceY: -1}\n        });\n    }\n\n    confirmMessageModal() {\n        if(this.state.mensajeModal.banderaMetodoInit.localeCompare(\"goDelTable\") == 0) {\n            let copiaID = this.state.mensajeModal.idElementoSelec;\n            this.deleteTable(copiaID);\n        }\n    }\n\n    showSuccesMessage(titulo, mensaje) {\n        this.setState({\n            mensajeModal: {mostrarMensaje: true, mensajeConfirmado: false, esError: false, esConfirmar: false, titulo: titulo, mensaje: mensaje, banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX, indiceY: this.state.mensajeModal.indiceY}\n        });\n        let self = this;\n        setTimeout(function(){\n            self.setState({\n                mensajeModal: {mostrarMensaje: false, mensajeConfirmado: false, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: self.state.mensajeModal.idElementoSelec, indiceX: self.state.mensajeModal.indiceX, indiceY: self.state.mensajeModal.indiceY}\n            });\n        }, 850);\n    }\n\n    render() {\n        return (\n            <div>\n                <div className={\"row\"}>\n                    <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                        <div className={\"page-header\"}>\n                            <h2 className={\"pageheader-title\"}>Configuraci&oacute;n de Conexiones a las Tablas</h2>\n                            <div className={\"page-breadcrumb\"}>\n                                <nav aria-label=\"breadcrumb\">\n                                    <ol className={\"breadcrumb\"}>\n                                        <li className={\"breadcrumb-item font-16\"} aria-current=\"page\" onClick={this.props.configuracionHome}><a href=\"#\" className={\"breadcrumb-link\"}>Configuraci&oacute;n</a></li>\n                                        <li className={\"breadcrumb-item font-16\"} aria-current=\"page\" onClick={this.props.goOptions}><a href=\"#\" className={\"breadcrumb-link\"}>Tipo de Configuraci&oacute;n</a></li>\n                                        <li className={\"breadcrumb-item font-16\"} aria-current=\"page\" onClick={this.props.retornoSeleccionTabla}><a href=\"#\" className={\"breadcrumb-link\"}>Tablas</a></li>\n                                        <li className={\"breadcrumb-item active font-16\"} aria-current=\"page\">Editar Tabla</li>\n                                    </ol>\n                                </nav>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={\"row\"}>\n                    <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                        <div className={\"card influencer-profile-data\"}>\n                            <div className={\"card-body\"}>\n                                <h3>Crear Nueva Tabla</h3>\n                                <div className={\"row border-top\"}>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Nombre de la Conecci&oacute;n</label>\n                                        <input id=\"nombreTablaNuevo\" defaultValue={this.props.nombreTablaSeleccionada} type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Usuario de la Tabla</label>\n                                        <input id=\"usuarioTablaNuevo\" defaultValue={this.props.usuarioTablaSeleccionada} type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                </div>\n                                <div className={\"row\"}>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Contrase&ntilde;a de la Tabla</label>\n                                        <input id=\"contrasenaTablaNuevo\" defaultValue={this.props.contrasenaTablaSeleccionada} type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Servidor de la Tabla</label>\n                                        <input id=\"servidorTablaNuevo\" defaultValue={this.props.servidorTablaSeleccionada} type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                </div>\n                                <div className={\"row\"}>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Base de Datos de la Tabla</label>\n                                        <input id=\"basedatosTablaNuevo\" defaultValue={this.props.baseDatosTablaSeleccionada} type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Nombre de la Tabla</label>\n                                        <input id=\"tablaTablaNuevo\" defaultValue={this.props.tablaTablaSeleccionada} type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                </div>\n                                <div className={\"row\"} style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n                                    <select id=\"tipoConexion\" defaultValue={this.props.tipoConexion} className=\"form-control\">\n                                        <option value=\"sql\">Transact-SQL</option>\n                                    </select>\n                                </div>\n                                { this.state.errorCreacionTabla.mostrar ? (\n                                    <ErrorMessage campo={this.state.errorCreacionTabla.campo} descripcion={this.state.errorCreacionTabla.descripcion} dismissTableError={this.dismissTableNewError}> </ErrorMessage>\n                                ) : (\n                                    <span></span>\n                                )}\n                                <div className={\"row\"}>\n                                    <button onClick={this.updateTable} className={\"btn btn-success btn-block col-xl-10 col-10 font-bold font-20\"} style={{margin: \"0 auto\", display: \"block\"}}>Guardas Cambios</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <br/>\n\n                { this.state.mensajeModal.mostrarMensaje ? (\n                    <MessageModal esError={this.state.mensajeModal.esError} esConfirmar={this.state.mensajeModal.esConfirmar} dismissMessage={this.dismissMessageModal} confirmFunction={this.confirmMessageModal} titulo={this.state.mensajeModal.titulo} mensaje={this.state.mensajeModal.mensaje}> </MessageModal>\n                ) : (\n                    <span></span>\n                )}\n            </div>\n        );\n    }\n}\n"],"file":"EditarTabla.js"}