{"version":3,"sources":["components/Variables/Conexiones/EditarTabla.js"],"names":["campos","nombre","funciones","funcion","texto","funcionesTablas","EditarTabla","props","state","tablas","errorCreacionTabla","campo","descripcion","mostrar","mensajeModal","mostrarMensaje","mensajeConfirmado","esError","esConfirmar","titulo","mensaje","banderaMetodoInit","idElementoSelec","indiceX","indiceY","saveBitacora","bind","updateTable","dismissTableNewError","modifyTableConfirmation","fecha","tipoVariable","idVariable","transaction","sql","Transaction","pool","begin","err","rolledBack","on","aborted","request","Request","query","userID","userName","getFullYear","getMonth","getDate","result","console","log","showMessage","rollback","commit","nombreTabla","$","val","usuarioTabla","contrasenaTabla","servidorTabla","basedatosTabla","tablaTabla","funcionTabla","tipoConexion","length","setState","idTablaSeleccionada","showSuccesMessage","nuevosValores","Date","configuracionHome","goOptions","retornoSeleccionTabla","nombreTablaSeleccionada","usuarioTablaSeleccionada","contrasenaTablaSeleccionada","servidorTablaSeleccionada","baseDatosTablaSeleccionada","tablaTablaSeleccionada","display","alignItems","justifyContent","margin","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport sql from 'mssql';\n\nimport ErrorMessage from '../../ErrorMessage.js';\n\nconst campos = [ {nombre: \"varchar\"}, {nombre: \"bit\"}, {nombre: \"date\"}, {nombre: \"int\"} ];\nlet funciones = [ {funcion: \"idCliente\", texto: \"ID de Cliente\"}, {funcion: \"fecha\", texto: \"fecha\"}, {nombre: \"date\"}, {nombre: \"int\"} ];\nconst funcionesTablas = [{nombre: \"Otro\"}, {nombre: \"Pagos de Préstamos\"}, {nombre: \"Plan de Pagos\"}];\n\nexport default class EditarTabla extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tablas: [],\n            errorCreacionTabla: {campo: \"\", descripcion: \"\", mostrar: false},\n            mensajeModal: {mostrarMensaje: false, mensajeConfirmado: false, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: -1, indiceX: -1, indiceY: -1}\n        }\n        this.saveBitacora = this.saveBitacora.bind(this);\n        this.updateTable = this.updateTable.bind(this);\n        this.dismissTableNewError = this.dismissTableNewError.bind(this);\n        this.modifyTableConfirmation = this.modifyTableConfirmation.bind(this);\n    }\n\n    saveBitacora (fecha, descripcion, tipoVariable, idVariable) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"insert into Bitacora (usuarioID, nombreUsuario, fecha, descripcion, tipoVariable, idVariable) values (\"+this.props.userID+\", '\"+this.props.userName+\"', '\"+fecha.getFullYear()+\"-\"+(fecha.getMonth()+1)+\"-\"+fecha.getDate()+\"', '\"+descripcion+\"', '\"+tipoVariable+\"', \"+idVariable+\")\", (err, result) => {\n                if (err) {\n                    console.log(err);\n                    this.props.showMessage(\"Error\", 'No se pudo guardar información de bitacora.', true, false, {});\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    updateTable() {\n        let nombreTabla = $(\"#nombreTablaNuevo\").val();\n        let usuarioTabla = $(\"#usuarioTablaNuevo\").val();\n        let contrasenaTabla = $(\"#contrasenaTablaNuevo\").val();\n        let servidorTabla = $(\"#servidorTablaNuevo\").val();\n        let basedatosTabla = $(\"#basedatosTablaNuevo\").val();\n        let tablaTabla = $(\"#tablaTablaNuevo\").val();\n        let funcionTabla = $(\"#funcionTabla\").val();\n        let tipoConexion = $(\"#tipoConexion\").val();\n        if(nombreTabla.length > 0 && nombreTabla.length < 71) {\n            if(usuarioTabla.length > 0 && usuarioTabla.length < 51) {\n                if(contrasenaTabla.length > 0 && contrasenaTabla.length < 201) {\n                    if(servidorTabla.length > 0 && servidorTabla.length < 51) {\n                        if(basedatosTabla.length > 0 && basedatosTabla.length < 51) {\n                            if(tablaTabla.length > 0 && tablaTabla.length < 71) {\n                                if(tipoConexion.length > 0 && tipoConexion.length < 31) {\n                                    this.setState({\n                                        errorCreacionTabla: {campo: \"\", descripcion: \"\", mostrar: false}\n                                    });\n                                    const transaction = new sql.Transaction( this.props.pool );\n                                    transaction.begin(err => {\n                                        var rolledBack = false;\n                                        transaction.on('rollback', aborted => {\n                                            rolledBack = true;\n                                        });\n                                        const request = new sql.Request(transaction);\n                                        request.query(\"update Tablas set Nombre = '\"+nombreTabla+\"', Usuario = '\"+usuarioTabla+\"', Contrasena = '\"+contrasenaTabla+\"', Servidor = '\"+servidorTabla+\"', BaseDatos = '\"+basedatosTabla+\"', Tabla = '\"+tablaTabla+\"', tipoConexion = '\"+tipoConexion+\"' where ID = \"+this.props.idTablaSeleccionada, (err, result) => {\n                                            if (err) {\n                                                if (!rolledBack) {\n                                                    console.log(err);\n                                                    transaction.rollback(err => {\n                                                    });\n                                                }\n                                            } else {\n                                                transaction.commit(err => {\n                                                    this.props.showSuccesMessage(\"Exito\", \"Tabla modificada con éxito.\");\n                                                    var nuevosValores = 'nombre: '+nombreTabla+'\\n'+\n                                                                        'usuario: '+usuarioTabla+'\\n'+\n                                                                        'servidor: '+servidorTabla+'\\n'+\n                                                                        'base de datos: '+basedatosTabla+'\\n'+\n                                                                        'tabla: '+tablaTabla+'\\n'+\n                                                                        'tipo de conexión: '+tipoConexion;\n                                                    this.saveBitacora(new Date(), \"Usuario: \"+this.props.userName+\" modifico la tabla: \"+nombreTabla+\"\\nValores: \\n\"+nuevosValores, \"tabla\", this.props.idTablaSeleccionada);\n                                                });\n                                            }\n                                        });\n                                    }); // fin transaction\n                                } else {\n                                    let campo = \"Tipo de Conexión\";\n                                    let descripcion;\n                                    if(tipoConexion.length == 0)\n                                        descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                                    else\n                                        descripcion = \"El campo debe tener una longitud menor a 31.\";\n                                    this.setState({\n                                        errorCreacionTabla: {campo: campo, descripcion: descripcion, mostrar: true}\n                                    });\n                                }\n                            } else {\n                                let campo = \"Nombre de la Tabla\";\n                                let descripcion;\n                                if(tablaTabla.length == 0)\n                                    descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                                else\n                                    descripcion = \"El campo debe tener una longitud menor a 71.\";\n                                this.setState({\n                                    errorCreacionTabla: {campo: campo, descripcion: descripcion, mostrar: true}\n                                });\n                            }\n                        } else {\n                            let campo = \"Base de Datos de la Tabla\";\n                            let descripcion;\n                            if(basedatosTabla.length == 0)\n                                descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                            else\n                                descripcion = \"El campo debe tener una longitud menor a 51.\";\n                            this.setState({\n                                errorCreacionTabla: {campo: campo, descripcion: descripcion, mostrar: true}\n                            });\n                        }\n                    } else {\n                        let campo = \"Servidor de la Tabla\";\n                        let descripcion;\n                        if(servidorTabla.length == 0)\n                            descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                        else\n                            descripcion = \"El campo debe tener una longitud menor a 51.\";\n                        this.setState({\n                            errorCreacionTabla: {campo: campo, descripcion: descripcion, mostrar: true}\n                        });\n                    }\n                } else {\n                    let campo = \"Contraseña de la Tabla\";\n                    let descripcion;\n                    if(contrasenaTabla.length == 0)\n                        descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                    else\n                        descripcion = \"El campo debe tener una longitud menor a 201.\";\n                    this.setState({\n                        errorCreacionTabla: {campo: campo, descripcion: descripcion, mostrar: true}\n                    });\n                }\n            } else {\n                let campo = \"Usuario de la Tabla\";\n                let descripcion;\n                if(usuarioTabla.length == 0)\n                    descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                else\n                    descripcion = \"El campo debe tener una longitud menor a 51.\";\n                this.setState({\n                    errorCreacionTabla: {campo: campo, descripcion: descripcion, mostrar: true}\n                });\n            }\n        } else {\n            let campo = \"Nombre de la Conección\";\n            let descripcion;\n            if(nombreTabla.length == 0)\n                descripcion = \"El campo debe tener una longitud mayor a 0.\";\n            else\n                descripcion = \"El campo debe tener una longitud menor a 71.\";\n            this.setState({\n                errorCreacionTabla: {campo: campo, descripcion: descripcion, mostrar: true}\n            });\n        }\n    }\n\n\n    /*======_______====== ======_______======   MENSAJES ERROR DE CAMPOS    ======_______====== ======_______======*/\n    /*======_______======                                                                       ======_______======*/\n    /*======_______======                                                                       ======_______======*/\n    /*======_______====== ======_______====== ====_____====  ====_____====  ======_______====== ======_______======*/\n\n    dismissTableNewError() {\n        this.setState({\n            errorCreacionTabla: {campo: \"\", descripcion: \"\", mostrar: false}\n        });\n    }\n\n    modifyTableConfirmation() {\n        this.props.showMessage(\"Confirmación\", \"Esta seguro que desea modificar la tabla?\", false, true, this.updateTable );\n    }\n\n    render() {\n        return (\n            <div>\n                <div className={\"row\"}>\n                    <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                        <div className={\"page-header\"}>\n                            <h2 className={\"pageheader-title\"}>Configuraci&oacute;n de Conexiones a las Tablas</h2>\n                            <div className={\"page-breadcrumb\"}>\n                                <nav aria-label=\"breadcrumb\">\n                                    <ol className={\"breadcrumb\"}>\n                                        <li className={\"breadcrumb-item font-16\"} aria-current=\"page\" onClick={this.props.configuracionHome}><a href=\"#\" className={\"breadcrumb-link\"}>Configuraci&oacute;n</a></li>\n                                        <li className={\"breadcrumb-item font-16\"} aria-current=\"page\" onClick={this.props.goOptions}><a href=\"#\" className={\"breadcrumb-link\"}>Tipo de Configuraci&oacute;n</a></li>\n                                        <li className={\"breadcrumb-item font-16\"} aria-current=\"page\" onClick={this.props.retornoSeleccionTabla}><a href=\"#\" className={\"breadcrumb-link\"}>Tablas</a></li>\n                                        <li className={\"breadcrumb-item active font-16\"} aria-current=\"page\">Editar Tabla</li>\n                                    </ol>\n                                </nav>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={\"row\"}>\n                    <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                        <div className={\"card influencer-profile-data\"}>\n                            <div className={\"card-body\"}>\n                                <h3>Crear Nueva Tabla</h3>\n                                <div className={\"row border-top\"}>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Nombre de la Conecci&oacute;n</label>\n                                        <input id=\"nombreTablaNuevo\" defaultValue={this.props.nombreTablaSeleccionada} type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Usuario de la Tabla</label>\n                                        <input id=\"usuarioTablaNuevo\" defaultValue={this.props.usuarioTablaSeleccionada} type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                </div>\n                                <div className={\"row\"}>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Contrase&ntilde;a de la Tabla</label>\n                                        <input id=\"contrasenaTablaNuevo\" defaultValue={this.props.contrasenaTablaSeleccionada} type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Servidor de la Tabla</label>\n                                        <input id=\"servidorTablaNuevo\" defaultValue={this.props.servidorTablaSeleccionada} type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                </div>\n                                <div className={\"row\"}>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Base de Datos de la Tabla</label>\n                                        <input id=\"basedatosTablaNuevo\" defaultValue={this.props.baseDatosTablaSeleccionada} type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Nombre de la Tabla</label>\n                                        <input id=\"tablaTablaNuevo\" defaultValue={this.props.tablaTablaSeleccionada} type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                </div>\n                                <div className={\"row\"} style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n                                    <select id=\"tipoConexion\" defaultValue={this.props.tipoConexion} className=\"form-control\">\n                                        <option value=\"sql\">Transact-SQL</option>\n                                    </select>\n                                </div>\n                                { this.state.errorCreacionTabla.mostrar ? (\n                                    <ErrorMessage campo={this.state.errorCreacionTabla.campo} descripcion={this.state.errorCreacionTabla.descripcion} dismissTableError={this.dismissTableNewError}> </ErrorMessage>\n                                ) : (\n                                    <span></span>\n                                )}\n                                <br/>\n                                <div className={\"row\"}>\n                                    <button onClick={this.updateTable} className={\"btn btn-success btn-block col-xl-10 col-10 font-bold font-20\"} style={{margin: \"0 auto\", display: \"block\"}}>Guardas Cambios</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <br/>\n            </div>\n        );\n    }\n}\n"],"file":"EditarTabla.js"}