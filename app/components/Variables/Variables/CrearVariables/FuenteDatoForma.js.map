{"version":3,"sources":["components/Variables/Variables/CrearVariables/FuenteDatoForma.js"],"names":["variables","excel","formas","periodicidad","nombre","FuenteDatoForma","props","state","valorPeriodicidad","crearVariable","bind","getVariables","getExcel","getFormas","verificarNoExisteNombreVar","actualizarPeriodicidad","isValidDate","nombreVariable","$","val","tipo","guardarVariable","is","fecha","localeCompare","Date","datepicker","analista","length","transaction","sql","Transaction","pool","begin","err","rolledBack","on","aborted","request","Request","query","fechaInicioCalculo","result","console","log","rollback","commit","alert","recordset","noExiste","i","toLowerCase","setState","cargarDatePicker","Object","prototype","toString","call","isNaN","getTime","width","display","alignItems","justifyContent","periodicidadVariable","map","analistaVariable","actualizarNombreEncargado","margin","React","Component"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAIA,SAAS,GAAG,EAAhB;AACA,IAAIC,KAAK,GAAG,EAAZ;AACA,IAAIC,MAAM,GAAG,EAAb;AAEA,IAAMC,YAAY,GAAG,CAAE;AAACC,EAAAA,MAAM,EAAE;AAAT,CAAF,EAAsB;AAACA,EAAAA,MAAM,EAAE;AAAT,CAAtB,EAA2C;AAACA,EAAAA,MAAM,EAAE;AAAT,CAA3C,EAAgE;AAACA,EAAAA,MAAM,EAAE;AAAT,CAAhE,EAAwF;AAACA,EAAAA,MAAM,EAAE;AAAT,CAAxF,EAA8G;AAACA,EAAAA,MAAM,EAAE;AAAT,CAA9G,CAArB;;IAEqBC,e;;;;;AACjB,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,yFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,iBAAiB,EAAE;AADV,KAAb;AAGA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,+BAArB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,+BAApB;AACA,UAAKE,QAAL,GAAgB,MAAKA,QAAL,CAAcF,IAAd,+BAAhB;AACA,UAAKG,SAAL,GAAiB,MAAKA,SAAL,CAAeH,IAAf,+BAAjB;AACA,UAAKI,0BAAL,GAAkC,MAAKA,0BAAL,CAAgCJ,IAAhC,+BAAlC;AACA,UAAKK,sBAAL,GAA8B,MAAKA,sBAAL,CAA4BL,IAA5B,+BAA9B;AACA,UAAKM,WAAL,GAAmB,MAAKA,WAAL,CAAiBN,IAAjB,+BAAnB;AAXe;AAYlB;;;;wCAEmB;AAChB,WAAKC,YAAL;AACA,WAAKC,QAAL;AACA,WAAKC,SAAL;AACH;;;oCAEgB;AAAA;;AACb,UAAII,cAAc,GAAGC,CAAC,CAAC,iBAAD,CAAD,CAAqBC,GAArB,EAArB;AACA,UAAIC,IAAI,GAAGF,CAAC,CAAC,OAAD,CAAD,CAAWC,GAAX,EAAX;AACA,UAAIE,eAAJ;AACA,UAAIH,CAAC,CAAC,kBAAD,CAAD,CAAsBI,EAAtB,CAAyB,UAAzB,CAAJ,EACID,eAAe,GAAG,IAAlB,CADJ,KAGIA,eAAe,GAAG,KAAlB;AACJ,UAAIlB,YAAY,GAAGe,CAAC,CAAC,eAAD,CAAD,CAAmBC,GAAnB,EAAnB;AACA,UAAII,KAAJ;AACA,UAAGpB,YAAY,CAACqB,aAAb,CAA2B,IAA3B,KAAoC,CAAvC,EACID,KAAK,GAAG,IAAIE,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAAR,CADJ,KAGIF,KAAK,GAAGL,CAAC,CAAC,QAAD,CAAD,CAAYQ,UAAZ,CAAuB,SAAvB,CAAR;AACJ,UAAIC,QAAQ,GAAGT,CAAC,CAAC,WAAD,CAAD,CAAeC,GAAf,EAAf;;AACA,UAAGF,cAAc,CAACW,MAAf,GAAwB,CAAxB,IAA6BX,cAAc,CAACW,MAAf,GAAwB,GAAxD,EAA6D;AACzD,YAAG,KAAKd,0BAAL,CAAgCG,cAAhC,CAAH,EAAoD;AAChD,cAAGG,IAAI,CAACQ,MAAL,GAAc,CAAd,IAAmBR,IAAI,CAACQ,MAAL,GAAc,EAApC,EAAwC;AACpC,gBAAGzB,YAAY,CAACyB,MAAb,GAAsB,CAAtB,IAA2BzB,YAAY,CAACyB,MAAb,GAAsB,EAApD,EAAwD;AACpD,kBAAG,KAAKZ,WAAL,CAAiBO,KAAjB,CAAH,EAA4B;AACxB,oBAAGI,QAAQ,CAACC,MAAT,GAAkB,CAAlB,IAAuBD,QAAQ,CAACC,MAAT,GAAkB,GAA5C,EAAiD;AAC7C,sBAAMC,WAAW,GAAG,IAAIC,kBAAIC,WAAR,CAAqB,KAAKzB,KAAL,CAAW0B,IAAhC,CAApB;AACAH,kBAAAA,WAAW,CAACI,KAAZ,CAAkB,UAAAC,GAAG,EAAI;AACrB,wBAAIC,UAAU,GAAG,KAAjB;AACAN,oBAAAA,WAAW,CAACO,EAAZ,CAAe,UAAf,EAA2B,UAAAC,OAAO,EAAI;AAClCF,sBAAAA,UAAU,GAAG,IAAb;AACH,qBAFD;AAGA,wBAAMG,OAAO,GAAG,IAAIR,kBAAIS,OAAR,CAAgBV,WAAhB,CAAhB;AACAS,oBAAAA,OAAO,CAACE,KAAR,CAAc,8GAA4GvB,cAA5G,GAA2H,MAA3H,GAAkIG,IAAlI,GAAuI,MAAvI,GAA8IjB,YAA9I,GAA2J,MAA3J,GAAkKsC,kBAAlK,GAAqL,MAArL,GAA4Ld,QAA5L,GAAqM,MAArM,GAA4MN,eAA5M,GAA4N,IAA1O,EAAgP,UAACa,GAAD,EAAMQ,MAAN,EAAiB;AAC7P,0BAAIR,GAAJ,EAAS;AACLS,wBAAAA,OAAO,CAACC,GAAR,CAAYV,GAAZ;;AACA,4BAAI,CAACC,UAAL,EAAiB;AACbN,0BAAAA,WAAW,CAACgB,QAAZ,CAAqB,UAAAX,GAAG,EAAI,CAC3B,CADD;AAEH;AACJ,uBAND,MAMO;AACHL,wBAAAA,WAAW,CAACiB,MAAZ,CAAmB,UAAAZ,GAAG,EAAI;AACtBa,0BAAAA,KAAK,CAAC,iBAAD,CAAL;AACA7B,0BAAAA,CAAC,CAAC,iBAAD,CAAD,CAAqBC,GAArB,CAAyB,EAAzB;AACAD,0BAAAA,CAAC,CAAC,OAAD,CAAD,CAAWC,GAAX,CAAe,QAAf;AACAD,0BAAAA,CAAC,CAAC,eAAD,CAAD,CAAmBC,GAAnB,CAAuB,EAAvB;AACAD,0BAAAA,CAAC,CAAC,WAAD,CAAD,CAAeC,GAAf,CAAmB,EAAnB;;AACA,0BAAA,MAAI,CAACN,SAAL;AACH,yBAPD;AAQH;AACJ,qBAjBD;AAkBH,mBAxBD,EAF6C,CA0BzC;AACP,iBA3BD,MA2BO;AACHkC,kBAAAA,KAAK,CAAC,sEAAD,CAAL;AACH;AACJ,eA/BD,MA+BO;AACHA,gBAAAA,KAAK,CAAC,gCAAD,CAAL;AACH;AACJ,aAnCD,MAmCO;AACHA,cAAAA,KAAK,CAAC,mFAAD,CAAL;AACH;AACJ,WAvCD,MAuCO;AACHA,YAAAA,KAAK,CAAC,iFAAD,CAAL;AACH;AACJ,SA3CD,MA2CO;AACHA,UAAAA,KAAK,CAAC,0CAAD,CAAL;AACH;AACJ,OA/CD,MA+CO;AACHA,QAAAA,KAAK,CAAC,oFAAD,CAAL;AACH;AACJ;;;mCAEc;AACX,UAAMlB,WAAW,GAAG,IAAIC,kBAAIC,WAAR,CAAqB,KAAKzB,KAAL,CAAW0B,IAAhC,CAApB;AACAH,MAAAA,WAAW,CAACI,KAAZ,CAAkB,UAAAC,GAAG,EAAI;AACrB,YAAIC,UAAU,GAAG,KAAjB;AACAN,QAAAA,WAAW,CAACO,EAAZ,CAAe,UAAf,EAA2B,UAAAC,OAAO,EAAI;AAClCF,UAAAA,UAAU,GAAG,IAAb;AACH,SAFD;AAGA,YAAMG,OAAO,GAAG,IAAIR,kBAAIS,OAAR,CAAgBV,WAAhB,CAAhB;AACAS,QAAAA,OAAO,CAACE,KAAR,CAAc,yBAAd,EAAyC,UAACN,GAAD,EAAMQ,MAAN,EAAiB;AACtD,cAAIR,GAAJ,EAAS;AACLS,YAAAA,OAAO,CAACC,GAAR,CAAYV,GAAZ;;AACA,gBAAI,CAACC,UAAL,EAAiB;AACbN,cAAAA,WAAW,CAACgB,QAAZ,CAAqB,UAAAX,GAAG,EAAI,CAC3B,CADD;AAEH;AACJ,WAND,MAMO;AACHL,YAAAA,WAAW,CAACiB,MAAZ,CAAmB,UAAAZ,GAAG,EAAI;AACtBlC,cAAAA,SAAS,GAAG0C,MAAM,CAACM,SAAnB;AACH,aAFD;AAGH;AACJ,SAZD;AAaH,OAnBD,EAFW,CAqBP;AACP;;;+BAEU;AACP,UAAMnB,WAAW,GAAG,IAAIC,kBAAIC,WAAR,CAAqB,KAAKzB,KAAL,CAAW0B,IAAhC,CAApB;AACAH,MAAAA,WAAW,CAACI,KAAZ,CAAkB,UAAAC,GAAG,EAAI;AACrB,YAAIC,UAAU,GAAG,KAAjB;AACAN,QAAAA,WAAW,CAACO,EAAZ,CAAe,UAAf,EAA2B,UAAAC,OAAO,EAAI;AAClCF,UAAAA,UAAU,GAAG,IAAb;AACH,SAFD;AAGA,YAAMG,OAAO,GAAG,IAAIR,kBAAIS,OAAR,CAAgBV,WAAhB,CAAhB;AACAS,QAAAA,OAAO,CAACE,KAAR,CAAc,8BAAd,EAA8C,UAACN,GAAD,EAAMQ,MAAN,EAAiB;AAC3D,cAAIR,GAAJ,EAAS;AACLS,YAAAA,OAAO,CAACC,GAAR,CAAYV,GAAZ;;AACA,gBAAI,CAACC,UAAL,EAAiB;AACbN,cAAAA,WAAW,CAACgB,QAAZ,CAAqB,UAAAX,GAAG,EAAI,CAC3B,CADD;AAEH;AACJ,WAND,MAMO;AACHL,YAAAA,WAAW,CAACiB,MAAZ,CAAmB,UAAAZ,GAAG,EAAI;AACtBjC,cAAAA,KAAK,GAAGyC,MAAM,CAACM,SAAf;AACH,aAFD;AAGH;AACJ,SAZD;AAaH,OAnBD,EAFO,CAqBH;AACP;;;gCAEW;AACR,UAAMnB,WAAW,GAAG,IAAIC,kBAAIC,WAAR,CAAqB,KAAKzB,KAAL,CAAW0B,IAAhC,CAApB;AACAH,MAAAA,WAAW,CAACI,KAAZ,CAAkB,UAAAC,GAAG,EAAI;AACrB,YAAIC,UAAU,GAAG,KAAjB;AACAN,QAAAA,WAAW,CAACO,EAAZ,CAAe,UAAf,EAA2B,UAAAC,OAAO,EAAI;AAClCF,UAAAA,UAAU,GAAG,IAAb;AACH,SAFD;AAGA,YAAMG,OAAO,GAAG,IAAIR,kBAAIS,OAAR,CAAgBV,WAAhB,CAAhB;AACAS,QAAAA,OAAO,CAACE,KAAR,CAAc,+BAAd,EAA+C,UAACN,GAAD,EAAMQ,MAAN,EAAiB;AAC5D,cAAIR,GAAJ,EAAS;AACLS,YAAAA,OAAO,CAACC,GAAR,CAAYV,GAAZ;;AACA,gBAAI,CAACC,UAAL,EAAiB;AACbN,cAAAA,WAAW,CAACgB,QAAZ,CAAqB,UAAAX,GAAG,EAAI,CAC3B,CADD;AAEH;AACJ,WAND,MAMO;AACHL,YAAAA,WAAW,CAACiB,MAAZ,CAAmB,UAAAZ,GAAG,EAAI;AACtBhC,cAAAA,MAAM,GAAGwC,MAAM,CAACM,SAAhB;AACH,aAFD;AAGH;AACJ,SAZD;AAaH,OAnBD,EAFQ,CAqBJ;AACP;;;+CAE2B5C,M,EAAQ;AAChC,UAAI6C,QAAQ,GAAG,IAAf;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlD,SAAS,CAAC4B,MAA9B,EAAsCsB,CAAC,EAAvC,EAA2C;AACvC,YAAI,KAAK3C,KAAL,CAAWP,SAAX,CAAqBkD,CAArB,EAAwB9C,MAAxB,CAA+B+C,WAA/B,GAA6C3B,aAA7C,CAA2DpB,MAAM,CAAC+C,WAAP,EAA3D,KAAoF,CAAxF,EAA2F;AACvFF,UAAAA,QAAQ,GAAG,KAAX;AACA;AACH;AACJ;;AAAA;;AACD,UAAGA,QAAH,EAAa;AACT,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjD,KAAK,CAAC2B,MAA1B,EAAkCsB,CAAC,EAAnC,EAAuC;AACnC,cAAI,KAAK3C,KAAL,CAAWN,KAAX,CAAiBiD,CAAjB,EAAoB9C,MAApB,CAA2B+C,WAA3B,GAAyC3B,aAAzC,CAAuDpB,MAAM,CAAC+C,WAAP,EAAvD,KAAgF,CAApF,EAAuF;AACnFF,YAAAA,QAAQ,GAAG,KAAX;AACA;AACH;AACJ;;AAAA;AACJ;;AACD,UAAGA,QAAH,EAAa;AACT,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhD,MAAM,CAAC0B,MAA3B,EAAmCsB,CAAC,EAApC,EAAwC;AACpC,cAAI,KAAK3C,KAAL,CAAWL,MAAX,CAAkBgD,CAAlB,EAAqB9C,MAArB,CAA4B+C,WAA5B,GAA0C3B,aAA1C,CAAwDpB,MAAM,CAAC+C,WAAP,EAAxD,KAAiF,CAArF,EAAwF;AACpFF,YAAAA,QAAQ,GAAG,KAAX;AACA;AACH;AACJ;;AAAA;AACJ;;AACD,aAAOA,QAAP;AACH;;;6CAEyB;AACtB,UAAI9C,YAAY,GAAGe,CAAC,CAAC,eAAD,CAAD,CAAmBC,GAAnB,EAAnB;AACA,WAAKiC,QAAL,CAAc;AACV5C,QAAAA,iBAAiB,EAAEL;AADT,OAAd,EAEG,KAAKkD,gBAFR;AAGH;;;gCAEY9B,K,EAAO;AAChB,UAAI+B,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BlC,KAA/B,MAA0C,eAA9C,EAA+D;AAC3D,YAAImC,KAAK,CAACnC,KAAK,CAACoC,OAAN,EAAD,CAAT,EAA4B;AACxBZ,UAAAA,KAAK,CAAC,2BAAD,CAAL;AACA,iBAAO,KAAP;AACH,SAHD,MAGO;AACH,iBAAO,IAAP;AACH;AACJ,OAPD,MAOO;AACHA,QAAAA,KAAK,CAAC,2BAAD,CAAL;AACA,eAAO,KAAP;AACH;AACJ;;;6BAEQ;AACL,aACI,6CACI,2CADJ,EAEI;AAAK,QAAA,SAAS,EAAE,KAAhB;AAAuB,QAAA,KAAK,EAAE;AAACa,UAAAA,KAAK,EAAE;AAAR;AAA9B,SACI;AAAK,QAAA,SAAS,EAAE;AAAhB,SACI;AAAO,QAAA,OAAO,EAAC,gBAAf;AAAgC,QAAA,SAAS,EAAC;AAA1C,+BADJ,CADJ,EAII;AAAK,QAAA,SAAS,EAAE,sDAAhB;AAAwE,QAAA,KAAK,EAAE;AAACC,UAAAA,OAAO,EAAE,MAAV;AAAkBC,UAAAA,UAAU,EAAE,QAA9B;AAAwCC,UAAAA,cAAc,EAAE;AAAxD;AAA/E,SACI;AAAO,QAAA,EAAE,EAAC,gBAAV;AAA2B,QAAA,IAAI,EAAC,MAAhC;AAAuC,QAAA,SAAS,EAAC;AAAjD,QADJ,CAJJ,CAFJ,EAUI;AAAK,QAAA,SAAS,EAAE,KAAhB;AAAuB,QAAA,KAAK,EAAE;AAACH,UAAAA,KAAK,EAAE;AAAR;AAA9B,SACI;AAAK,QAAA,SAAS,EAAE;AAAhB,SACI;AAAO,QAAA,OAAO,EAAC,MAAf;AAAsB,QAAA,SAAS,EAAC;AAAhC,6BADJ,CADJ,EAII;AAAK,QAAA,SAAS,EAAE,sDAAhB;AAAwE,QAAA,KAAK,EAAE;AAACC,UAAAA,OAAO,EAAE,MAAV;AAAkBC,UAAAA,UAAU,EAAE,QAA9B;AAAwCC,UAAAA,cAAc,EAAE;AAAxD;AAA/E,SACI;AAAQ,QAAA,EAAE,EAAC,MAAX;AAAkB,QAAA,SAAS,EAAC;AAA5B,SACI;AAAQ,QAAA,KAAK,EAAC;AAAd,qBADJ,EAEI;AAAQ,QAAA,KAAK,EAAC;AAAd,kBAFJ,EAGI;AAAQ,QAAA,KAAK,EAAC;AAAd,iBAHJ,EAII;AAAQ,QAAA,KAAK,EAAC;AAAd,oBAJJ,CADJ,CAJJ,CAVJ,EAuBI;AAAK,QAAA,SAAS,EAAE,KAAhB;AAAuB,QAAA,KAAK,EAAE;AAACH,UAAAA,KAAK,EAAE;AAAR;AAA9B,SACI;AAAK,QAAA,SAAS,EAAE;AAAhB,SACI;AAAO,QAAA,OAAO,EAAC,cAAf;AAA8B,QAAA,SAAS,EAAC;AAAxC,wBADJ,CADJ,EAII;AAAK,QAAA,SAAS,EAAE;AAAhB,SACI;AAAQ,QAAA,EAAE,EAAC,cAAX;AAA0B,QAAA,YAAY,EAAE,KAAKtD,KAAL,CAAW0D,oBAAnD;AAAyE,QAAA,QAAQ,EAAE,KAAKjD,sBAAxF;AAAgH,QAAA,SAAS,EAAC;AAA1H,SACI;AAAQ,QAAA,KAAK,EAAC;AAAd,mBADJ,EAEKZ,YAAY,CAAC8D,GAAb,CAAiB,UAAC9D,YAAD,EAAe+C,CAAf;AAAA,eACd;AAAQ,UAAA,KAAK,EAAE/C,YAAY,CAACC,MAA5B;AAAoC,UAAA,GAAG,EAAED,YAAY,CAACC;AAAtD,WAA+DD,YAAY,CAACC,MAA5E,CADc;AAAA,OAAjB,CAFL,CADJ,CAJJ,CAvBJ,EAqCQ,KAAKG,KAAL,CAAWC,iBAAX,CAA6BgB,aAA7B,CAA2C,IAA3C,KAAoD,CAApD,GAEI;AAAK,QAAA,SAAS,EAAE,KAAhB;AAAuB,QAAA,KAAK,EAAE;AAACoC,UAAAA,KAAK,EAAE;AAAR;AAA9B,SACI;AAAK,QAAA,SAAS,EAAE;AAAhB,SACI;AAAO,QAAA,OAAO,EAAC,OAAf;AAAuB,QAAA,SAAS,EAAC;AAAjC,0CADJ,CADJ,EAII;AAAK,QAAA,SAAS,EAAE;AAAhB,SACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,cAA7B;AAA4C,QAAA,EAAE,EAAC;AAA/C,QADJ,CAJJ,CAFJ,GAUE,IA/CV,EAiDI;AAAK,QAAA,SAAS,EAAE,KAAhB;AAAuB,QAAA,KAAK,EAAE;AAACA,UAAAA,KAAK,EAAE;AAAR;AAA9B,SACI;AAAK,QAAA,SAAS,EAAE;AAAhB,SACI;AAAO,QAAA,OAAO,EAAC,UAAf;AAA0B,QAAA,SAAS,EAAC;AAApC,4BADJ,CADJ,EAII;AAAK,QAAA,SAAS,EAAE;AAAhB,SACI;AAAO,QAAA,EAAE,EAAC,UAAV;AAAqB,QAAA,YAAY,EAAE,KAAKtD,KAAL,CAAW4D,gBAA9C;AAAgE,QAAA,OAAO,EAAE,KAAK5D,KAAL,CAAW6D,yBAApF;AAA+G,QAAA,IAAI,EAAC,MAApH;AAA2H,QAAA,SAAS,EAAC;AAArI,QADJ,CAJJ,CAjDJ,EAyDI;AAAK,QAAA,SAAS,EAAE,KAAhB;AAAuB,QAAA,KAAK,EAAE;AAACP,UAAAA,KAAK,EAAE;AAAR;AAA9B,SACI;AAAK,QAAA,SAAS,EAAE;AAAhB,SACI;AAAO,QAAA,OAAO,EAAC,iBAAf;AAAiC,QAAA,SAAS,EAAC;AAA3C,sDADJ,CADJ,EAII;AAAK,QAAA,SAAS,EAAE;AAAhB,SACI,2CADJ,EAEI;AAAK,QAAA,SAAS,EAAE,mCAAhB;AAAqD,QAAA,KAAK,EAAE;AAACQ,UAAAA,MAAM,EAAC,QAAR;AAAkBP,UAAAA,OAAO,EAAC;AAA1B;AAA5D,SACI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,cAAc,MAArC;AAAsC,QAAA,IAAI,EAAE,iBAA5C;AAA+D,QAAA,EAAE,EAAE;AAAnE,QADJ,EAC2F,8CACvF;AAAO,QAAA,OAAO,EAAE;AAAhB,QADuF,CAD3F,CAFJ,CAJJ,CAzDJ,EAqEI,2CArEJ,EAsEI;AAAK,QAAA,SAAS,EAAE,aAAhB;AAA+B,QAAA,KAAK,EAAE;AAACD,UAAAA,KAAK,EAAE;AAAR;AAAtC,SACI;AAAG,QAAA,IAAI,EAAC,GAAR;AAAY,QAAA,SAAS,EAAC,sBAAtB;AAA6C,QAAA,OAAO,EAAE,KAAKnD;AAA3D,0BADJ,CAtEJ,EAyEI,2CAzEJ,CADJ;AA6EH;;;;EA9RwC4D,kBAAMC,S","sourcesContent":["import React from 'react';\nimport sql from 'mssql';\n\nvar variables = [];\nvar excel = [];\nvar formas = [];\n\nconst periodicidad = [ {nombre: \"diario\"}, {nombre: \"semanal\"}, {nombre: \"mensual\"}, {nombre: \"trimestral\"}, {nombre: \"bi-anual\"}, {nombre: \"anual\"} ];\n\nexport default class FuenteDatoForma extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            valorPeriodicidad: '-1'\n        }\n        this.crearVariable = this.crearVariable.bind(this);\n        this.getVariables = this.getVariables.bind(this);\n        this.getExcel = this.getExcel.bind(this);\n        this.getFormas = this.getFormas.bind(this);\n        this.verificarNoExisteNombreVar = this.verificarNoExisteNombreVar.bind(this);\n        this.actualizarPeriodicidad = this.actualizarPeriodicidad.bind(this);\n        this.isValidDate = this.isValidDate.bind(this);\n    }\n\n    componentDidMount() {\n        this.getVariables();\n        this.getExcel();\n        this.getFormas();\n    }\n\n    crearVariable () {\n        var nombreVariable = $(\"#nombreVariable\").val();\n        var tipo = $(\"#tipo\").val();\n        var guardarVariable;\n        if ($(\"#guardarVariable\").is(':checked'))\n            guardarVariable = true;\n        else\n            guardarVariable = false;\n        var periodicidad = $(\"#periodicidad\").val();\n        var fecha;\n        if(periodicidad.localeCompare(\"-1\") == 0)\n            fecha = new Date(1964, 4, 28);\n        else\n            fecha = $(\"#fecha\").datepicker('getDate');\n        var analista = $(\"#analista\").val();\n        if(nombreVariable.length > 0 && nombreVariable.length < 101) {\n            if(this.verificarNoExisteNombreVar(nombreVariable)) {\n                if(tipo.length > 0 && tipo.length < 31) {\n                    if(periodicidad.length > 0 && periodicidad.length < 51) {\n                        if(this.isValidDate(fecha)) {\n                            if(analista.length > 0 && analista.length < 101) {\n                                const transaction = new sql.Transaction( this.props.pool );\n                                transaction.begin(err => {\n                                    var rolledBack = false;\n                                    transaction.on('rollback', aborted => {\n                                        rolledBack = true;\n                                    });\n                                    const request = new sql.Request(transaction);\n                                    request.query(\"insert into FormasVariables (nombre, tipo, periodicidad, fechaInicioCalculo, analista, guardar) values ('\"+nombreVariable+\"', '\"+tipo+\"', '\"+periodicidad+\"', '\"+fechaInicioCalculo+\"', '\"+analista+\"', '\"+guardarVariable+\"')\", (err, result) => {\n                                        if (err) {\n                                            console.log(err);\n                                            if (!rolledBack) {\n                                                transaction.rollback(err => {\n                                                });\n                                            }\n                                        } else {\n                                            transaction.commit(err => {\n                                                alert(\"Variable Creada\");\n                                                $(\"#nombreVariable\").val(\"\");\n                                                $(\"#tipo\").val(\"numero\");\n                                                $(\"#periodicidad\").val(\"\");\n                                                $(\"#analista\").val(\"\");\n                                                this.getFormas();\n                                            });\n                                        }\n                                    });\n                                }); // fin transaction\n                            } else {\n                                alert('Ingrese un valor para el analista que debe ser menor a 51 caracteres');\n                            }\n                        } else {\n                            alert('Ingrese un valor para la fecha');\n                        }\n                    } else {\n                        alert('Ingrese un valor para el valor de periodicidad que debe ser menor a 51 caracteres');\n                    }\n                } else {\n                    alert('Ingrese un valor para el tipo de la variable que debe ser menor a 31 caracteres');\n                }\n            } else {\n                alert('El nombre de la variable debe ser único.');\n            }\n        } else {\n            alert('Ingrese un valor para el nombre de la variable que debe ser menor a 101 caracteres');\n        }\n    }\n\n    getVariables() {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Variables\", (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        variables = result.recordset;\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    getExcel() {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from ExcelVariables\", (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        excel = result.recordset;\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    getFormas() {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from FormasVariables\", (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        formas = result.recordset;\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    verificarNoExisteNombreVar (nombre) {\n        var noExiste = true;\n        for (var i = 0; i < variables.length; i++) {\n            if (this.state.variables[i].nombre.toLowerCase().localeCompare(nombre.toLowerCase()) == 0) {\n                noExiste = false;\n                break;\n            }\n        };\n        if(noExiste) {\n            for (var i = 0; i < excel.length; i++) {\n                if (this.state.excel[i].nombre.toLowerCase().localeCompare(nombre.toLowerCase()) == 0) {\n                    noExiste = false;\n                    break;\n                }\n            };\n        }\n        if(noExiste) {\n            for (var i = 0; i < formas.length; i++) {\n                if (this.state.formas[i].nombre.toLowerCase().localeCompare(nombre.toLowerCase()) == 0) {\n                    noExiste = false;\n                    break;\n                }\n            };\n        }\n        return noExiste;\n    }\n\n    actualizarPeriodicidad () {\n        var periodicidad = $(\"#periodicidad\").val();\n        this.setState({\n            valorPeriodicidad: periodicidad\n        }, this.cargarDatePicker );\n    }\n\n    isValidDate (fecha) {\n        if (Object.prototype.toString.call(fecha) === \"[object Date]\") {\n            if (isNaN(fecha.getTime())) {\n                alert(\"Ingrese una fecha valida.\");\n                return false;\n            } else {\n                return true;\n            }\n        } else {\n            alert(\"Ingrese una fecha valida.\");\n            return false;\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <br/>\n                <div className={\"row\"} style={{width: \"100%\"}}>\n                    <div className={\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3 form-group\"}>\n                        <label htmlFor=\"nombreVariable\" className=\"col-form-label\">Nombre de Variable:</label>\n                    </div>\n                    <div className={\"col-xl-9 col-lg-9 col-md-9 col-sm-9 col-9 form-group\"} style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n                        <input id=\"nombreVariable\" type=\"text\" className=\"form-control form-control-sm\"/>\n                    </div>\n                </div>\n                <div className={\"row\"} style={{width: \"100%\"}}>\n                    <div className={\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3 form-group\"}>\n                        <label htmlFor=\"tipo\" className=\"col-form-label\">Tipo de Variable:</label>\n                    </div>\n                    <div className={\"col-xl-9 col-lg-9 col-md-9 col-sm-9 col-9 form-group\"} style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n                        <select id=\"tipo\" className=\"form-control\">\n                            <option value=\"numero\">Número</option>\n                            <option value=\"varchar\">Cadena</option>\n                            <option value=\"date\">Fecha</option>\n                            <option value=\"bit\">Booleano</option>\n                        </select>\n                    </div>\n                </div>\n                <div className={\"row\"} style={{width: \"100%\"}}>\n                    <div className={\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3 form-group\"}>\n                        <label htmlFor=\"periodicidad\" className=\"col-form-label\">Periodicidad</label>\n                    </div>\n                    <div className={\"col-xl-9 col-lg-9 col-md-9 col-sm-9 col-9 form-group\"}>\n                        <select id=\"periodicidad\" defaultValue={this.props.periodicidadVariable} onChange={this.actualizarPeriodicidad} className=\"form-control\">\n                            <option value=\"-1\">Ninguno</option>\n                            {periodicidad.map((periodicidad, i) =>\n                                <option value={periodicidad.nombre} key={periodicidad.nombre}>{periodicidad.nombre}</option>\n                            )}\n                        </select>\n                    </div>\n                </div>\n                {\n                    this.state.valorPeriodicidad.localeCompare(\"-1\") != 0\n                    ?\n                        <div className={\"row\"} style={{width: \"100%\"}}>\n                            <div className={\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3 form-group\"}>\n                                <label htmlFor=\"fecha\" className=\"col-form-label\">Fecha de Inicio de Cálculo:</label>\n                            </div>\n                            <div className={\"col-xl-9 col-lg-9 col-md-9 col-sm-9 col-9 form-group\"}>\n                                <input type=\"text\" className=\"form-control\" id=\"fecha\"/>\n                            </div>\n                        </div>\n                    : null\n                }\n                <div className={\"row\"} style={{width: \"100%\"}}>\n                    <div className={\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3 form-group\"}>\n                        <label htmlFor=\"analista\" className=\"col-form-label\">Nombre Encargado</label>\n                    </div>\n                    <div className={\"col-xl-9 col-lg-9 col-md-9 col-sm-9 col-9 form-group\"}>\n                        <input id=\"analista\" defaultValue={this.props.analistaVariable} onKeyUp={this.props.actualizarNombreEncargado} type=\"text\" className=\"form-control form-control-sm\"/>\n                    </div>\n                </div>\n                <div className={\"row\"} style={{width: \"100%\"}}>\n                    <div className={\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3 form-group\"}>\n                        <label htmlFor=\"guardarVariable\" className=\"col-form-label\">Guardar Valores Obtenidos en Base de Datos</label>\n                    </div>\n                    <div className={\"col-xl-9 col-lg-9 col-md-9 col-sm-9 col-9 form-group\"}>\n                        <br/>\n                        <div className={\"switch-button switch-button-yesno\"} style={{margin:\"0 auto\", display:\"block\"}}>\n                            <input type=\"checkbox\" defaultChecked name={\"guardarVariable\"} id={\"guardarVariable\"}/><span>\n                            <label htmlFor={\"guardarVariable\"}></label></span>\n                        </div>\n                    </div>\n                </div>\n                <br/>\n                <div className={\"text-center\"} style={{width: \"100%\"}}>\n                    <a href=\"#\" className=\"btn btn-brand active\" onClick={this.crearVariable}>Crear Variable</a>\n                </div>\n                <br/>\n            </div>\n        );\n    }\n}\n"],"file":"FuenteDatoForma.js"}