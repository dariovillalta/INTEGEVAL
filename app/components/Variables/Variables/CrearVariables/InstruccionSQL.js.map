{"version":3,"sources":["components/Variables/Variables/CrearVariables/InstruccionSQL.js"],"names":["tipoCampos","nombre","InstruccionSQL","props","state","mostrarModal","tituloModal","indexVarSeleccionado","openModal","bind","mostrarCampos","actualizarCampo","closeModal","agregarInstruccionSQL","index","camposInstruccionSQL","setState","tipo","setTimeout","$","val","length","showMessage","camposError","instruccionSQL","transaction","sql","Transaction","pool","begin","err","rolledBack","on","aborted","request","Request","query","result","console","log","rollback","commit","recordset","i","undefined","push","textoCamposErrores","navbar","width","paddingLeft","nombreVariable","map","campo","display","alignItems","justifyContent","height","marginRight","agregarCampo","comandoSQL","color","fontSize","fontWeight","eliminarCampo","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport sql from 'mssql';\n\nimport Modal from '../../../Modal/Modal.js';\n\nconst tipoCampos = [ {nombre: \"varchar\"}, {nombre: \"bit\"}, {nombre: \"date\"}, {nombre: \"int\"}, {nombre: \"decimal\"}];\n\nexport default class InstruccionSQL extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mostrarModal: false,\n            tituloModal: \"\",\n            indexVarSeleccionado: -1\n        }\n        this.openModal = this.openModal.bind(this);\n        this.mostrarCampos = this.mostrarCampos.bind(this);\n        this.actualizarCampo = this.actualizarCampo.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.agregarInstruccionSQL = this.agregarInstruccionSQL.bind(this);\n    }\n\n    componentDidMount() {\n        //this.getCampos();\n    }\n\n    openModal (index) {\n        var nombre = this.props.camposInstruccionSQL[index].nombre;\n        this.setState({\n            mostrarModal: true,\n            tituloModal: \"Modificar: \"+nombre,\n            indexVarSeleccionado: index\n        }, this.mostrarCampos(index) );\n    }\n\n    mostrarCampos (index) {\n        var nombre = this.props.camposInstruccionSQL[index].nombre;\n        var tipo = this.props.camposInstruccionSQL[index].tipo;\n        setTimeout(function(){\n            $(\"#nombreVariable\").val(nombre);\n            $(\"#tipoEdit\").val(tipo);\n        }, 500);\n    }\n\n    actualizarCampo () {\n        var nombre = $(\"#nombreVariable\").val();\n        var tipo = $(\"#tipoEdit\").val();\n        if(nombre.length > 0 && nombre.length < 101) {\n            if(tipo.length > 0 && tipo.length < 31) {\n                this.props.actualizarCampo(this.state.indexVarSeleccionado, nombre, tipo);\n            } else {\n                this.props.showMessage(\"Error\", 'El tipo de la variable debe ser mayor a 0 caracteres y menor a 31.', true, false, {});\n            }\n        } else {\n            this.props.showMessage(\"Error\", 'El nombre de la variable debe ser mayor a 0 caracteres y menor a 101.', true, false, {});\n        }\n    }\n\n    closeModal () {\n        this.setState({\n            mostrarModal: false\n        });\n    }\n\n    agregarInstruccionSQL () {\n        var camposError = [];\n        var instruccionSQL = $(\"#comandoSQL\").val();\n        if(instruccionSQL.length > 0) {\n            if(this.props.camposInstruccionSQL.length > 0) {\n                const transaction = new sql.Transaction( this.props.pool );\n                transaction.begin(err => {\n                    var rolledBack = false;\n                    transaction.on('rollback', aborted => {\n                        rolledBack = true;\n                    });\n                    const request = new sql.Request(transaction);\n                    request.query(instruccionSQL, (err, result) => {\n                        if (err) {\n                            console.log(err);\n                            this.props.showMessage(\"Error\", 'Error al ejecutar la instruccionSQL.', true, false, {});\n                            if (!rolledBack) {\n                                transaction.rollback(err => {\n                                });\n                            }\n                        } else {\n                            transaction.commit(err => {\n                                if(result.recordset.length > 0) {\n                                    for (var i = 0; i < this.props.camposInstruccionSQL.length; i++) {\n                                        if(result.recordset[0][this.props.camposInstruccionSQL[i].nombre] == undefined) {\n                                            camposError.push(this.props.camposInstruccionSQL[i].nombre);\n                                        }\n                                    };\n                                    if(camposError.length > 0){\n                                        var textoCamposErrores = '';\n                                        for (var i = 0; i < camposError.length; i++) {\n                                            textoCamposErrores += camposError[i];\n                                        };\n                                        this.props.showMessage(\"Error\", \"Se encontraron errores al recuperar los campos: \"+textoCamposErrores+\". No se guardo la instruccionSQL.\", true, false, {});\n                                    } else {\n                                        this.props.agregarInstruccionSQL();\n                                    }\n                                } else {\n                                    this.props.showMessage(\"Error\", \"La instruccionSQL no retorno ningun valor.\", true, false, {});\n                                }\n                            });\n                        }\n                    });\n                }); // fin transaction\n            } else {\n                this.props.showMessage(\"Error\", \"Ingrese campos para tomar de la InstruccionSQL.\", true, false, {});\n            }\n        } else {\n            this.props.showMessage(\"Error\", \"Ingrese un valor para la InstruccionSQL.\", true, false, {});\n        }\n    }\n    \n    render() {\n        return (\n            <div>\n                {this.props.navbar}\n                <div className={\"row\"} style={{width: \"100%\"}}>\n                    <div className={\"card\"} style={{width: \"100%\"}}>\n                        <br/>\n                        <div style={{width: \"100%\", paddingLeft: \"15px\"}}>\n                            <h4>Crear Campos: {this.props.nombreVariable}</h4>\n                        </div>\n                        <br/>\n                        <div className={\"row\"} style={{width: \"100%\"}}>\n                            <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 form-group text-center\"}>\n                                <table className=\"table\">\n                                    <thead>\n                                        <tr>\n                                            <th scope=\"col\">#</th>\n                                            <th scope=\"col\">Nombre</th>\n                                            <th scope=\"col\">Tipo</th>\n                                            <th scope=\"col\">Modificar</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {this.props.camposInstruccionSQL.map((campo, i) => (\n                                            <tr key={campo.nombre}>\n                                                <th scope=\"row\">{i}</th>\n                                                <td>{campo.nombre}</td>\n                                                <td>{campo.tipo}</td>\n                                                <td style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n                                                    <img onClick={() => this.openModal(i)} src={\"../assets/edit.png\"} style={{height: \"20px\", width: \"20px\", display: \"block\", marginRight: \"10px\"}} className=\"addPointer\"></img>\n                                                </td>\n                                            </tr>\n                                        ))}\n                                        <tr>\n                                            <th scope=\"row\">#</th>\n                                            <td><input id=\"nuevoCampo\" type=\"text\" className=\"form-control\"/></td>\n                                            <td>\n                                                <select id=\"tipo\" className=\"form-control\">\n                                                    {tipoCampos.map((tipo, i) =>\n                                                        <option value={tipo.nombre} key={tipo.nombre}>{tipo.nombre}</option>\n                                                    )}\n                                                </select>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                        <br/>\n                        <div className={\"text-center\"} style={{width: \"100%\"}}>\n                            <a href=\"#\" className=\"btn btn-primary active\" onClick={this.props.agregarCampo}>Agregar Campo</a>\n                        </div>\n                        <br/>\n                        <hr/>\n                        <br/>\n                        <div className={\"row\"} style={{width: \"100%\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n                            <textarea className=\"form-control\" id=\"comandoSQL\" defaultValue={this.props.comandoSQL} rows=\"7\" style={{width: \"90%\"}}></textarea>\n                        </div>\n                        <hr/>\n                        <div className={\"row\"} style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n                            <a className={\"btn btn-primary btnWhiteColorHover font-bold font-20\"} style={{color: \"#fafafa\"}} onClick={this.agregarInstruccionSQL}>Guardar Comando SQL</a>\n                        </div>\n                        <br/>\n                    </div>\n                </div>\n                <Modal show={this.state.mostrarModal}\n                    titulo={this.state.tituloModal}\n                    onClose={this.closeModal}>\n                        <div className={\"row\"} style={{width: \"100%\"}}>\n                            <div className={\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3 form-group\"}>\n                                <label htmlFor={\"nombreVariable\"} className=\"col-form-label\">Nombre de Variable:</label>\n                            </div>\n                            <div className={\"col-xl-9 col-lg-9 col-md-9 col-sm-9 col-9 form-group\"} style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n                                <input id={\"nombreVariable\"} type=\"text\" className=\"form-control form-control-sm\"/>\n                            </div>\n                        </div>\n                        <div className={\"row\"} style={{width: \"100%\"}}>\n                            <div className={\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3 form-group\"}>\n                                <label htmlFor={\"tipoEdit\"} className=\"col-form-label\">Tipo de Variable:</label>\n                            </div>\n                            <div className={\"col-xl-9 col-lg-9 col-md-9 col-sm-9 col-9 form-group\"} style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n                                <select id=\"tipoEdit\" className=\"form-control\">\n                                    {tipoCampos.map((tipo, i) =>\n                                        <option value={tipo.nombre} key={tipo.nombre}>{tipo.nombre}</option>\n                                    )}\n                                </select>\n                            </div>\n                        </div>\n                        <div className={\"text-center\"}>\n                            <a onClick={this.actualizarCampo} className={\"btn btn-primary col-xs-5 col-5\"} style={{color: \"white\", fontSize: \"1.2em\", fontWeight: \"bold\"}}>Actualizar Variable</a>\n                            <span className={\"col-xs-1 col-1\"}></span>\n                            <a onClick={() => this.props.eliminarCampo(this.state.indexVarSeleccionado)} className={\"btn btn-primary col-xs-5 col-5\"} style={{color: \"white\", fontSize: \"1.2em\", fontWeight: \"bold\"}}>Eliminar Variable</a>\n                        </div>\n                </Modal>\n            </div>\n        );\n    }\n}\n"],"file":"InstruccionSQL.js"}