{"version":3,"sources":["components/Variables/Variables/EditarVariable/FuenteDatoVariable.js"],"names":["mostrarEsObjetoGlobal","mostrarInstruccionSQLGlobal","tituloGlobal","FuenteDatoVariable","props","state","mostrarEsObjeto","titulo","mostrarInstruccionSQL","cambioInstruccionSQL","bind","cambioAObjeto","cambiarTitulo","setState","esObjetoVariable","esInstruccionSQLVariable","tipoVariable","cambioDeArreglosDeAtributos","actualizarEstadoSiEsObjeto","actualizarEstadoSiEsInstruccionSQL","width","display","alignItems","justifyContent","nombreVariable","actualizarNombreVariable","descripcionVariable","actualizarDescripcionVariable","margin","border","atributos","nombreCampoNuevoAtributosVario","tipoNuevaVariable","actualizarNombreCampoNuevoAtributosVario","crearAtributoVariable","goToCreateConditions","goCreateVariableFieldSQL","color","guardarVariable","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport FuenteDatoVariableAtributos from './FuenteDatoVariableAtributos.js';\n\n/*COMPONENTE CONTENEDOR PADRE / ORIGINAL DE PROCESO CREAR VARIABLE ESTILO VARIABLE*/\n\n//var fuenteDatoAtributo = {};\n/*var columnaSeleccionada = {}, operacionSeleccionada = {};\nconst operaciones = [{valor: \"Asignar Valor Único\"}, {valor: \"Asignar Valor Único Si\"}, {valor: \"Asignar Valor Multiples\"}, {valor: \"Asignar Valor Multiples Si\"}, {valor: \"Contar\"}, {valor: \"Contar Si\"}];\nconst operacionesNumero = [{valor: \"Asignar Valor Único\"}, {valor: \"Asignar Valor Único Si\"}, {valor: \"Asignar Valor Multiples\"}, {valor: \"Asignar Valor Multiples Si\"}, {valor: \"Contar\"}, {valor: \"Contar Si\"}, {valor: \"Calcular Promedio\"}, {valor: \"Máximo\"}, {valor: \"Mínimo\"}, {valor: \"Sumar\"}];\nconst operacionesFecha = [{valor: \"Asignar Valor Único\"}, {valor: \"Asignar Valor Único Si\"}, {valor: \"Asignar Valor Multiples\"}, {valor: \"Asignar Valor Multiples Si\"}, {valor: \"Contar\"}, {valor: \"Contar Si\"}];\nconst operacionesBoolean = [{valor: \"Asignar Valor Único\"}, {valor: \"Asignar Valor Único Si\"}, {valor: \"Asignar Valor Multiples\"}, {valor: \"Asignar Valor Multiples Si\"}, {valor: \"Contar\"}, {valor: \"Contar Si\"}];\nconst operacionesCadena = [{valor: \"Asignar Valor Único\"}, {valor: \"Asignar Valor Único Si\"}, {valor: \"Asignar Valor Multiples\"}, {valor: \"Asignar Valor Multiples Si\"}, {valor: \"Contar\"}, {valor: \"Contar Si\"}, {valor: \"Sumar\"}];*/\n\nvar mostrarEsObjetoGlobal = true;\nvar mostrarInstruccionSQLGlobal = true;\nvar tituloGlobal = \"Instrucción SQL\";\n\nexport default class FuenteDatoVariable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            //atributos: this.props.atributos,\n            mostrarEsObjeto: mostrarEsObjetoGlobal,\n            titulo: tituloGlobal,\n            mostrarInstruccionSQL: mostrarInstruccionSQLGlobal\n            /*tipoVariable: '',\n            operaciones: operacionesCadena,\n            reglas: []*/\n        }\n        /*this.crearAtributoFuenteDatos = this.crearAtributoFuenteDatos.bind(this);\n        this.crearFuenteDato = this.crearFuenteDato.bind(this);\n        this.existeReglaAsignacion = this.existeReglaAsignacion.bind(this);\n        this.retornarCodigoOperacion = this.retornarCodigoOperacion.bind(this);\n        this.retornoSeleccionCampo = this.retornoSeleccionCampo.bind(this);\n        this.retornoSeleccionOperacion = this.retornoSeleccionOperacion.bind(this);*/\n        this.cambioInstruccionSQL = this.cambioInstruccionSQL.bind(this);\n        this.cambioAObjeto = this.cambioAObjeto.bind(this);\n        this.cambiarTitulo = this.cambiarTitulo.bind(this);\n    }\n\n    componentDidMount () {\n        this.setState({\n            mostrarEsObjeto: this.props.esObjetoVariable,\n            mostrarInstruccionSQL: this.props.esInstruccionSQLVariable\n        })\n    }\n\n    /*crearAtributoFuenteDatos () {\n        var nombre = $(\"#nombreFuenteDato\").val();\n        var esObjeto;\n        if ($(\"#esObjetoFuenteDato\").is(':checked'))\n            esObjeto = true;\n        else\n            esObjeto = false;\n        var nombreAtributo = nombre;\n        if(esObjeto) {\n            nombreAtributo = $(\"#nombreAtributo\").val();\n        }\n        var formula = this.retornarCodigoOperacion(operacionSeleccionada.valor) + \"(\" + columnaSeleccionada.valor + \")\";\n        if(nombreAtributo.length > 0) {\n            if(formula.length > 0) {\n            } else {\n                alert(\"Ingrese un valor para el nombre del atributo.\");\n            }\n        } else {\n            alert(\"Ingrese un valor para el nombre del atributo.\");\n        }\n        var fuenteDatoAtributo = {nombre: nombreAtributo, tipo: this.state.tipoVariable, formula: formula};\n        var copiaAntigua = [...this.state.atributos];\n        copiaAntigua.push(fuenteDatoAtributo);\n        this.setState({\n            atributos: copiaAntigua\n        }, console.log(this.state.atributos));\n    }\n\n    crearFuenteDato () {\n        if(columnaSeleccionada.valor != undefined) {            //if(columnaSeleccionada.valor != undefined) {\n            if(operacionSeleccionada.valor != undefined) {      //if(operacionSeleccionada.valor != undefined) {\n                if(operacionSeleccionada.valor.localeCompare(\"Asignar Valor Único Si\") != 0 && operacionSeleccionada.valor.localeCompare(\"Asignar Valor Multiples Si\") != 0 && operacionSeleccionada.valor.localeCompare(\"Contar Si\") != 0) {\n                    if(this.state.reglas.length > 0) {  //no existe ninguna regla\n                        if(this.existeReglaAsignacion()) {       //no existe ni regla de asignacion\n                            var nombre = $(\"#nombreFuenteDato\").val();\n                            var descripcion = $(\"#descripcionFuenteDato\").val();\n                            var esObjeto;\n                            if ($(\"#esObjetoFuenteDato\").is(':checked'))\n                                esObjeto = true;\n                            else\n                                esObjeto = false;\n                            var objetoPadreID = -1;\n                            if(!this.state.mostrarEsObjeto)\n                                objetoPadreID = $(\"#objetoPadreID\").val();\n                            var guardar;\n                            if ($(\"#guardarFuenteDato\").is(':checked'))\n                                guardar = true;\n                            else\n                                guardar = false;\n                            //var formula = this.retornarCodigoOperacion(operacionSeleccionada.valor) + \"(\" + columnaSeleccionada.valor + \")\";\n                            var fuenteDato = {nombre: nombre, descripcion: descripcion, esObjeto: esObjeto, objetoPadreID: objetoPadreID, guardar: guardar};\n                            var regla = {reglaPadreID: -1, variablePadreID: -1, esFuenteDato: true, operacion: operacionSeleccionada.valor, valor: '', nivel: 0, orden: 0};\n                        } else {\n                            alert(\"Tiene que crear por lo menos una regla de asignacion.\");\n                        }\n                    } else {\n                        alert(\"Tiene que crear por lo menos una regla.\");\n                    }\n                } else if(operacionSeleccionada.valor.localeCompare(\"Asignar Si Único Si\") == 0) {\n                    //\n                }\n            } else {\n                alert(\"Seleccione una operación de la tabla.\");\n            }\n        } else {\n            alert(\"Seleccione una columna de la tabla.\");\n        }\n    }\n\n    existeReglaAsignacion () {\n        for (var i = 0; i < this.state.reglas.length; i++) {\n            if(this.state.reglas[i].operacion.localeCompare(\"Asignar Valor Único\") == 0 || \n                this.state.reglas[i].operacion.localeCompare(\"Asignar Valor Único Si\") == 0 || \n                this.state.reglas[i].operacion.localeCompare(\"Asignar Valor Multiples\") == 0 || \n                this.state.reglas[i].operacion.localeCompare(\"Asignar Valor Multiples Si\") == 0 || \n                this.state.reglas[i].operacion.localeCompare(\"Contar\") == 0 || \n                this.state.reglas[i].operacion.localeCompare(\"Contar Si\") == 0 || \n                this.state.reglas[i].operacion.localeCompare(\"Calcular Promedio\") == 0 || \n                this.state.reglas[i].operacion.localeCompare(\"Máximo\") == 0 || \n                this.state.reglas[i].operacion.localeCompare(\"Mínimo\") == 0 || \n                this.state.reglas[i].operacion.localeCompare(\"Sumar\") == 0) {\n                return true;\n            }\n        };\n        return false;\n    }\n\n    retornarCodigoOperacion (codigo) {\n        if(codigo.localeCompare(\"Asignar Valor Único\") == 0) {\n            return \"ASIGUNI\";\n        }\n        if(codigo.localeCompare(\"Asignar Valor Único Si\") == 0) {\n            return \"ASIGUNI\";\n        }\n        if(codigo.localeCompare(\"Asignar Valor Multiples\") == 0) {\n            return \"ASIGMUL\";\n        }\n        if(codigo.localeCompare(\"Asignar Valor Multiples Si\") == 0) {\n            return \"ASIGMUL\";\n        }\n        if(codigo.localeCompare(\"Contar\") == 0) {\n            return \"COUNT\";\n        }\n        if(codigo.localeCompare(\"Contar Si\") == 0) {\n            return \"COUNT\";\n        }\n        if(codigo.localeCompare(\"Calcular Promedio\") == 0) {\n            return \"PROM\";\n        }\n        if(codigo.localeCompare(\"Máximo\") == 0) {\n            return \"MAX\";\n        }\n        if(codigo.localeCompare(\"Mínimo\") == 0) {\n            return \"MIN\";\n        }\n        if(codigo.localeCompare(\"Sumar\") == 0) {\n            return \"SUM\";\n        }\n    }\n\n    retornoSeleccionCampo (variable) {\n        columnaSeleccionada = {};\n        //fuenteDatoAtributo.columnaSeleccionada = {};\n        if(variable[0].valor.length > 0) {\n            columnaSeleccionada = variable[0];\n            //fuenteDatoAtributo.columnaSeleccionada = variable[0];\n            var tipoVariable = '';\n            if(columnaSeleccionada.tipo.localeCompare(\"int\") == 0 || columnaSeleccionada.tipo.localeCompare(\"decimal\") == 0) {\n                tipoVariable = 'Número';\n                this.setState({\n                    operaciones: operacionesNumero,\n                    tipoVariable: tipoVariable\n                });\n            } else if(columnaSeleccionada.tipo.localeCompare(\"varchar\") == 0) {\n                tipoVariable = 'Cadena';\n                this.setState({\n                    operaciones: operacionesCadena,\n                    tipoVariable: tipoVariable\n                });\n            } else if(columnaSeleccionada.tipo.localeCompare(\"date\") == 0) {\n                tipoVariable = 'Fecha';\n                this.setState({\n                    operaciones: operacionesFecha,\n                    tipoVariable: tipoVariable\n                });\n            } else if(columnaSeleccionada.tipo.localeCompare(\"bit\") == 0) {\n                tipoVariable = 'Booleano';\n                this.setState({\n                    operaciones: operacionesBoolean,\n                    tipoVariable: tipoVariable\n                });\n            }\n            //this.setState({\n            //    tipoVariable: tipoVariable\n            //});\n        }\n    }\n\n    retornoSeleccionOperacion (operacion) {\n        operacionSeleccionada = {};\n        //fuenteDatoAtributo.operacionSeleccionada = {};\n        if(operacion[0].valor.length > 0) {\n            operacionSeleccionada = operacion[0];\n            //fuenteDatoAtributo.operacionSeleccionada = operacion[0];\n        }\n    }*/\n\n    cambioInstruccionSQL () {\n        mostrarInstruccionSQLGlobal = !this.state.mostrarInstruccionSQL;\n        mostrarEsObjetoGlobal = true;\n        this.setState({\n            mostrarInstruccionSQL: !this.state.mostrarInstruccionSQL,\n            mostrarEsObjeto: true\n        }, this.cambiarTitulo);\n    }\n\n    cambioAObjeto () {\n        mostrarEsObjetoGlobal = !this.state.mostrarEsObjeto;\n        this.setState({\n            mostrarEsObjeto: !this.state.mostrarEsObjeto,\n            tipoVariable: ''\n        }, this.cambiarTitulo );\n    }\n\n    cambiarTitulo () {\n        this.props.cambioDeArreglosDeAtributos();\n        if(this.state.mostrarInstruccionSQL) {\n            tituloGlobal = \"Instrucción SQL\";\n            this.setState({\n                titulo: \"Instrucción SQL\"\n            });\n        } else if(this.state.mostrarEsObjeto) {\n            tituloGlobal = \"Valores Multiples\";\n            this.setState({\n                titulo: \"Valores Multiples\"\n            });\n        } else  {\n            tituloGlobal = \"Valor Único\";\n            this.setState({\n                titulo: \"Valor Único\"\n            });\n        }\n        this.props.actualizarEstadoSiEsObjeto(this.state.mostrarEsObjeto);\n        this.props.actualizarEstadoSiEsInstruccionSQL(this.state.mostrarInstruccionSQL);\n    }\n\n    render() {\n        return (\n            <div>\n                <br/>\n                <div className={\"row\"} style={{width: \"100%\"}}>\n                    <div className={\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3 form-group\"}>\n                        <label htmlFor=\"nombreFuenteDato\" className=\"col-form-label\">Nombre de Variable</label>\n                    </div>\n                    <div className={\"col-xl-9 col-lg-9 col-md-9 col-sm-9 col-9 form-group\"} style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n                        <input id=\"nombreFuenteDato\" defaultValue={this.props.nombreVariable} onKeyUp={this.props.actualizarNombreVariable} type=\"text\" className=\"form-control form-control-sm\"/>\n                    </div>\n                </div>\n                <div className={\"row\"} style={{width: \"100%\"}}>\n                    <div className={\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\"}>\n                        <label htmlFor=\"descripcionFuenteDato\" className=\"col-form-label\">Descripción de Variable:</label>\n                    </div>\n                    <div className={\"col-xl-9 col-lg-9 col-md-9 col-sm-9 col-9\"}>\n                        <textarea defaultValue={this.props.descripcionVariable} onKeyUp={this.props.actualizarDescripcionVariable} className=\"form-control\" id=\"descripcionFuenteDato\" rows=\"3\"></textarea>\n                    </div>\n                </div>\n                <br/>\n                <div className={\"row\"} style={{width: \"100%\"}}>\n                    <div className={\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3 form-group\"}>\n                        <label htmlFor=\"esInstruccionSQL\" className=\"col-form-label\">Tipo de Cálculo:</label>\n                    </div>\n                    <div className={\"col-xl-9 col-lg-9 col-md-9 col-sm-9 col-9 form-group\"}>\n                        <br/>\n                        <div className={\"switch-button-sql switch-button-yesno\"} style={{margin:\"0 auto\", display:\"block\"}}>\n                            <input type=\"checkbox\" defaultChecked={this.state.mostrarInstruccionSQL} name={\"esInstruccionSQL\"} id={\"esInstruccionSQL\"} onClick={this.cambioInstruccionSQL}/><span>\n                            <label htmlFor={\"esInstruccionSQL\"}></label></span>\n                        </div>\n                    </div>\n                </div>\n                {!this.state.mostrarInstruccionSQL\n                    ?\n                        <div className={\"row\"} style={{width: \"100%\"}}>\n                            <div className={\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3 form-group\"}>\n                                <label htmlFor=\"esObjetoFuenteDato\" className=\"col-form-label\">Tiene más de un campo:</label>\n                            </div>\n                            <div className={\"col-xl-9 col-lg-9 col-md-9 col-sm-9 col-9 form-group\"}>\n                                <br/>\n                                <div className={\"switch-button-variable switch-button-yesno\"} style={{margin:\"0 auto\", display:\"block\"}}>\n                                    <input type=\"checkbox\" defaultChecked={this.state.mostrarEsObjeto} name={\"esObjetoFuenteDato\"} id={\"esObjetoFuenteDato\"} onClick={this.cambioAObjeto}/><span>\n                                    <label htmlFor={\"esObjetoFuenteDato\"}></label></span>\n                                </div>\n                            </div>\n                        </div>\n                    : null\n                }\n                <div className={\"row\"} style={{width: \"100%\"}}>\n                    <div className={\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3 form-group\"}>\n                        <label htmlFor=\"guardarFuenteDato\" className=\"col-form-label\">Guardar Valores Obtenidos en Base de Datos:</label>\n                    </div>\n                    <div className={\"col-xl-9 col-lg-9 col-md-9 col-sm-9 col-9 form-group\"}>\n                        <br/>\n                        <div className={\"switch-button switch-button-yesno\"} style={{margin:\"0 auto\", display:\"block\"}}>\n                            <input type=\"checkbox\" defaultChecked name={\"guardarFuenteDato\"} id={\"guardarFuenteDato\"}/><span>\n                            <label htmlFor={\"guardarFuenteDato\"}></label></span>\n                        </div>\n                    </div>\n                </div>\n                <div className={\"row\"} style={{width: \"100%\", display: this.state.mostrarEsObjeto ? \"\" : \"none\"}}>\n                    <div className={\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\"}>\n                        <label htmlFor=\"objetoPadreID\" className=\"col-form-label\">Variable Padre:</label>\n                    </div>\n                    <div className={\"col-xl-9 col-lg-9 col-md-9 col-sm-9 col-9\"}>\n                        <select className=\"form-control\" id=\"objetoPadreID\">\n                            <option value=\"-1\">Ninguno</option>\n                        </select>\n                    </div>\n                </div>\n                <br/>\n                <div className={\"row\"} style={{width: \"100%\", border: \"1px solid #e6e6f2\"}}>\n                    <FuenteDatoVariableAtributos atributos={this.props.atributos}\n                                                        titulo={this.state.titulo}\n                                                        mostrarInstruccionSQL={this.state.mostrarInstruccionSQL}\n                                                        nombreCampoNuevoAtributosVario={this.props.nombreCampoNuevoAtributosVario}\n                                                        tipoNuevaVariable={this.props.tipoNuevaVariable}\n                                                        actualizarNombreCampoNuevoAtributosVario={this.props.actualizarNombreCampoNuevoAtributosVario}\n                                                        crearAtributoVariable={this.props.crearAtributoVariable}\n                                                        mostrarEsObjeto={this.state.mostrarEsObjeto}\n                                                        goToCreateConditions={this.props.goToCreateConditions}\n                                                        goCreateVariableFieldSQL={this.props.goCreateVariableFieldSQL}>\n                    </FuenteDatoVariableAtributos>\n                </div>\n                <br/>\n                <div className={\"row\"} style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n                    <a className={\"btn btn-brand btnWhiteColorHover font-bold font-20\"} style={{color: \"#fafafa\"}} onClick={this.props.guardarVariable}>Crear Variable</a>\n                </div>\n                <br/>\n            </div>\n        );\n    }\n}\n"],"file":"FuenteDatoVariable.js"}