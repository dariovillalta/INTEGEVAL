{"version":3,"sources":["components/SeleccionarTabla.js"],"names":["SeleccionarTabla","props","state","tablas","loadTables","bind","console","log","transaction","sql","Transaction","pool","begin","err","rolledBack","on","aborted","request","Request","query","result","rollback","commit","setState","recordset","tabla","index","selected","seleccionarTabla","ID","nombre","claseNoSel","claseSel","map","i","selTabla","length","React","Component"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;IAEqBA,gB;;;;;AACjB,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,0FAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAGA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,+BAAlB;AALe;AAMlB,G,CAED;;;;;wCACoB;AAChB,WAAKD,UAAL;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWC,MAAvB;AACH;;;iCAEY;AAAA;;AACT,UAAMK,WAAW,GAAG,IAAIC,kBAAIC,WAAR,CAAqB,KAAKT,KAAL,CAAWU,IAAhC,CAApB;AACAH,MAAAA,WAAW,CAACI,KAAZ,CAAkB,UAAAC,GAAG,EAAI;AACrB,YAAIC,UAAU,GAAG,KAAjB;AACAN,QAAAA,WAAW,CAACO,EAAZ,CAAe,UAAf,EAA2B,UAAAC,OAAO,EAAI;AAClCF,UAAAA,UAAU,GAAG,IAAb;AACH,SAFD;AAGA,YAAMG,OAAO,GAAG,IAAIR,kBAAIS,OAAR,CAAgBV,WAAhB,CAAhB;AACAS,QAAAA,OAAO,CAACE,KAAR,CAAc,sFAAd,EAAsG,UAACN,GAAD,EAAMO,MAAN,EAAiB;AACnH,cAAIP,GAAJ,EAAS;AACL,gBAAI,CAACC,UAAL,EAAiB;AACbR,cAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACAL,cAAAA,WAAW,CAACa,QAAZ,CAAqB,UAAAR,GAAG,EAAI,CAC3B,CADD;AAEH;AACJ,WAND,MAMO;AACHL,YAAAA,WAAW,CAACc,MAAZ,CAAmB,UAAAT,GAAG,EAAI;AACtB,cAAA,MAAI,CAACU,QAAL,CAAc;AACVpB,gBAAAA,MAAM,EAAEiB,MAAM,CAACI;AADL,eAAd;AAGH,aAJD;AAKH;AACJ,SAdD;AAeH,OArBD,EAFS,CAuBL;AACP;;;6BAESC,K,EAAOC,K,EAAO;AACpB,WAAKxB,KAAL,CAAWC,MAAX,CAAkBuB,KAAlB,EAAyBC,QAAzB,GAAoC,IAApC;AACArB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWC,MAAvB;AACA,WAAKF,KAAL,CAAW2B,gBAAX,CAA4BH,KAAK,CAACI,EAAlC,EAAsCJ,KAAK,CAACK,MAA5C;AACH;;;6BAEQ;AAAA;;AACL,UAAIC,UAAU,GAAG,+DAAjB;AACA,UAAIC,QAAQ,GAAG,uDAAf;AACA,aACI,6CACI;AAAK,QAAA,SAAS,EAAE;AAAhB,SACI;AAAK,QAAA,SAAS,EAAE;AAAhB,SACI;AAAK,QAAA,SAAS,EAAE;AAAhB,SACI;AAAK,QAAA,SAAS,EAAE;AAAhB,SACI;AAAK,QAAA,SAAS,EAAE;AAAhB,SACK,KAAK9B,KAAL,CAAWC,MAAX,CAAkB8B,GAAlB,CAAsB,UAACR,KAAD,EAAQS,CAAR;AAAA,eACnB;AAAG,UAAA,SAAS,EAAET,KAAK,CAACE,QAAN,GAAiBK,QAAjB,GAA4BD,UAA1C;AAAsD,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACI,QAAL,CAAcV,KAAd,EAAqBS,CAArB,CAAN;AAAA,WAA/D;AAA8F,UAAA,GAAG,EAAEA;AAAnG,WAAuGT,KAAK,CAACK,MAA7G,CADmB;AAAA,OAAtB,CADL,EAIM,KAAK5B,KAAL,CAAWC,MAAX,CAAkBiC,MAAlB,IAA4B,CAA5B,GACE;AAAG,QAAA,SAAS,EAAE;AAAd,qCADF,GAGE,6CAPR,CADJ,CADJ,CADJ,CADJ,CADJ,CADJ;AAsBH;;;;EAxEyCC,kBAAMC,S","sourcesContent":["import React from 'react';\nimport sql from 'mssql';\n\nexport default class SeleccionarTabla extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tablas: []\n        }\n        this.loadTables = this.loadTables.bind(this);\n    }\n\n    //componentDidMount() {componentDidUpdate\n    componentDidMount() {\n        this.loadTables();\n        console.log(this.state.tablas);\n    }\n\n    loadTables() {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Tablas where funcion ='Pagos de PrÃ©stamos' or funcion ='Plan de Pagos'\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        this.setState({\n                            tablas: result.recordset\n                        });\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    selTabla (tabla, index) {\n        this.state.tablas[index].selected = true;\n        console.log(this.state.tablas);\n        this.props.seleccionarTabla(tabla.ID, tabla.nombre);\n    }\n\n    render() {\n        var claseNoSel = \"btn btn-outline-info btn-block btnWhiteColorHover fontSize1EM\";\n        var claseSel = \"btn btn-info btn-block btnWhiteColorHover fontSize1EM\";\n        return (\n            <div>\n                <div className={\"row\"}>\n                    <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                        <div className={\"card influencer-profile-data\"}>\n                            <div className={\"card-body\"}>\n                                <div className={\"row border-top border-bottom addPaddingToConfig\"}>\n                                    {this.state.tablas.map((tabla, i) =>\n                                        <a className={tabla.selected ? claseSel : claseNoSel} onClick={() => this.selTabla(tabla, i)} key={i}>{tabla.nombre}</a>\n                                    )}\n                                    { this.state.tablas.length == 0 ? (\n                                        <a className={\"btn btn-outline-dark btn-block btnWhiteColorHover fontSize1EM\"}>No existen tablas creadas</a>\n                                    ) : (\n                                        <span></span>\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n"],"file":"SeleccionarTabla.js"}