{"version":3,"sources":["components/Riesgos/EditarRiesgo.js"],"names":["tipoCampos","nombre","peso","formula","nombreEncargadoRiesgo","primeraVezCargado","EditarRiesgo","props","state","x","componentActual","navbar","usuarios","goCrearUmbral","bind","retornarEditRiesgo","guardarRiesgo","tieneEspaciosEnBlanco","updateNombreRiesgo","updateFormulaRiesgo","updateNombreEncargadoRiesgo","nombreRiesgo","pesoRiesgo","setState","formulaRiesgo","responsableRiesgo","$","val","getUsuarios","transaction","sql","Transaction","pool","begin","err","rolledBack","on","aborted","request","Request","query","result","console","log","rollback","commit","recordset","configuracionHome","retornoSeleccionRiesgo","responsable","length","isNaN","parseInt","idRiesgoSeleccionado","alert","getRiesgos","editarRiesgo","s","test","localeCompare","width","pesoMaximo","marginTop","map","usuario","i","ID","color","display","alignItems","justifyContent","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport sql from 'mssql';\nimport Slider from 'react-input-slider';\n\nimport Umbral from '../Umbral/Umbral.js';\n\nconst tipoCampos = [ {nombre: \"texto\"}, {nombre: \"booleano\"}, {nombre: \"fecha\"}, {nombre: \"número\"}, {nombre: \"arreglo\"}];\nvar peso = 0, nombre = '', formula = '', nombreEncargadoRiesgo = '', primeraVezCargado = true;\n\nexport default class EditarRiesgo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            x: peso,\n            componentActual: \"EditarRiesgo\",\n            navbar: \"\",\n            usuarios: []\n        }\n        this.goCrearUmbral = this.goCrearUmbral.bind(this);\n        this.retornarEditRiesgo = this.retornarEditRiesgo.bind(this);\n        this.guardarRiesgo = this.guardarRiesgo.bind(this);\n        this.tieneEspaciosEnBlanco = this.tieneEspaciosEnBlanco.bind(this);\n        this.updateNombreRiesgo = this.updateNombreRiesgo.bind(this);\n        this.updateFormulaRiesgo = this.updateFormulaRiesgo.bind(this);\n        this.updateNombreEncargadoRiesgo = this.updateNombreEncargadoRiesgo.bind(this);\n    }\n\n    componentDidMount() {\n        if(primeraVezCargado) {\n            nombre = this.props.nombreRiesgo;\n            peso = this.props.pesoRiesgo;\n            this.setState({\n                x: peso\n            });\n            formula = this.props.formulaRiesgo;\n            nombreEncargadoRiesgo = this.props.responsableRiesgo;\n            $(\"#nombreRiesgo\").val(nombre);\n            $(\"#formula\").val(formula);\n            primeraVezCargado = false;\n            this.getUsuarios();\n        }\n    }\n\n    componentWillUnmount() {\n        peso = 0;\n        nombre = '';\n        formula = '';\n        nombreEncargadoRiesgo = '';\n        primeraVezCargado = true;\n    }\n\n    getUsuarios () {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Usuarios\", (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        this.setState({\n                            usuarios: result.recordset\n                        });\n                        $(\"#responsable\").val(nombreEncargadoRiesgo);\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    goCrearUmbral () {\n        var navbar = <div className={\"row\"}>\n            <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                <div className={\"page-header\"}>\n                    <h2 className={\"pageheader-title\"}>Configuraci&oacute;n</h2>\n                    <div className={\"page-breadcrumb\"}>\n                        <nav aria-label=\"breadcrumb\">\n                            <ol className={\"breadcrumb\"}>\n                                <li className={\"breadcrumb-item font-16\"} aria-current=\"page\" onClick={this.props.configuracionHome}><a href=\"#\" className={\"breadcrumb-link\"}>Configuraci&oacute;n</a></li>\n                                <li className={\"breadcrumb-item font-16\"} aria-current=\"page\" onClick={this.props.retornoSeleccionRiesgo}><a href=\"#\" className={\"breadcrumb-link\"}>Riesgos</a></li>\n                                <li className={\"breadcrumb-item font-16\"} aria-current=\"page\" onClick={this.retornarEditRiesgo}><a href=\"#\" className={\"breadcrumb-link\"}>Editar Riesgo</a></li>\n                                <li className={\"breadcrumb-item active font-16\"} aria-current=\"page\">Umbrales</li>\n                            </ol>\n                        </nav>\n                    </div>\n                </div>\n            </div>\n        </div>;\n        this.setState({\n            navbar: navbar,\n            componentActual: \"EditarUmbral\"\n        });\n    }\n\n    retornarEditRiesgo () {\n        this.setState({\n            componentActual: \"EditarRiesgo\"\n        });\n    }\n\n    guardarRiesgo () {\n        var nombre = $(\"#nombreRiesgo\").val();\n        var formula = $(\"#formula\").val();\n        var responsable = $(\"#responsable\").val();\n        var peso = this.state.x;\n        if(nombre.length > 0 && nombre.length < 101) {\n            if(!this.tieneEspaciosEnBlanco(nombre)) {\n                if(formula.length > 0 && formula.length < 501) {\n                    if(responsable.length > 0) {\n                        if( !isNaN(parseInt(peso)) ) {\n\n                            const transaction = new sql.Transaction( this.props.pool );\n                            transaction.begin(err => {\n                                var rolledBack = false;\n                                transaction.on('rollback', aborted => {\n                                    rolledBack = true;\n                                });\n                                const request = new sql.Request(transaction);\n                                request.query(\"update Riesgos set nombre = '\"+nombre+\"', peso = \"+peso+\", formula = '\"+formula+\"', responsable = '\"+responsable+\"' where ID = \"+this.props.idRiesgoSeleccionado, (err, result) => {\n                                    if (err) {\n                                        console.log(err);\n                                        if (!rolledBack) {\n                                            transaction.rollback(err => {\n                                            });\n                                        }\n                                    } else {\n                                        transaction.commit(err => {\n                                            alert(\"Riesgo Modificado.\");\n                                            this.props.getRiesgos();\n                                            this.props.editarRiesgo(this.props.idRiesgoSeleccionado, nombre, peso, formula);\n                                        });\n                                    }\n                                });\n                            }); // fin transaction\n\n                        } else {\n                            alert(\"el peso del riesgo debe ser un numero valido\");\n                        }\n                    } else {\n                        alert(\"Ingrese un valor para el responsable.\");\n                    }\n                } else {\n                    alert(\"la formula del riesgo debe tener una longitud mayor a 0 y menor a 501\");\n                }\n            } else {\n                alert('El nombre del riesgo no debe contener espacios en blanco');\n            }\n        } else {\n            alert(\"el nombre del riesgo debe tener una longitud mayor a 0 y menor a 101\");\n        }\n    }\n\n    tieneEspaciosEnBlanco (s) {\n        return /\\s/g.test(s);\n    }\n\n    updateNombreRiesgo() {\n        nombre = $(\"#nombreRiesgo\").val();\n    }\n\n    updateFormulaRiesgo() {\n        formula = $(\"#formula\").val();\n    }\n\n    updateNombreEncargadoRiesgo() {\n        nombreEncargadoRiesgo = $(\"#responsable\").val();\n    }\n\n    render() {\n        if(this.state.componentActual.localeCompare(\"EditarRiesgo\") == 0) {\n            return (\n                <div>\n                    <div className={\"row\"}>\n                        <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                            <div className={\"page-header\"}>\n                                <h2 className={\"pageheader-title\"}>Editar Riesgo</h2>\n                                <div className={\"page-breadcrumb\"}>\n                                    <nav aria-label=\"breadcrumb\">\n                                        <ol className={\"breadcrumb\"}>\n                                            <li className={\"breadcrumb-item font-16\"} aria-current=\"page\" onClick={this.props.configuracionHome}><a href=\"#\" className={\"breadcrumb-link\"}>Configuraci&oacute;n</a></li>\n                                            <li className={\"breadcrumb-item font-16\"} aria-current=\"page\" onClick={this.props.retornoSeleccionRiesgo}><a href=\"#\" className={\"breadcrumb-link\"}>Riesgos</a></li>\n                                            <li className={\"breadcrumb-item active font-16\"} aria-current=\"page\">Editar Riesgo</li>\n                                        </ol>\n                                    </nav>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={\"row\"}>\n                        <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                            <div className={\"card influencer-profile-data\"}>\n                                <div className={\"card-body\"}>\n                                    <div className={\"border-top border-bottom addPaddingToConfig\"} style={{width: \"100%\"}}>\n                                        <div className={\"row\"} style={{width: \"100%\"}}>\n                                            <div className={\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3 form-group\"}>\n                                                <label htmlFor=\"nombreRiesgo\" className=\"col-form-label\">Nombre Riesgo</label>\n                                            </div>\n                                            <div className={\"col-xl-9 col-lg-9 col-md-9 col-sm-9 col-9 form-group\"}>\n                                                <input id=\"nombreRiesgo\" type=\"text\" defaultValue={nombre} onKeyUp={this.updateNombreRiesgo} className=\"form-control form-control-sm\"/>\n                                            </div>\n                                        </div>\n                                        <div className={\"row\"} style={{width: \"100%\"}}>\n                                            <div className={\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3 form-group\"}>\n                                                <label htmlFor=\"formula\" className=\"col-form-label\">Tipo de Indicador</label>\n                                            </div>\n                                            <div className={\"col-xl-9 col-lg-9 col-md-9 col-sm-9 col-9 form-group\"}>\n                                                <select id=\"formula\" defaultValue={formula} className=\"form-control\">\n                                                    <option value=\"ambos\">Calidad de Gestión + Riesgo Inherente</option>\n                                                    <option value=\"riesgoInherente\">Riesgo Inherente</option>\n                                                    <option value=\"calidadGestión\">Calidad de Gestión</option>\n                                                </select>\n                                            </div>\n                                        </div>\n                                        <div className={\"row\"} style={{width: \"100%\"}}>\n                                            <div className={\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3 form-group\"}>\n                                                <label htmlFor=\"peso\" className=\"col-form-label\">Peso</label>\n                                            </div>\n                                            <div className={\"col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 form-group\"}>\n                                                <Slider\n                                                    axis=\"x\"\n                                                    xstep={1}\n                                                    xmin={0}\n                                                    xmax={this.props.pesoMaximo}\n                                                    x={this.state.x}\n                                                    onChange={({ x }) => {\n                                                        this.setState({ x: x });\n                                                        peso = x;\n                                                    }}\n                                                    style={{width: \"100%\", marginTop: \"10px\"}}/>\n                                            </div>\n                                            <div className={\"col-xl-1 col-lg-1 col-md-1 col-sm-1 col-1 form-group\"}>\n                                                <label id=\"pesoLabel\" className=\"col-form-label\">{this.state.x}</label>\n                                            </div>\n                                        </div>\n                                        <div className={\"row\"} style={{width: \"100%\"}}>\n                                            <div className={\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3 form-group\"}>\n                                                <label htmlFor=\"responsable\" className=\"col-form-label\">Nombre Encargado</label>\n                                            </div>\n                                            <div className={\"col-xl-9 col-lg-9 col-md-9 col-sm-9 col-9 form-group\"}>\n                                                <select id=\"responsable\" defaultValue={nombreEncargadoRiesgo} onChange={this.updateNombreEncargadoRiesgo} className=\"form-control\">\n                                                    <option value=\"-1\">Ninguno</option>\n                                                    {this.state.usuarios.map((usuario, i) =>\n                                                        <option value={usuario.ID} key={usuario.ID}>{usuario.usuario}</option>\n                                                    )}\n                                                </select>\n                                            </div>\n                                        </div>\n                                        <a className={\"btn btn-brand btn-block btnWhiteColorHover font-bold font-20\"} style={{color: \"#fafafa\"}} onClick={this.goCrearUmbral}>Umbrales</a>\n                                        <br/>\n                                        <div className={\"row\"} style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n                                            <a className={\"btn btn-primary btnWhiteColorHover font-bold font-20\"} style={{color: \"#fafafa\"}} onClick={this.guardarRiesgo}>Modificar</a>\n                                        </div>\n                                        <br/>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        } else if(this.state.componentActual.localeCompare(\"EditarUmbral\") == 0) {\n            return (\n                <div>\n                    <Umbral navbar={this.state.navbar} idVariable={this.props.idRiesgoSeleccionado} pool={this.props.pool}\n                                                        lista={[]}\n                                                        tablaVariable={\"Riesgo\"}\n                                                        tituloUmbral={\"Riesgo: \"+this.props.nombreRiesgo}> </Umbral>\n                </div>\n            );\n        }\n    }\n}\n"],"file":"EditarRiesgo.js"}