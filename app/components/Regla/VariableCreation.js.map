{"version":3,"sources":["components/Regla/VariableCreation.js"],"names":["campo","VariableCreation","props","state","tipoCampo","esNumero","esBoolean","esFecha","esTexto","errorCreacionRegla","descripcion","mostrar","mensajeModal","mostrarMensaje","mensajeConfirmado","esError","esConfirmar","titulo","mensaje","conexiones","camposConexiones","variables","camposVariables","campoSeleccionadoNombre","textoOperacion","textoValor","retornoSeleccionVariable","bind","retornoSeleccionOperacion","loadFields","getConections","getFieldsConections","getFieldConections","getVariables","getFieldsVariables","getFieldVariables","saveRule","dismissReglaNewError","showSuccesMessage","dismissMessageModal","actualizarValor","calculoFuenteDatos","calculoVariables","campoSeleccionadoInput","setState","valor","retornarCampo","textoOperacionNuevo","transaction","sql","Transaction","pool","begin","err","rolledBack","on","aborted","request","Request","query","result","console","log","rollback","commit","temp","i","recordset","length","push","tabla","arregloTemp","nombreTabla","index","array","nombreColumnas","COLUMN_NAME","tipo","DATA_TYPE","undefined","$","merge","nombre","ID","variableID","seleccionCampoIDSelect","val","campoTablaID","campoID","campoTipo","operacion","operacionTipo","valorLista","valorCampos","esListaValor","esCampoValor","texto","localeCompare","campos","tablaID","operacionTexto","isNaN","toString","tablaNombreValor","textoABuscar","transaction1","request1","tipoTablaRes","idTipoTabla","descripcionN","e","self","setTimeout","width","height","display","alignItems","justifyContent","borderBottom","camposDropdown","valoresDropdown","confirmMessageModal","callbackCrearRegla","color","fontSize","fontWeight","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport sql from 'mssql';\n\nimport Campo from './Campo.js';\nimport Operacion from './Operacion.js';\nimport Valor from './Valor.js';\nimport ErrorMessage from '../ErrorMessage.js';\nimport MessageModal from '../MessageModal.js';\n\nvar campo;\n\nexport default class VariableCreation extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tipoCampo: {\n                esNumero: true,\n                esBoolean: false,\n                esFecha: false,\n                esTexto: false,\n            },\n            errorCreacionRegla: {campo: \"\", descripcion: \"\", mostrar: false},\n            mensajeModal: {mostrarMensaje: false, mensajeConfirmado: false, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\"},\n            conexiones: [],\n            camposConexiones: [],\n            variables: [],\n            camposVariables: [],\n            campoSeleccionadoNombre: '{campo}',\n            textoOperacion: '{operación}',\n            textoValor: '{valor}'\n        }\n        this.retornoSeleccionVariable = this.retornoSeleccionVariable.bind(this);\n        this.retornoSeleccionOperacion = this.retornoSeleccionOperacion.bind(this);\n        this.esNumero = this.esNumero.bind(this);\n        this.esBoolean = this.esBoolean.bind(this);\n        this.esFecha = this.esFecha.bind(this);\n        this.esTexto = this.esTexto.bind(this);\n        this.loadFields = this.loadFields.bind(this);\n        this.getConections = this.getConections.bind(this);\n        this.getFieldsConections = this.getFieldsConections.bind(this);\n        this.getFieldConections = this.getFieldConections.bind(this);\n        this.getVariables = this.getVariables.bind(this);\n        this.getFieldsVariables = this.getFieldsVariables.bind(this);\n        this.getFieldVariables = this.getFieldVariables.bind(this);\n        this.saveRule = this.saveRule.bind(this);\n        this.dismissReglaNewError = this.dismissReglaNewError.bind(this);\n        this.showSuccesMessage = this.showSuccesMessage.bind(this);\n        this.dismissMessageModal = this.dismissMessageModal.bind(this);\n        this.actualizarValor = this.actualizarValor.bind(this);\n    }\n\n    componentDidMount() {\n        if(this.props.calculoFuenteDatos) {\n            //\n        }\n        if(this.props.calculoVariables) {\n            //\n        }\n        this.loadFields();\n    }\n\n    retornoSeleccionVariable(campoSeleccionadoInput) {\n        campo = campoSeleccionadoInput[0];\n        this.setState({\n            campoSeleccionadoNombre: campo.valor\n        });\n        this.props.retornarCampo(campo);\n    }\n\n    retornoSeleccionOperacion(textoOperacionNuevo) {\n        this.setState({\n            textoOperacion: textoOperacionNuevo\n        });\n    }\n\n    esNumero() {\n        this.setState({\n            tipoCampo: {\n                esNumero: true,\n                esBoolean: false,\n                esFecha: false,\n                esTexto: false\n            }\n        });\n    }\n\n    esBoolean () {\n        this.setState({\n            tipoCampo: {\n                esNumero: false,\n                esBoolean: true,\n                esFecha: false,\n                esTexto: false\n            }\n        });\n    }\n\n    esFecha () {\n        this.setState({\n            tipoCampo: {\n                esNumero: false,\n                esBoolean: false,\n                esFecha: true,\n                esTexto: false\n            }\n        });\n    }\n\n    esTexto () {\n        this.setState({\n            tipoCampo: {\n                esNumero: false,\n                esBoolean: false,\n                esFecha: false,\n                esTexto: true\n            }\n        });\n    }\n\n    loadFields() {\n        this.getConections();\n        this.getVariables();\n    }\n\n    getConections () {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Tablas\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                        return [];\n                    }\n                } else {\n                    transaction.commit(err => {\n                        var temp = [];\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            temp.push({valor: result.recordset[i].tabla});\n                        };\n                        this.setState({\n                            conexiones: temp\n                        }, this.getFieldsConections );\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    getFieldsConections () {\n        var arregloTemp = [];\n        for (var i = 0; i < this.state.conexiones.length; i++) {\n            this.getFieldConections(this.state.conexiones[i].valor, i, arregloTemp);\n        };\n    }\n\n    getFieldConections(nombreTabla, index, array) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = '\"+nombreTabla+\"'\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        var nombreColumnas = [];\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            nombreColumnas.push({valor: result.recordset[i].COLUMN_NAME, tipo: result.recordset[i].DATA_TYPE});\n                        };\n                        if(array[index] == undefined) {\n                            array[index] = [];\n                        }\n                        array[index] = $.merge(array[index], nombreColumnas);\n                        this.setState({\n                            camposConexiones: array\n                        });\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    getVariables () {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Variables\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                        return [];\n                    }\n                } else {\n                    transaction.commit(err => {\n                        var temp = [];\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            temp.push({valor: result.recordset[i].nombre});\n                        };\n                        this.setState({\n                            variables: temp\n                        }, this.getFieldsVariables );\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    getFieldsVariables () {\n        var arregloTemp = [];\n        for (var i = 0; i < this.state.variables.length; i++) {\n            this.getFieldVariables(this.state.variables[i].ID, i, arregloTemp);\n        };\n    }\n\n    getFieldVariables(variableID, index, array) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from VariablesCampos where variableID = \"+variableID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        var nombreColumnas = [];\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            nombreColumnas.push({valor: result.recordset[i].nombre, tipo: result.recordset[i].tipo});\n                        };\n                        if(array[index] == undefined) {\n                            array[index] = [];\n                        }\n                        array[index] = $.merge(array[index], nombreColumnas);\n                        this.setState({\n                            camposVariables: array\n                        });\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    saveRule() {\n        let seleccionCampoIDSelect = $(\"#campo\").val();\n        if(seleccionCampoIDSelect.length > 0) {\n            let campoTablaID;\n            let campoID;\n            let campoTipo;\n            let operacion;\n            let operacionTipo;\n            let valorLista;   //ID Tabla\n            let valorCampos;\n            let esListaValor, esCampoValor;\n            let texto;\n            if(seleccionCampoIDSelect.localeCompare(\"M0ra\") != 0 && seleccionCampoIDSelect.localeCompare(\"Gr4nDeud0r\") != 0 && seleccionCampoIDSelect.localeCompare(\"P3quDeud0r\") != 0) {\n                campoTablaID = this.state.campos[seleccionCampoIDSelect].tablaID;\n                campoID = this.state.campos[seleccionCampoIDSelect].ID;\n                campoTipo = this.state.campos[seleccionCampoIDSelect].tipo;\n                operacion = $(\"input[name='operacionRadio']:checked\").val();\n                operacionTipo;\n                if(operacion != undefined && (operacion.localeCompare(\"<\") == 0 || operacion.localeCompare(\"<=\") == 0 || operacion.localeCompare(\">\") == 0 || operacion.localeCompare(\">=\") == 0 || operacion.localeCompare(\"==\") == 0 || operacion.localeCompare(\"!=\") == 0))\n                    operacionTipo = \"relacional\";\n                else if(operacion != undefined && (operacion.localeCompare(\"+\") == 0 || operacion.localeCompare(\"-\") == 0 || operacion.localeCompare(\"*\") == 0 || operacion.localeCompare(\"/\") == 0))\n                    operacionTipo = \"algebraica\";\n                else if(operacion != undefined && (operacion.localeCompare(\"sumIf\") == 0 || operacion.localeCompare(\"sumIfNot\") == 0))\n                    operacionTipo = \"excel\";\n                valorLista = $(\"#selectLista\").val();   //ID Tabla\n                valorCampos = $(\"#camposDeLista\").val();\n                esListaValor, esCampoValor;\n                if(valorLista != undefined && valorLista.localeCompare(\"table\") == 0) {\n                    esListaValor = false;\n                    esCampoValor = true;\n                    valorLista = this.props.tablaID;\n                } else if(valorLista != undefined && valorLista.length > 0) {\n                    esListaValor = true;\n                    esCampoValor = false;\n                }\n                let operacionTexto;\n                if(operacion.localeCompare(\"==\") == 0){\n                    operacionTexto = \"es igual\";\n                } else if(operacion.localeCompare(\"<\") == 0){\n                    operacionTexto = \"es menor\";\n                } else if(operacion.localeCompare(\"<=\") == 0){\n                    operacionTexto = \"es menor o igual\";\n                } else if(operacion.localeCompare(\">=\") == 0){\n                    operacionTexto = \"es mayor o igual\";\n                } else if(operacion.localeCompare(\">\") == 0){\n                    operacionTexto = \"es mayor\";\n                } else if(operacion.localeCompare(\"!=\") == 0){\n                    operacionTexto = \"no es igual\";\n                }\n                texto = this.state.campos[seleccionCampoIDSelect].nombre + \" \" + operacionTexto + \" \";\n            }\n            console.log(\"//////////////////////\");\n            console.log(\"//////////////////////\");\n            console.log(\"campoTablaID = \"+campoTablaID);\n            console.log(\"campoID = \"+campoID);\n            console.log(\"campoTipo = \"+campoTipo);\n            console.log(\"operacion = \"+operacion);\n            console.log(\"operacionTipo = \"+operacionTipo);\n            console.log(\"valorLista = \"+valorLista);\n            console.log(\"valorCampos = \"+valorCampos);\n            console.log(\"esListaValor = \"+esListaValor);\n            console.log(\"esCampoValor = \"+esCampoValor);\n            console.log(\"+++++++++++++++++++++++\");\n            console.log(\"+++++++++++++++++++++++\");\n            if(!isNaN(campoTablaID) && campoTablaID.toString().length > 0 ) {\n                if(!isNaN(campoID) && campoID.toString().length > 0 ) {\n                    if(isNaN(campoTipo) && campoTipo.length > 0) {\n                        if(operacion != undefined && isNaN(operacion) && operacion.length > 0) {\n                            if(isNaN(operacionTipo) && operacionTipo.length > 0) {\n                                if(valorLista != undefined && (/*!isNaN(valorLista) ||*/ valorLista.toString().length > 0)) {\n                                    if(valorCampos.length > 0 && valorCampos.length < 1001) {\n                                        if(esListaValor != undefined) {\n                                            if(esCampoValor != undefined) {\n                                                this.setState({\n                                                    errorCreacionRegla: {campo: '', descripcion: '', mostrar: false}\n                                                });\n                                                var tablaNombreValor = 'VariablesdeLista';\n                                                if(esCampoValor)\n                                                    tablaNombreValor = 'Campos';\n                                                var textoABuscar = '';\n                                                for (var i = 0; i < valorCampos.length; i++) {\n                                                    if(textoABuscar.length == 0) {\n                                                        textoABuscar += ' where ID = '+valorCampos[i];\n                                                    } else {\n                                                        textoABuscar += ' or ID = '+valorCampos[i];\n                                                    }\n                                                };\n                                                const transaction = new sql.Transaction( this.props.pool );\n                                                transaction.begin(err => {\n                                                    var rolledBack = false;\n                                                    transaction.on('rollback', aborted => {\n                                                        rolledBack = true;\n                                                    });\n                                                    const request = new sql.Request(transaction);\n                                                    request.query(\"select * from \"+tablaNombreValor+textoABuscar, (err, result) => {\n                                                        if (err) {\n                                                            if (!rolledBack) {\n                                                                console.log(err);\n                                                                transaction.rollback(err => {\n                                                                });\n                                                            }\n                                                        } else {\n                                                            transaction.commit(err => {\n                                                                for (var i = 0; i < result.recordset.length; i++) {\n                                                                    if(esCampoValor) {\n                                                                        if(i == 0)\n                                                                            texto+=result.recordset[i].nombre;\n                                                                        else\n                                                                            texto+=\", \"+result.recordset[i].nombre;\n                                                                    } else {\n                                                                        if(i == 0)\n                                                                            texto+=result.recordset[i].valor;\n                                                                        else\n                                                                            texto+=\", \"+result.recordset[i].valor;\n                                                                    }\n                                                                };\n                                                                const transaction1 = new sql.Transaction( this.props.pool );\n                                                                transaction1.begin(err => {\n                                                                    var rolledBack = false;\n                                                                    transaction1.on('rollback', aborted => {\n                                                                        rolledBack = true;\n                                                                    });\n                                                                    const request1 = new sql.Request(transaction1);\n                                                                    request1.query(\"insert into Reglas (campoTablaID, campoCampoID, campoTipo, operacion, tipoOperacion, valor, valorTipo, esListaValor, esCampoValor, valorTablaID, texto, nombreTablaRes, idTipoTabla) values (\"+campoTablaID+\", \"+campoID+\", '\"+campoTipo+\"', '\"+operacion+\"', '\"+operacionTipo+\"','\"+valorCampos+\"', '', '\"+esListaValor+\"', '\"+esCampoValor+\"', \"+valorLista+\", '\"+texto+\"', '\"+this.props.tipoTablaRes+\"', \"+this.props.idTipoTabla+\")\", (err, result) => {\n                                                                        if (err) {\n                                                                            if (!rolledBack) {\n                                                                                console.log(err);\n                                                                                transaction1.rollback(err => {\n                                                                                });\n                                                                            }\n                                                                        } else {\n                                                                            transaction1.commit(err => {\n                                                                                this.showSuccesMessage(\"Exito\", \"Regla creada con éxito.\");\n                                                                            });\n                                                                        }\n                                                                    });\n                                                                }); // fin transaction1\n                                                            });\n                                                        }\n                                                    });\n                                                }); // fin transaction\n                                            } else {\n                                                let campo = \"Es Campo en Valor\";\n                                                let descripcionN;\n                                                if(esCampoValor != undefined)\n                                                    descripcionN = \"El valor debe existir.\";\n                                                this.setState({\n                                                    errorCreacionRegla: {campo: campo, descripcion: descripcionN, mostrar: true}\n                                                });\n                                            }\n                                        } else {\n                                            let campo = \"Es Lista en Valor\";\n                                            let descripcionN;\n                                            if(esListaValor != undefined)\n                                                descripcionN = \"El valor debe existir.\";\n                                            this.setState({\n                                                errorCreacionRegla: {campo: campo, descripcion: descripcionN, mostrar: true}\n                                            });\n                                        }\n                                    } else {\n                                        let campo = \"Valor\";\n                                        let descripcionN;\n                                        if(valorCampos.length == 0)\n                                            descripcionN = \"El valor debe tener una longitud mayor a 0.\";\n                                        else if(valorCampos.length < 1001)\n                                            descripcionN = \"El valor debe tener una longitud menor a 1001.\";\n                                        this.setState({\n                                            errorCreacionRegla: {campo: campo, descripcion: descripcionN, mostrar: true}\n                                        });\n                                    }\n                                } else {\n                                    let campo = \"ID de Tabla de Valor\";\n                                    let descripcionN;\n                                    if(valorLista == undefined)\n                                        descripcionN = \"Seleccione un valor para el ID de la tabla del campo de valor.\";\n                                    else if(valorLista.toString().length == 0)\n                                        descripcionN = \"El valor debe tener una longitud mayor a 0.\";\n                                    this.setState({\n                                        errorCreacionRegla: {campo: campo, descripcion: descripcionN, mostrar: true}\n                                    });\n                                }\n                            } else {\n                                let campo = \"Tipo de Operación\";\n                                let descripcionN;\n                                if(isNaN(operacionTipo))\n                                    descripcionN = \"El tipo de operación no puede ser un número.\";\n                                else\n                                    descripcionN = \"El tipo de operación debe tener una longitud mayor a 0.\";\n                                this.setState({\n                                    errorCreacionRegla: {campo: campo, descripcion: descripcionN, mostrar: true}\n                                });\n                            }\n                        } else {\n                            let campo = \"Operación\";\n                            let descripcionN;\n                            if(operacion == undefined)\n                                descripcionN = \"Seleccione un valor de operación.\";\n                            else if(isNaN(operacion))\n                                descripcionN = \"La operación no puede ser un número.\";\n                            else\n                                descripcionN = \"La operación debe tener una longitud mayor a 0.\";\n                            this.setState({\n                                errorCreacionRegla: {campo: campo, descripcion: descripcionN, mostrar: true}\n                            });\n                        }\n                    } else {\n                        let campo = \"Tipo de Campo\";\n                        let descripcionN = \"El ID del campo debe ser un valor numérico.\";\n                        this.setState({\n                            errorCreacionRegla: {campo: campo, descripcion: descripcionN, mostrar: true}\n                        });\n                    }\n                } else {\n                    let campo = \"ID de Campo de Campo\";\n                    let descripcionN;\n                    if(campoID.toString().length == 0)\n                        descripcionN = \"El ID de campo debe tener una longitud mayor a 0.\";\n                    else if(isNaN(campoID))\n                        descripcionN = \"El ID de campo debe ser un valor numérico.\";\n                    this.setState({\n                        errorCreacionRegla: {campo: campo, descripcion: descripcionN, mostrar: true}\n                    });\n                }\n            } else {\n                let campo = \"ID de Tabla de Campo\";\n                let descripcionN;\n                if(campoTablaID.toString().length == 0)\n                    descripcionN = \"El ID de tabla de campo debe tener una longitud mayor a 0.\";\n                else if(isNaN(campoTablaID))\n                    descripcionN = \"El ID de tabla de campo debe ser un valor numérico.\";\n                this.setState({\n                    errorCreacionRegla: {campo: campo, descripcion: descripcionN, mostrar: true}\n                });\n            }\n        } else {\n            let campo = \"ID de Tabla de Campo\";\n            let descripcionN = \"Seleccione un valor para el ID de la tabla del campo.\";\n            this.setState({\n                errorCreacionRegla: {campo: campo, descripcion: descripcionN, mostrar: true}\n            });\n        }\n    }\n\n    actualizarValor (e) {\n        var valor  = $(\"#valor\").val();\n        this.setState({\n            textoValor: valor\n        });\n    }\n\n    dismissReglaNewError() {\n        this.setState({\n            errorCreacionRegla: {campo: \"\", descripcion: \"\", mostrar: false}\n        });\n    }\n\n    showSuccesMessage(titulo, mensaje) {\n        this.setState({\n            mensajeModal: {mostrarMensaje: true, mensajeConfirmado: false, esError: false, esConfirmar: false, titulo: titulo, mensaje: mensaje}\n        });\n        let self = this;\n        setTimeout(function(){\n            self.setState({\n                mensajeModal: {mostrarMensaje: false, mensajeConfirmado: false, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\"}\n            });\n        }, 850);\n    }\n\n    dismissMessageModal() {\n        this.setState({\n            mensajeModal: {mostrarMensaje: false, mensajeConfirmado: false, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\"}\n        });\n    }\n\n    render() {\n        return (\n            <div style={{width: \"100%\"}}>\n                <h3 className={\"card-header\"}>Crear Condición / Instrucción</h3>\n                <div style={{height: \"50px\", width: \"100%\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", borderBottom: \"3px solid #d2d2e4\"}}>\n                    SI {this.state.campoSeleccionadoNombre} {this.state.textoOperacion} {this.state.textoValor}\n                </div>\n                <br/>\n                <Campo esNumero={this.esNumero}\n                    esBoolean={this.esBoolean}\n                    esFecha={this.esFecha}\n                    esTexto={this.esTexto}\n                    conexiones={this.state.conexiones}\n                    camposConexiones={this.state.camposConexiones}\n                    variables={this.state.variables}\n                    camposVariables={this.state.camposVariables}\n                    retornoSeleccionVariable={this.retornoSeleccionVariable}> </Campo>\n                <br/>\n                <Operacion esNumero={this.state.tipoCampo.esNumero}\n                    esBoolean={this.state.tipoCampo.esBoolean}\n                    esFecha={this.state.tipoCampo.esFecha}\n                    esTexto={this.state.tipoCampo.esTexto}\n                    retornoSeleccionOperacion={this.retornoSeleccionOperacion}> </Operacion>\n                <br/>\n                <Valor esNumero={this.state.tipoCampo.esNumero}\n                    esBoolean={this.state.tipoCampo.esBoolean}\n                    esFecha={this.state.tipoCampo.esFecha}\n                    esTexto={this.state.tipoCampo.esTexto}\n                    camposDropdown={this.props.camposDropdown}\n                    valoresDropdown={this.props.valoresDropdown}\n                    actualizarValor={this.actualizarValor}\n                    pool={this.props.pool}> </Valor>\n                <br/>\n                { this.state.errorCreacionRegla.mostrar ? (\n                    <ErrorMessage campo={this.state.errorCreacionRegla.campo} descripcion={this.state.errorCreacionRegla.descripcion} dismissTableError={this.dismissReglaNewError}> </ErrorMessage>\n                ) : (\n                    <span></span>\n                )}\n                { this.state.mensajeModal.mostrarMensaje ? (\n                    <MessageModal esError={this.state.mensajeModal.esError} esConfirmar={this.state.mensajeModal.esConfirmar} dismissMessage={this.dismissMessageModal} confirmFunction={this.confirmMessageModal} titulo={this.state.mensajeModal.titulo} mensaje={this.state.mensajeModal.mensaje}> </MessageModal>\n                ) : (\n                    <span></span>\n                )}\n                <div className={\"text-center\"}>\n                    <a onClick={this.props.callbackCrearRegla} className={\"btn btn-primary col-xs-6 col-6\"} style={{color: \"white\", fontSize: \"1.2em\", fontWeight: \"bold\"}}>Crear Condición / Instrucción</a>\n                </div>\n                <br/>\n            </div>\n        );\n    }\n}\n"],"file":"VariableCreation.js"}