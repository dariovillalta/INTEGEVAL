{"version":3,"sources":["components/Regla/Valor.js"],"names":["Valor","props","state","listas","variablesDeLista","updateVariableList","bind","getLists","transaction","sql","Transaction","pool","begin","err","rolledBack","on","aborted","request","Request","query","result","console","log","rollback","commit","setState","recordset","listaID","$","val","length","localeCompare","arrTemp","i","push","ID","nombre","tipo","campos","width","borderBottom","display","alignItems","justifyContent","actualizarValor","React","Component"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;IAEqBA,K;;;;;AACjB,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,EADC;AAETC,MAAAA,gBAAgB,EAAE;AAFT,KAAb;AAIA,UAAKC,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBC,IAAxB,+BAA1B;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcD,IAAd,+BAAhB;AAPe;AAQlB;;;;wCAEmB,CAChB;AACH;;;+BAEU;AAAA;;AACP,UAAME,WAAW,GAAG,IAAIC,kBAAIC,WAAR,CAAqB,KAAKT,KAAL,CAAWU,IAAhC,CAApB;AACAH,MAAAA,WAAW,CAACI,KAAZ,CAAkB,UAAAC,GAAG,EAAI;AACrB,YAAIC,UAAU,GAAG,KAAjB;AACAN,QAAAA,WAAW,CAACO,EAAZ,CAAe,UAAf,EAA2B,UAAAC,OAAO,EAAI;AAClCF,UAAAA,UAAU,GAAG,IAAb;AACH,SAFD;AAGA,YAAMG,OAAO,GAAG,IAAIR,kBAAIS,OAAR,CAAgBV,WAAhB,CAAhB;AACAS,QAAAA,OAAO,CAACE,KAAR,CAAc,sBAAd,EAAsC,UAACN,GAAD,EAAMO,MAAN,EAAiB;AACnD,cAAIP,GAAJ,EAAS;AACL,gBAAI,CAACC,UAAL,EAAiB;AACbO,cAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AACAL,cAAAA,WAAW,CAACe,QAAZ,CAAqB,UAAAV,GAAG,EAAI,CAC3B,CADD;AAEH;AACJ,WAND,MAMO;AACHL,YAAAA,WAAW,CAACgB,MAAZ,CAAmB,UAAAX,GAAG,EAAI;AACtB,cAAA,MAAI,CAACY,QAAL,CAAc;AACVtB,gBAAAA,MAAM,EAAEiB,MAAM,CAACM;AADL,eAAd;AAGH,aAJD;AAKH;AACJ,SAdD;AAeH,OArBD,EAFO,CAuBH;AACP;;;yCAEoB;AAAA;;AACjB,UAAIC,OAAO,GAAGC,CAAC,CAAC,cAAD,CAAD,CAAkBC,GAAlB,EAAd;;AACA,UAAIF,OAAO,CAACG,MAAR,GAAiB,CAArB,EAAwB;AACpB,YAAIH,OAAO,CAACI,aAAR,CAAsB,OAAtB,KAAkC,CAAtC,EAAyC;AACrCV,UAAAA,OAAO,CAACC,GAAR,CAAYK,OAAZ;AACA,cAAMnB,WAAW,GAAG,IAAIC,kBAAIC,WAAR,CAAqB,KAAKT,KAAL,CAAWU,IAAhC,CAApB;AACAH,UAAAA,WAAW,CAACI,KAAZ,CAAkB,UAAAC,GAAG,EAAI;AACrB,gBAAIC,UAAU,GAAG,KAAjB;AACAN,YAAAA,WAAW,CAACO,EAAZ,CAAe,UAAf,EAA2B,UAAAC,OAAO,EAAI;AAClCF,cAAAA,UAAU,GAAG,IAAb;AACH,aAFD;AAGA,gBAAMG,OAAO,GAAG,IAAIR,kBAAIS,OAAR,CAAgBV,WAAhB,CAAhB;AACAS,YAAAA,OAAO,CAACE,KAAR,CAAc,oDAAkDQ,OAAhE,EAAyE,UAACd,GAAD,EAAMO,MAAN,EAAiB;AACtF,kBAAIP,GAAJ,EAAS;AACL,oBAAI,CAACC,UAAL,EAAiB;AACbO,kBAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AACAL,kBAAAA,WAAW,CAACe,QAAZ,CAAqB,UAAAV,GAAG,EAAI,CAC3B,CADD;AAEH;AACJ,eAND,MAMO;AACHL,gBAAAA,WAAW,CAACgB,MAAZ,CAAmB,UAAAX,GAAG,EAAI;AACtB,sBAAImB,OAAO,GAAG,EAAd;;AACA,uBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,MAAM,CAACM,SAAP,CAAiBI,MAArC,EAA6CG,CAAC,EAA9C,EAAkD;AAC9CD,oBAAAA,OAAO,CAACE,IAAR,CAAa;AAACC,sBAAAA,EAAE,EAAEf,MAAM,CAACM,SAAP,CAAiBO,CAAjB,EAAoBE,EAAzB;AAA6BC,sBAAAA,MAAM,EAAEhB,MAAM,CAACM,SAAP,CAAiBO,CAAjB,EAAoBG,MAAzD;AAAiEC,sBAAAA,IAAI,EAAEjB,MAAM,CAACM,SAAP,CAAiBO,CAAjB,EAAoBI;AAA3F,qBAAb;AACH;;AAAA;;AACD,kBAAA,MAAI,CAACZ,QAAL,CAAc;AACVrB,oBAAAA,gBAAgB,EAAE4B;AADR,mBAAd;;AAGAX,kBAAAA,OAAO,CAACC,GAAR,CAAYU,OAAZ;AACH,iBATD;AAUH;AACJ,aAnBD;AAoBH,WA1BD,EAHqC,CA6BjC;AACP,SA9BD,MA8BO;AACH,cAAIA,OAAO,GAAG,EAAd;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKhC,KAAL,CAAWqC,MAAX,CAAkBR,MAAtC,EAA8CG,CAAC,EAA/C,EAAmD;AAC/CD,YAAAA,OAAO,CAACE,IAAR,CAAa;AAACC,cAAAA,EAAE,EAAE,KAAKlC,KAAL,CAAWqC,MAAX,CAAkBL,CAAlB,EAAqBE,EAA1B;AAA8BC,cAAAA,MAAM,EAAE,KAAKnC,KAAL,CAAWqC,MAAX,CAAkBL,CAAlB,EAAqBG,MAA3D;AAAmEC,cAAAA,IAAI,EAAE,KAAKpC,KAAL,CAAWqC,MAAX,CAAkBL,CAAlB,EAAqBI;AAA9F,aAAb;AACH;;AAAA;AACD,eAAKZ,QAAL,CAAc;AACVrB,YAAAA,gBAAgB,EAAE4B;AADR,WAAd;AAGH;AACJ,OAxCD,MAwCO;AACH,aAAKP,QAAL,CAAc;AACVrB,UAAAA,gBAAgB,EAAE;AADR,SAAd;AAGH;AACJ;;;6BAEQ;AACL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiGA,aACI;AAAK,QAAA,SAAS,EAAE,KAAhB;AAAuB,QAAA,KAAK,EAAE;AAACmC,UAAAA,KAAK,EAAE,MAAR;AAAgBC,UAAAA,YAAY,EAAE;AAA9B;AAA9B,SACI;AAAK,QAAA,SAAS,EAAE;AAAhB,SACI;AAAO,QAAA,OAAO,EAAC,OAAf;AAAuB,QAAA,SAAS,EAAC;AAAjC,kBADJ,CADJ,EAII;AAAK,QAAA,SAAS,EAAE,sDAAhB;AAAwE,QAAA,KAAK,EAAE;AAACC,UAAAA,OAAO,EAAE,MAAV;AAAkBC,UAAAA,UAAU,EAAE,QAA9B;AAAwCC,UAAAA,cAAc,EAAE;AAAxD;AAA/E,SACI;AAAO,QAAA,OAAO,EAAE,KAAK1C,KAAL,CAAW2C,eAA3B;AAA4C,QAAA,EAAE,EAAC,OAA/C;AAAuD,QAAA,IAAI,EAAC,MAA5D;AAAmE,QAAA,SAAS,EAAC;AAA7E,QADJ,CAJJ,CADJ;AAUH;;;;EAtM8BC,kBAAMC,S","sourcesContent":["import React from 'react';\nimport sql from 'mssql';\n\nexport default class Valor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            listas: [],\n            variablesDeLista: []\n        }\n        this.updateVariableList = this.updateVariableList.bind(this);\n        this.getLists = this.getLists.bind(this);\n    }\n\n    componentDidMount() {\n        //this.getLists();\n    }\n\n    getLists() {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Listas\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        this.setState({\n                            listas: result.recordset\n                        });\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    updateVariableList() {\n        let listaID = $(\"#selectLista\").val();\n        if (listaID.length > 0) {\n            if (listaID.localeCompare(\"table\") != 0) {\n                console.log(listaID)\n                const transaction = new sql.Transaction( this.props.pool );\n                transaction.begin(err => {\n                    var rolledBack = false;\n                    transaction.on('rollback', aborted => {\n                        rolledBack = true;\n                    });\n                    const request = new sql.Request(transaction);\n                    request.query(\"select * from VariablesdeLista where listaID = \"+listaID, (err, result) => {\n                        if (err) {\n                            if (!rolledBack) {\n                                console.log(err);\n                                transaction.rollback(err => {\n                                });\n                            }\n                        } else {\n                            transaction.commit(err => {\n                                let arrTemp = [];\n                                for (var i = 0; i < result.recordset.length; i++) {\n                                    arrTemp.push({ID: result.recordset[i].ID, nombre: result.recordset[i].nombre, tipo: result.recordset[i].tipo});\n                                };\n                                this.setState({\n                                    variablesDeLista: arrTemp\n                                });\n                                console.log(arrTemp)\n                            });\n                        }\n                    });\n                }); // fin transaction\n            } else {\n                let arrTemp = [];\n                for (var i = 0; i < this.props.campos.length; i++) {\n                    arrTemp.push({ID: this.props.campos[i].ID, nombre: this.props.campos[i].nombre, tipo: this.props.campos[i].tipo});\n                };\n                this.setState({\n                    variablesDeLista: arrTemp\n                });\n            }\n        } else {\n            this.setState({\n                variablesDeLista: []\n            });\n        }\n    }\n\n    render() {\n        /*if(this.props.esNumero) {\n            return (\n                <div className={\"row\"}>\n\t            \t<div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"} style={{width: \"100%\", height: \"100%\", border: \"1px solid black\", borderRadius: \"5px\"}}>\n                        <div className={\"font-18\"} style={{width: \"100%\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n                            Seleccionar Valor a Aplicar\n                        </div>\n                        <div className={\"form-group\"}>\n                            <select id=\"selectLista\" className={\"form-control form-control-lg\"} onChange={this.updateVariableList}>\n                                <option value=\"\">Seleccione una lista...</option>\n                                {this.props.camposDropdown.map((lista, i) =>\n                                    <option value={lista.ID} key={lista.ID}>{lista.valor}</option>\n                                )}\n                            </select>\n                        </div>\n\n                        <div className={\"form-group\"}>\n                            <select id=\"camposDeLista\" className={\"form-control form-control-lg\"} multiple>\n                                {this.props.valoresDropdown.map((variable, i) => {\n                                        if (variable.tipo.indexOf(\"int\") == 0 || variable.tipo.indexOf(\"decimal\") == 0) {\n                                            return <option value={variable.ID} key={variable.ID}>{variable.valor}</option>\n                                        } else {\n                                            return null;\n                                        }\n                                    }\n                                )}\n                            </select>\n                        </div>\n\t                </div>\n\t            </div>\n            );\n        } else if(this.props.esBoolean) {\n            return (\n                <div className={\"row\"}>\n                    <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                        <div className={\"text-center\"} style={{width: \"100%\", height: \"100%\", border: \"1px solid black\", borderRadius: \"15px\", borderRadius: \"5px\"}}>\n                            <div className={\"font-18\"} style={{width: \"100%\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n                                Seleccionar Valor a Aplicar\n                            </div>\n                            <label className={\"custom-control custom-radio custom-control-inline\"}>\n                                <input type=\"radio\" name=\"radio-inline\" className={\"custom-control-input\"}/>\n                                <span className={\"custom-control-label\"}>\n                                    <img src=\"./assets/varCreation/Verdadero.png\" alt=\"\" style={{height: \"30px\", width: \"auto\"}}/>\n                                </span>\n                            </label>\n                            <label className={\"custom-control custom-radio custom-control-inline\"}>\n                                <input type=\"radio\" name=\"radio-inline\" className={\"custom-control-input\"}/>\n                                <span className={\"custom-control-label\"}>\n                                    <img src=\"./assets/varCreation/Falso.png\" alt=\"\" style={{height: \"30px\", width: \"auto\"}}/>\n                                </span>\n                            </label>\n                        </div>\n                    </div>\n                </div>\n            );\n        } else if(this.props.esFecha) {\n            return (\n                <div>\n                </div>\n            );\n        } else if(this.props.esTexto) {\n            return (\n                <div className={\"row\"}>\n                    <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"} style={{width: \"100%\", height: \"100%\", border: \"1px solid black\", borderRadius: \"5px\"}}>\n                        <div className={\"font-18\"} style={{width: \"100%\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n                            Seleccionar Valor a Aplicar\n                        </div>\n                        <div className={\"form-group\"}>\n                            <select id=\"selectLista\" className={\"form-control form-control-lg\"} onChange={this.updateVariableList}>\n                                <option value=\"\">Seleccione una lista...</option>\n                                {this.props.camposDropdown.map((lista, i) =>\n                                    <option value={lista.ID} key={lista.ID}>{lista.valor}</option>\n                                )}\n                            </select>\n                        </div>\n\n                        <div className={\"form-group\"}>\n                            <select id=\"camposDeLista\" className={\"form-control form-control-lg\"} multiple>\n                                {this.props.valoresDropdown.map((variable, i) => {\n                                        if (variable.tipo.indexOf(\"varchar\") == 0) {\n                                            return <option value={variable.ID} key={variable.ID}>{variable.valor}</option>\n                                        } else {\n                                            return null;\n                                        }\n                                    }\n                                )}\n                            </select>\n                        </div>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                </div>\n            );\n        }*/\n        return (\n            <div className={\"row\"} style={{width: \"100%\", borderBottom: \"3px solid #d2d2e4\"}}>\n                <div className={\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3 form-group\"}>\n                    <label htmlFor=\"valor\" className=\"col-form-label\">Valor:</label>\n                </div>\n                <div className={\"col-xl-9 col-lg-9 col-md-9 col-sm-9 col-9 form-group\"} style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n                    <input onKeyUp={this.props.actualizarValor} id=\"valor\" type=\"text\" className=\"form-control form-control-sm\"/>\n                </div>\n            </div>\n        );\n    }\n}\n"],"file":"Valor.js"}