{"version":3,"sources":["components/Regla/ReglaTexto.js"],"names":["ReglaTexto","props","state","texto","formatRuleField","bind","formatRuleValue","checkIsFieldOrValue","onRef","undefined","esCampo","transaction","sql","Transaction","pool","begin","err","rolledBack","on","aborted","request","Request","query","regla","campoCampoID","result","console","log","rollback","setState","commit","recordset","nombre","arregloDeCampos","valor","split","esListaValor","id","parseInt","i","length","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport sql from 'mssql';\n\nexport default class ReglaTexto extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            texto: ''\n        }\n        this.formatRuleField = this.formatRuleField.bind(this);\n        this.formatRuleValue = this.formatRuleValue.bind(this);\n        this.checkIsFieldOrValue = this.checkIsFieldOrValue.bind(this);\n    }\n\n    componentDidMount() {\n        this.checkIsFieldOrValue();\n        this.props.onRef(this);\n    }\n\n    componentWillUnmount() {\n        this.props.onRef(undefined);\n    }\n\n    checkIsFieldOrValue() {\n        if(this.props.esCampo){\n            this.formatRuleField();\n        } else {\n            this.formatRuleValue();\n        }\n    }\n\n    formatRuleField() {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select nombre from Campos where ID = \"+this.props.regla.campoCampoID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                        this.setState({\n                            texto: ''\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        if(this.props.regla.campoCampoID != -1) {\n                            this.setState({\n                                texto: result.recordset[0].nombre\n                            });\n                        } else if(this.props.regla.campoCampoID == -1) {\n                            this.setState({\n                                texto: \"Mora\"\n                            });\n                        }\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    formatRuleValue() {\n        let arregloDeCampos = this.props.regla.valor.split(\",\");\n        if(this.props.regla.esListaValor) {\n            for (var i = 0; i < arregloDeCampos.length; i++) {\n                let id = parseInt(arregloDeCampos[i]);\n                const transaction = new sql.Transaction( this.props.pool );\n                transaction.begin(err => {\n                    var rolledBack = false;\n                    transaction.on('rollback', aborted => {\n                        rolledBack = true;\n                    });\n                    const request = new sql.Request(transaction);\n                    request.query(\"select nombre from VariablesdeLista where ID = \"+id, (err, result) => {\n                        if (err) {\n                            if (!rolledBack) {\n                                console.log(err);\n                                transaction.rollback(err => {\n                                });\n                                this.setState({\n                                    texto: ''\n                                });\n                            }\n                        } else {\n                            transaction.commit(err => {\n                                console.log(result.recordset[0].nombre);\n                                this.setState({\n                                    texto: result.recordset[0].nombre\n                                });\n                            });\n                        }\n                    });\n                }); // fin transaction\n            };\n        } else {\n            for (let i = 0; i < arregloDeCampos.length; i++) {\n                let id = parseInt(arregloDeCampos[i]);\n                const transaction = new sql.Transaction( this.props.pool );\n                transaction.begin(err => {\n                    var rolledBack = false;\n                    transaction.on('rollback', aborted => {\n                        rolledBack = true;\n                    });\n                    const request = new sql.Request(transaction);\n                    request.query(\"select nombre from Campos where ID = \"+id, (err, result) => {\n                        if (err) {\n                            if (!rolledBack) {\n                                console.log(err);\n                                transaction.rollback(err => {\n                                });\n                                this.setState({\n                                    texto: ''\n                                });\n                            }\n                        } else {\n                            transaction.commit(err => {\n                                let texto = this.state.texto;\n                                if(i > 0)\n                                    texto += \", \" + result.recordset[0].nombre;\n                                else\n                                    texto = result.recordset[0].nombre;\n                                this.setState({\n                                    texto: texto\n                                });\n                            });\n                        }\n                    });\n                }); // fin transaction\n            }\n        }\n    }\n\n    render() {\n        return (\n            <span>\n                {this.state.texto}\n            </span>\n        );\n    }\n}\n"],"file":"ReglaTexto.js"}