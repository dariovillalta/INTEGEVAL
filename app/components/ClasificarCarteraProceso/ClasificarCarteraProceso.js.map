{"version":3,"sources":["components/ClasificarCarteraProceso/ClasificarCarteraProceso.js"],"names":["myWorker","Worker","tamanoFinalBandera","tamanoActualBandera","camposGuardar","arregloCamposTablasSeleccionadas","procesosACalcular","capacidadDeudor","diasMora","disponibilidadGarantias","entornoEconomico","tiposCredito","categoriasClasificacion","criteriosDeterioro","guardarTipoCredito","guardarCategoriaClasificacion","guardarMora","guardarCriterioDeterioro","comportamientoPagoSeleccionados","tiposCreditosSeleccionados","categoriasClasificacionSeleccionados","comportamientoPagoBanderas","tiposCreditosBanderas","categoriasClasificacionBanderas","guardarUnicaVez","fechaGlobal","ClasificarCarteraProceso","props","state","widthActual","tablasOrginales","tablasSeleccionadas","opcionesTablasSeleccionadas","comportamientoPagoOriginales","tiposCreditosOriginales","categoriasClasificacionOriginales","criteriosDeterioroOriginales","mensajeModal","mostrarMensaje","mensajeConfirmado","esError","esConfirmar","titulo","mensaje","banderaMetodoInit","idElementoSelec","indiceX","loadTables","bind","selectTable","iniciarCalculoMora","iniciarTipoDeCreditos","iniciarCategoriasClasificacion","iniciarCriteriosDeterioro","tablasGuardarCampos","verificarGuardarCampos","verificarSeleccionoTablas","creandoArreglos","fetchDataComportamientoPago","getPrestamoTablaComportamientoPago","getPrestamoCamposDeTablaComportamientoPago","getPlanPagoTablaComportamientoPago","getPlanPagoCamposDeTablaComportamientoPago","initWebWorkerComportamientoPago","propiedadDeObjetoExisteEnTablaCampos","verificarProcesosAClasificar","obtenerTipoCreditoReglas","obtenerTipoCredito","fetchDataTipoCredito","fetchDataReglasTipoCreditoCampos","fetchDataCamposReglasTipoCreditoCampos","verificarCamposReglasTipoCreditoCampos","fetchDataValoresReglasTipoCreditoCampos","verificarValoresReglasTipoCreditoCampos","verifyTypeCreditFinal","checkFinishMethods","fetchDataCategoriaClasificacion","verifyClasificationCategoryFinal","fetchDataReglasCategoriaClasificacionCampos","verificarCamposReglasCategoriaClasificacionCampos","fetchDataCamposReglasCategoriaClasificacionCampos","fetchDataValoresReglasCategoriaClasificacionCampos","verifyDeteriorationCriteriaFinal","getFieldsToSave","startSavingObjects","saveObjectID","saveObjectIntField","saveObjectDecimalField","saveObjectDateField","saveObjecBoolField","saveObjectStringField","getCriterioDeterioro","formatDateCreation","obtenerCategoriaClasificacionReglas","obtenerCategoriaClasificacion","actualizarSeleccionarComportamientoPago","actualizarSeleccionarTiposCredito","actualizarSeleccionarCategoriasClasificacion","obtenerCriterioDeterioro","clean","dismissMessageModal","showSuccesMessage","saveBitacora","transaction","sql","Transaction","pool","begin","err","rolledBack","on","aborted","request","Request","query","result","console","log","rollback","commit","i","recordset","length","active","setState","index","existeTablaEnConf","ID","tablasSelCopiaTemp","push","splice","nombre","prestamoTablaID","nombreTabla","banderaGuardarResultadosTamActual","tablaID","idTipoTabla","$","is","showLoadingScreen","alert","transaction5","Date","fecha","getFullYear","getMonth","getDate","setDate","posicionArregloTablasSel","usuario","password","contrasena","servidor","basedatos","baseDatos","tabla","ConnectionPool","user","server","database","stream","connectionTimeout","requestTimeout","max","min","idleTimeoutMillis","options","useUTC","connect","undefined","valoresTabla","identificadorCliente","filter","object","funcion","localeCompare","identificadorPrestamo","camposAGuardarCliente","camposAGuardarPrestamo","tipo","concat","self","onmessage","e","data","ComportamientoPago","getFieldsFromCamposTable","camposDePrestamoTabla","valoresDeTablaPrestamo","planPagoTablaID","getPlanPagosCamposDeTablaComportamientoPago","camposDePlanPagoTabla","valoresDeTablaPlanPago","prestamoTabla","getFieldsComportamientoPago","idClientePrestamoCampoID","idClientePlanPagoCampoID","numeroPrestamoCampoID","numeroPlanPagoCampoID","pagoCapitalPrestamoCampoID","pagoCapitalPlanPagoCampoID","pagoImpuestosPrestamoCampoID","pagoImpuestosPlanPagoCampoID","fechaPrestamoCampoID","fechaPlanPagoCampoID","iniciarProceso","finTodasLlamadas","banderaMetodoLlamado","callbackParam","camposTabla","key","arregloReglasTipoCreditos","tipoCredito","arregloTipoCreditos","j","regla","campoCampoID","campoValor","idsValores","valor","split","k","esListaValor","id","esLista","valorValores","tieneTodosLosCampos","tieneTodosLosValores","verificarValoresReglasCategoriaClasificacionCampos","calcular","setTimeout","arregloDeCamposAGuardar","camposDeCliente","camposDePrestamo","clientes","prestamos","bitacora","objeto","nombreTablaOrigenTipo","categoriaClasificacion","nombreMesPlan","valorMesPlan","mesDelPlan","nombreDiasMora","valorDiasMora","nombreCapitalPagado","valorCapitalPagado","t0talC4pitalPagado","nombreCapitalDeberiaPagado","valorCapitalDeberiaPagado","t0talC4pitalD3beriaPagado","nombreImpuestosPagado","valorImpuestosPagado","t0tal1mpu3stosPagado","nombreImpuestosDeberiaPagado","valorImpuestosDeberiaPagado","t0tal1mpu3stosD3beriaPagado","nombreEstimacionDeterioro","valorEstimacionDeterioro","estimacionDeterioro","nombreCapitalMinimo","valorCapitalMinimo","hideLoadingScreen","identificador","idPadre","idObjeto","operacion","arreglo","identificadorCampoNombre","Object","keys","forEach","verifyResultID","verifyResultField","date","monthNames","day","monthIndex","year","height","width","display","alignItems","justifyContent","overflowX","overflowY","whiteSpace","borderRadius","padding","border","position","backgroundColor","top","left","transform","borderBottom","textAlign","verticalAlign","map","comportamientoPago","borderTop","categoria","criterioDeterioro","borderLeft","fontFamily","color","cursor","nombreClasPadre","fontSize","fontWeight","confirmMessageModal","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport sql from 'mssql';\n\nimport SeleccionarTablaClasificarCarteraProceso from './SeleccionarTablaClasificarCarteraProceso.js';\nimport ConfiguracionTablasClasificar from './ConfiguracionTablasClasificar.js';\nimport OpcionTablasClasificar from './OpcionTablasClasificar.js';\nimport MessageModal from '../MessageModal.js';\n\nimport {constructor, retornarClientes, retornarPrestamos, retornarCapitalMinimo, retornarBitacora} from \"../ClasificarCreditoD.js\";\n\nconst myWorker = new Worker(\"./components/ClasificarCredito.js\");\n\n//import \"../../libs/moment/min/moment.min.js\";\n\nvar tamanoFinalBandera = 0, tamanoActualBandera = 0, camposGuardar, arregloCamposTablasSeleccionadas = [];\nvar procesosACalcular = {capacidadDeudor: false, diasMora: false, disponibilidadGarantias: false, entornoEconomico: false, tiposCredito: false, categoriasClasificacion: false, criteriosDeterioro: false};\nvar guardarTipoCredito = false, guardarCategoriaClasificacion = false, guardarMora = false, guardarCriterioDeterioro = false;\nvar comportamientoPagoSeleccionados = [], tiposCreditosSeleccionados = [], categoriasClasificacionSeleccionados = [];\nvar comportamientoPagoBanderas = [], tiposCreditosBanderas = [], categoriasClasificacionBanderas = [];\nvar guardarUnicaVez = false;\n\nvar fechaGlobal;\n\nexport default class ClasificarCarteraProceso extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            widthActual: \"33%\",\n            tablasOrginales: [],\n            tablasSeleccionadas: [],\n            opcionesTablasSeleccionadas: [],\n            comportamientoPagoOriginales: [],\n            tiposCreditosOriginales: [],\n            categoriasClasificacionOriginales: [],\n            criteriosDeterioroOriginales: [],\n            mensajeModal: {mostrarMensaje: false, mensajeConfirmado: false, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: -1, indiceX: -1}\n        }\n        this.loadTables = this.loadTables.bind(this);\n        this.selectTable = this.selectTable.bind(this);\n        this.iniciarCalculoMora = this.iniciarCalculoMora.bind(this);\n        this.iniciarTipoDeCreditos = this.iniciarTipoDeCreditos.bind(this);\n        this.iniciarCategoriasClasificacion = this.iniciarCategoriasClasificacion.bind(this);\n        this.iniciarCriteriosDeterioro = this.iniciarCriteriosDeterioro.bind(this);\n        this.tablasGuardarCampos = this.tablasGuardarCampos.bind(this);\n        this.verificarGuardarCampos = this.verificarGuardarCampos.bind(this);\n        this.verificarSeleccionoTablas = this.verificarSeleccionoTablas.bind(this);\n        this.creandoArreglos = this.creandoArreglos.bind(this);\n        this.fetchDataComportamientoPago = this.fetchDataComportamientoPago.bind(this);\n        this.getPrestamoTablaComportamientoPago = this.getPrestamoTablaComportamientoPago.bind(this);\n        this.getPrestamoCamposDeTablaComportamientoPago = this.getPrestamoCamposDeTablaComportamientoPago.bind(this);\n        this.getPlanPagoTablaComportamientoPago = this.getPlanPagoTablaComportamientoPago.bind(this);\n        this.getPlanPagoCamposDeTablaComportamientoPago = this.getPlanPagoCamposDeTablaComportamientoPago.bind(this);\n        this.initWebWorkerComportamientoPago = this.initWebWorkerComportamientoPago.bind(this);\n        this.propiedadDeObjetoExisteEnTablaCampos = this.propiedadDeObjetoExisteEnTablaCampos.bind(this);\n        this.verificarProcesosAClasificar = this.verificarProcesosAClasificar.bind(this);\n        this.obtenerTipoCreditoReglas = this.obtenerTipoCreditoReglas.bind(this);\n        this.obtenerTipoCredito = this.obtenerTipoCredito.bind(this);\n        this.fetchDataTipoCredito = this.fetchDataTipoCredito.bind(this);\n        this.fetchDataReglasTipoCreditoCampos = this.fetchDataReglasTipoCreditoCampos.bind(this);\n        this.fetchDataCamposReglasTipoCreditoCampos = this.fetchDataCamposReglasTipoCreditoCampos.bind(this);\n        this.verificarCamposReglasTipoCreditoCampos = this.verificarCamposReglasTipoCreditoCampos.bind(this);\n        this.fetchDataValoresReglasTipoCreditoCampos = this.fetchDataValoresReglasTipoCreditoCampos.bind(this);\n        this.verificarValoresReglasTipoCreditoCampos = this.verificarValoresReglasTipoCreditoCampos.bind(this);\n        this.verifyTypeCreditFinal = this.verifyTypeCreditFinal.bind(this);\n        this.checkFinishMethods = this.checkFinishMethods.bind(this);\n        this.fetchDataCategoriaClasificacion = this.fetchDataCategoriaClasificacion.bind(this);\n        this.verifyClasificationCategoryFinal = this.verifyClasificationCategoryFinal.bind(this);\n        this.fetchDataReglasCategoriaClasificacionCampos = this.fetchDataReglasCategoriaClasificacionCampos.bind(this);\n        this.verificarCamposReglasCategoriaClasificacionCampos = this.verificarCamposReglasCategoriaClasificacionCampos.bind(this);\n        this.fetchDataCamposReglasCategoriaClasificacionCampos = this.fetchDataCamposReglasCategoriaClasificacionCampos.bind(this);\n        this.fetchDataValoresReglasCategoriaClasificacionCampos = this.fetchDataValoresReglasCategoriaClasificacionCampos.bind(this);\n        this.verifyDeteriorationCriteriaFinal = this.verifyDeteriorationCriteriaFinal.bind(this);\n        this.getFieldsToSave = this.getFieldsToSave.bind(this);\n        this.startSavingObjects = this.startSavingObjects.bind(this);\n        this.saveObjectID = this.saveObjectID.bind(this);\n        this.saveObjectIntField = this.saveObjectIntField.bind(this);\n        this.saveObjectDecimalField = this.saveObjectDecimalField.bind(this);\n        this.saveObjectDateField = this.saveObjectDateField.bind(this);\n        this.saveObjecBoolField = this.saveObjecBoolField.bind(this);\n        this.saveObjectStringField = this.saveObjectStringField.bind(this);\n        this.getCriterioDeterioro = this.getCriterioDeterioro.bind(this);\n        this.formatDateCreation = this.formatDateCreation.bind(this);\n        this.obtenerCategoriaClasificacionReglas = this.obtenerCategoriaClasificacionReglas.bind(this);\n        this.obtenerCategoriaClasificacion = this.obtenerCategoriaClasificacion.bind(this);\n        this.actualizarSeleccionarComportamientoPago = this.actualizarSeleccionarComportamientoPago.bind(this);\n        this.actualizarSeleccionarTiposCredito = this.actualizarSeleccionarTiposCredito.bind(this);\n        this.actualizarSeleccionarCategoriasClasificacion = this.actualizarSeleccionarCategoriasClasificacion.bind(this);\n        this.obtenerCriterioDeterioro = this.obtenerCriterioDeterioro.bind(this);\n        this.clean = this.clean.bind(this);\n        this.dismissMessageModal = this.dismissMessageModal.bind(this);\n        this.showSuccesMessage = this.showSuccesMessage.bind(this);\n        this.saveBitacora = this.saveBitacora.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadTables();\n        this.obtenerCriterioDeterioro();\n        //myWorker.postMessage([\"comportamientoPago\", sql]);\n        /*myWorker.onmessage = function (event) {\n            console.log('EN MAIN JS');\n            console.log(event.data);\n        };*/\n    }\n\n    loadTables() {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Tablas\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            result.recordset[i].active = true;\n                        };\n                        this.setState(\n                            {\n                                tablasOrginales: result.recordset,\n                                tablasSeleccionadas: result.recordset\n                            },\n                            this.verificarProcesosAClasificar\n                        );\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    selectTable(index) {\n        let existeTablaEnConf = false;\n        this.state.tablasOrginales[index].active = !this.state.tablasOrginales[index].active;\n        this.setState({\n            tablasOrginales: this.state.tablasOrginales\n        });\n        var i = 0;\n        for (i = 0; i < this.state.tablasSeleccionadas.length; i++) {\n            if(this.state.tablasOrginales[index].ID == this.state.tablasSeleccionadas[i].ID) {\n                existeTablaEnConf = true;\n                break;\n            }\n        };\n        if(!existeTablaEnConf) {\n            let tablasSelCopiaTemp = [...this.state.tablasSeleccionadas];\n            tablasSelCopiaTemp.push(this.state.tablasOrginales[index]);\n            this.setState(\n                {\n                    tablasSeleccionadas: tablasSelCopiaTemp\n                },\n                this.verificarProcesosAClasificar\n            );\n            /*if(tablasSelCopiaTemp.length == 1) {\n                this.setState({\n                    widthActual: \"100%\"\n                });\n            } else if(tablasSelCopiaTemp.length == 2) {\n                this.setState({\n                    widthActual: \"50%\"\n                });\n            } else {\n                this.setState({\n                    widthActual: \"33%\"\n                });\n            }*/\n            //this.verificarProcesosAClasificar();\n        } else {\n            let tablasSelCopiaTemp = [...this.state.tablasSeleccionadas];\n            tablasSelCopiaTemp.splice(i, 1);\n            this.setState(\n                {\n                    tablasSeleccionadas: tablasSelCopiaTemp\n                },\n                this.verificarProcesosAClasificar\n            );\n            //this.verificarProcesosAClasificar();\n        }\n    }\n\n    //metodo para agregar tipo de credito, tipo de cliente, criterios de clasificacion por tabla\n    verificarProcesosAClasificar(index) {\n        comportamientoPagoSeleccionados = [];\n        tiposCreditosSeleccionados = [];\n        categoriasClasificacionSeleccionados = [];\n        for (var i = 0; i < this.state.tablasSeleccionadas.length; i++) {\n            this.fetchDataComportamientoPago(this.state.tablasSeleccionadas[i].ID, this.state.tablasSeleccionadas[i].nombre);\n            this.obtenerTipoCreditoReglas(this.state.tablasSeleccionadas[i].ID);\n            this.obtenerCategoriaClasificacionReglas(this.state.tablasSeleccionadas[i].ID);\n        };\n        /*console.log('this.state.tablasSeleccionadas');\n        console.log(this.state.tablasSeleccionadas);\n        console.log('this.state.comportamientoPagoOriginales');\n        console.log(this.state.comportamientoPagoOriginales);\n        console.log('comportamientoPagoSeleccionados');\n        console.log(comportamientoPagoSeleccionados);\n        console.log('this.state.tiposCreditosOriginales');\n        console.log(this.state.tiposCreditosOriginales);\n        console.log('tiposCreditosSeleccionados');\n        console.log(tiposCreditosSeleccionados);\n        console.log('this.state.categoriasClasificacionOriginales');\n        console.log(this.state.categoriasClasificacionOriginales);\n        console.log('categoriasClasificacionSeleccionados');\n        console.log(categoriasClasificacionSeleccionados);\n        console.log('//////////////////////////');\n        var self = this;\n        setTimeout(function(){\n            console.log('comportamientoPagoSeleccionados');\n            console.log(comportamientoPagoSeleccionados);\n            console.log('this.state.comportamientoPagoOriginales');\n            console.log(self.state.comportamientoPagoOriginales);\n            console.log('tiposCreditosSeleccionados');\n            console.log(tiposCreditosSeleccionados);\n            console.log('this.state.tiposCreditosOriginales');\n            console.log(self.state.tiposCreditosOriginales);\n            console.log('categoriasClasificacionSeleccionados');\n            console.log(categoriasClasificacionSeleccionados);\n            console.log('this.state.categoriasClasificacionOriginales');\n            console.log(self.state.categoriasClasificacionOriginales);\n            console.log('$$$$$$$$$$$$$$$$$$$$$$$$$$$');\n        }, 3000);*/\n    }\n\n    fetchDataComportamientoPago (prestamoTablaID, nombreTabla) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from ComportamientoPago where prestamoTablaID = \"+prestamoTablaID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        banderaGuardarResultadosTamActual++;\n                        this.initWebWorkerComportamientoPago(null, null, null, null, null, null, false);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            result.recordset[i].nombreTabla = nombreTabla;\n                        };\n                        comportamientoPagoSeleccionados = [ ...comportamientoPagoSeleccionados, ...result.recordset];\n                        this.setState({\n                            comportamientoPagoOriginales: comportamientoPagoSeleccionados\n                        });\n                        //arreglo = arreglo.concat(result.recordset);\n                        //arreglo = [].concat(result.recordset, arreglo);\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    obtenerTipoCreditoReglas(tablaID) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select DISTINCT idTipoTabla from Reglas where campoTablaID = \"+tablaID+\" and nombreTablaRes = 'TipoCredito'\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        if(result.recordset.length > 0) {\n                            for (var i = 0; i < result.recordset.length; i++) {\n                                this.obtenerTipoCredito(result.recordset[i].idTipoTabla);\n                            };\n                        } else {\n                            this.setState({\n                                tiposCreditosOriginales: tiposCreditosSeleccionados\n                            });\n                        }\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    obtenerTipoCredito (ID) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from TipoCredito where ID = \"+ID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        tiposCreditosSeleccionados = [ ...tiposCreditosSeleccionados, ...result.recordset];\n                        this.setState({\n                            tiposCreditosOriginales: tiposCreditosSeleccionados\n                        });\n                        //arreglo = arreglo.concat(result.recordset);\n                        //arreglo = [].concat(result.recordset, arreglo);\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    obtenerCategoriaClasificacionReglas(tablaID) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select DISTINCT idTipoTabla from Reglas where campoTablaID = \"+tablaID+\" and nombreTablaRes = 'CategoriaClasificacion'\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        if(result.recordset.length > 0) {\n                            for (var i = 0; i < result.recordset.length; i++) {\n                                this.obtenerCategoriaClasificacion(result.recordset[i].idTipoTabla);\n                            };\n                        } else {\n                            this.setState({\n                                categoriasClasificacionOriginales: categoriasClasificacionSeleccionados\n                            });\n                        }\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    obtenerCategoriaClasificacion (ID) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from CategoriaClasificacion where ID = \"+ID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        categoriasClasificacionSeleccionados = [ ...categoriasClasificacionSeleccionados, ...result.recordset];\n                        this.setState({\n                            categoriasClasificacionOriginales: categoriasClasificacionSeleccionados\n                        });\n                        //arreglo = arreglo.concat(result.recordset);\n                        //arreglo = [].concat(result.recordset, arreglo);\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    obtenerCriterioDeterioro () {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from CriterioDeterioro \", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        this.setState({\n                            criteriosDeterioroOriginales: result.recordset\n                        });\n                        //arreglo = arreglo.concat(result.recordset);\n                        //arreglo = [].concat(result.recordset, arreglo);\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    actualizarSeleccionarComportamientoPago() {\n        comportamientoPagoSeleccionados = [];\n        for (var i = 0; i < this.state.comportamientoPagoOriginales.length; i++) {\n            if($(\"#comportamientoPago\"+this.state.comportamientoPagoOriginales[i].ID).is(':checked')) {\n                comportamientoPagoSeleccionados.push(this.state.comportamientoPagoOriginales[i]);\n            }\n        };\n        \n        console.log('comportamientoPagoSeleccionados');\n        console.log(comportamientoPagoSeleccionados);\n    }\n\n    actualizarSeleccionarTiposCredito() {\n        tiposCreditosSeleccionados = [];\n        for (var i = 0; i < this.state.tiposCreditosOriginales.length; i++) {\n            if($(\"#tiposCredito\"+this.state.tiposCreditosOriginales[i].ID).is(':checked')) {\n                tiposCreditosSeleccionados.push(this.state.tiposCreditosOriginales[i]);\n            }\n        };\n        \n        console.log('tiposCreditosSeleccionados');\n        console.log(tiposCreditosSeleccionados);\n    }\n\n    actualizarSeleccionarCategoriasClasificacion () {\n        categoriasClasificacionSeleccionados = [];\n        for (var i = 0; i < this.state.categoriasClasificacionOriginales.length; i++) {\n            if($(\"#categoriasClasificacion\"+this.state.categoriasClasificacionOriginales[i].ID).is(':checked')) {\n                categoriasClasificacionSeleccionados.push(this.state.categoriasClasificacionOriginales[i]);\n            }\n        };\n        \n        console.log('categoriasClasificacionSeleccionados');\n        console.log(categoriasClasificacionSeleccionados);\n    }\n\n    verificarSeleccionoTablas() {\n        if(this.state.tablasSeleccionadas.length > 0) {\n            this.clean();\n            this.creandoArreglos();\n            this.props.showLoadingScreen();\n        } else {\n            alert(\"Seleccione por lo menos una tabla\");\n        }\n    }\n\n    creandoArreglos() {\n        camposGuardar = [];\n        tamanoFinalBandera = this.state.tablasOrginales.length, tamanoActualBandera = 0;\n        for (var i = 0; i < this.state.tablasOrginales.length; i++) {\n            this.tablasGuardarCampos(this.state.tablasOrginales[i].ID, i);\n        };\n\n        /*for (var i = 0; i < this.state.tablasSeleccionadas.length; i++) {\n            //this.state.tablasSeleccionadas[i]\n            var calcularComportamientoPago = false;\n            var primeraVezEntra = true; //agregar valores de tabla a arreglo global de clientes, prestamos y pagos en ClasificarCartera.js\n            if($(\"#ComportamientoPago\"+i).prop('checked') == true)\n                calcularComportamientoPago = true;\n\n            if(calcularComportamientoPago) {\n                this.fetchDataComportamientoPago(this.state.tablasSeleccionadas[i].ID);\n                if(primeraVezEntra) {\n                    primeraVezEntra = false;\n                }\n            }\n            this.fetchDataTipoCredito(this.state.tablasSeleccionadas[i].ID);\n        };*/\n    }\n\n    clean() {\n        const transaction5 = new sql.Transaction( this.props.pool );\n        transaction5.begin(err => {\n            var rolledBack = false;\n            transaction5.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction5);\n            request.query(\"select MAX(fecha) AS 'fecha' from ResultadosString\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction5.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction5.commit(err => {\n                        fechaGlobal = new Date (result.recordset[0].fecha.getFullYear(), result.recordset[0].fecha.getMonth(), result.recordset[0].fecha.getDate());\n                        console.log('fechaGlobal antes');\n                        console.log(fechaGlobal.getDate());\n                        fechaGlobal.setDate(fechaGlobal.getDate() + 1);\n                        console.log('fechaGlobal despues');\n                        console.log(fechaGlobal.getDate());\n                        console.log('fechaGlobal');\n                        console.log(fechaGlobal);\n                        console.log('result.recordset');\n                        console.log(result.recordset);\n                    });\n                }\n            });\n        });\n        /*const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"delete from ResultadosID\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                    });\n                }\n            });\n        }); // fin transaction\n\n        const transaction1 = new sql.Transaction( this.props.pool );\n        transaction1.begin(err => {\n            var rolledBack = false;\n            transaction1.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction1);\n            request.query(\"delete from ResultadosInt\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction1.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction1.commit(err => {\n                    });\n                }\n            });\n        }); // fin transaction\n\n        const transaction2 = new sql.Transaction( this.props.pool );\n        transaction2.begin(err => {\n            var rolledBack = false;\n            transaction2.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction2);\n            request.query(\"delete from ResultadosDecimal\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction2.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction2.commit(err => {\n                    });\n                }\n            });\n        }); // fin transaction\n\n        const transaction3 = new sql.Transaction( this.props.pool );\n        transaction3.begin(err => {\n            var rolledBack = false;\n            transaction3.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction3);\n            request.query(\"delete from ResultadosDate\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction3.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction3.commit(err => {\n                    });\n                }\n            });\n        }); // fin transaction\n\n        const transaction4 = new sql.Transaction( this.props.pool );\n        transaction4.begin(err => {\n            var rolledBack = false;\n            transaction4.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction4);\n            request.query(\"delete from ResultadosBool\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction4.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction4.commit(err => {\n                    });\n                }\n            });\n        }); // fin transaction\n\n        const transaction5 = new sql.Transaction( this.props.pool );\n        transaction5.begin(err => {\n            var rolledBack = false;\n            transaction5.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction5);\n            request.query(\"delete from ResultadosString\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction5.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction5.commit(err => {\n                    });\n                }\n            });\n        });*/ // fin transaction\n    }\n\n\n\n    /*      \n        *****   *****   *****       *****   *****   *****   *****\n                        INICIAR ARREGLOS\n        *****   *****   *****       *****   *****   *****   *****\n    */\n\n    tablasGuardarCampos (tablaID, posicionArregloTablasSel) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Tablas where ID = \"+tablaID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        var usuario = result.recordset[0].usuario;\n                        var password = result.recordset[0].contrasena;\n                        var servidor = result.recordset[0].servidor;\n                        var basedatos = result.recordset[0].baseDatos;\n                        var tabla = result.recordset[0].tabla;\n\n                        /*              CONSIGUIENDO VALORES DE TABLA         */\n                        const pool = new sql.ConnectionPool({\n                            user: usuario,\n                            password: password,\n                            server: servidor,\n                            database: basedatos,\n                            stream: true,\n                            connectionTimeout: 900000,\n                            requestTimeout: 900000,\n                            pool: {\n                                max: 40,\n                                min: 0,\n                                idleTimeoutMillis: 30000\n                            },\n                            options: {\n                                useUTC: false\n                            }\n                        });\n                        pool.connect(err => {\n                            pool.request() // or: new sql.Request(pool1)\n                            .query(\"select * from \"+tabla, (err, result) => {\n                                if(result != undefined) {\n                                    if(result.recordset.length > 0) {\n                                        this.verificarGuardarCampos(tablaID, result.recordset, posicionArregloTablasSel);\n                                    } else {\n                                        alert('Tabla ID: '+tablaID+' no tiene valores.')\n                                    }\n                                } else {\n                                    alert('Error en conección con Tabla ID: '+tablaID+'.')\n                                    //agregar error fallo connecion tabla (no existe o malos campos)\n                                }\n                            });\n                        }); // fin pool connect\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    verificarGuardarCampos (tablaID, valoresTabla, posicionArregloTablasSel) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Campos where tablaID = \"+tablaID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        var identificadorCliente = result.recordset.filter(function( object ) {\n                                                        return object.funcion.localeCompare(\"Identificador\") == 0 && object.tabla.localeCompare(\"Cliente\") == 0;\n                                                    });\n                        var identificadorPrestamo = result.recordset.filter(function( object ) {\n                                                        return object.funcion.localeCompare(\"Identificador\") == 0 && object.tabla.localeCompare(\"Préstamo\") == 0;\n                                                    });\n                        var camposAGuardarCliente = result.recordset.filter(function( object ) {\n                                                        return object.tabla.localeCompare(\"Cliente\") == 0;\n                                                    });\n                        var camposAGuardarPrestamo = result.recordset.filter(function( object ) {\n                                                        return object.tabla.localeCompare(\"Préstamo\") == 0;\n                                                    });\n                        arregloCamposTablasSeleccionadas.splice(posicionArregloTablasSel, 0, result.recordset);\n                        if(identificadorCliente.length == 0 && identificadorPrestamo.length == 0) {\n                            alert(\"Tiene que ingresar un campo Identificador para Cliente o para Préstamo\");\n                        } else {\n                            //viendo si se llama metodo crear arreglo para clientes y prestamos o solo uno\n                            tamanoActualBandera++;\n                            if(identificadorCliente.length > 0 && identificadorPrestamo.length > 0) {\n                                //myWorker.postMessage([\"iniciarArregloClientes\", valoresTabla, identificadorCliente[0].nombre, identificadorCliente[0].tipo, camposAGuardarCliente, false]);\n                                //myWorker.postMessage([\"iniciarArregloPrestamos\", valoresTabla, identificadorCliente[0].nombre, identificadorPrestamo[0].nombre, identificadorCliente[0].tipo, identificadorPrestamo[0].tipo, camposAGuardarPrestamo, true]);\n                                constructor([\"iniciarArregloClientes\", valoresTabla, identificadorCliente[0].nombre, identificadorCliente[0].tipo, camposAGuardarCliente, false]);\n                                constructor([\"iniciarArregloPrestamos\", valoresTabla, identificadorCliente[0].nombre, identificadorPrestamo[0].nombre, identificadorCliente[0].tipo, identificadorPrestamo[0].tipo, camposAGuardarPrestamo, true]);\n                                camposGuardar.concat(result.recordset);\n                                this.iniciarCalculoMora();\n                                let self = this;\n                                myWorker.onmessage = function(e) {\n                                    if(e.data == 'terminoCrearArreglos') {\n                                        //revisando que procedimientos llamar\n                                        self.iniciarCalculoMora();\n                                    }\n                                }\n                            } else {\n                                if(identificadorCliente.length > 0) {\n                                    //myWorker.postMessage([\"iniciarArregloClientes\", valoresTabla, identificadorCliente[0].nombre, identificadorCliente[0].tipo, camposAGuardarCliente, true]);\n                                    constructor([\"iniciarArregloClientes\", valoresTabla, identificadorCliente[0].nombre, identificadorCliente[0].tipo, camposAGuardarCliente, true]);\n                                    let self = this;\n                                    camposGuardar.concat(result.recordset);\n                                    this.iniciarCalculoMora();\n                                    myWorker.onmessage = function(e) {\n                                        console.log(\"llamado de vuelta\");\n                                        console.log(e);\n                                        if(e.data == 'terminoCrearArreglos') {\n                                            //revisando que procedimientos llamar\n                                            self.iniciarCalculoMora();\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    /*      \n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n                        INICIAR ARREGLOS\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n    */\n\n\n\n\n\n\n    /*      \n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n                        COMPORTAMIENTO PAGO\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n    */\n\n    iniciarCalculoMora () {\n        //como no tiene id prestamo o cliente, no se puede calcular comportamiento plan pago, agregar mensaje bitacora  // si verificarComportamientoPago == false\n        if( tamanoActualBandera == tamanoFinalBandera ) {\n            guardarUnicaVez = false;\n            guardarTipoCredito = false, guardarCategoriaClasificacion = false, guardarMora = false, guardarCriterioDeterioro = false;\n            /*for (var i = 0; i < this.state.tablasOrginales.length; i++) {\n                this.fetchDataComportamientoPago(this.state.tablasOrginales[i].ID);\n            };*/\n            //comportamientoPagoBanderas = [], tiposCreditosBanderas = [], categoriasClasificacionBanderas\n            comportamientoPagoBanderas = [];\n            for (var i = 0; i < comportamientoPagoSeleccionados.length; i++) {\n                comportamientoPagoBanderas.push(false);\n                this.getPrestamoTablaComportamientoPago(comportamientoPagoSeleccionados[i], i);\n            }\n            if(comportamientoPagoSeleccionados.length == 0) {\n                this.initWebWorkerComportamientoPago(null, null, null, null, null, null, false, null);\n            }\n        }\n    }\n\n    /*fetchDataComportamientoPago (prestamoTablaID) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from ComportamientoPago where prestamoTablaID = \"+prestamoTablaID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        banderaGuardarResultadosTamActual++;\n                        this.initWebWorkerComportamientoPago(null, null, null, null, null, null, false);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        //banderaGuardarResultadosTamFinal += result.recordset.length;\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            this.getPrestamoTablaComportamientoPago(result.recordset[i]);\n                        }\n                        if(result.recordset.length == 0) {\n                            this.initWebWorkerComportamientoPago(null, null, null, null, null, null, false);\n                        }\n                    });\n                }\n            });\n        }); // fin transaction\n    }*/\n\n    getPrestamoTablaComportamientoPago(ComportamientoPago, index) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Tablas where ID = \"+ComportamientoPago.prestamoTablaID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        this.initWebWorkerComportamientoPago(null, null, null, null, null, null, false, index);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        if(result.recordset.length == 0) {\n                            this.initWebWorkerComportamientoPago(null, null, null, null, null, null, false);\n                        } else {\n                            this.getPrestamoCamposDeTablaComportamientoPago(result.recordset[0], ComportamientoPago, index);\n                        }\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    getPrestamoCamposDeTablaComportamientoPago(tabla, ComportamientoPago, index) {\n        let self = this;\n        this.getFieldsFromCamposTable(tabla, ComportamientoPago, \"prestamos\", function(camposDePrestamoTabla, valoresDeTablaPrestamo, ComportamientoPago) {\n            self.getPlanPagoTablaComportamientoPago(camposDePrestamoTabla, valoresDeTablaPrestamo, ComportamientoPago, index);\n        }, index);\n    }\n\n    getPlanPagoTablaComportamientoPago(camposDePrestamoTabla, valoresDeTablaPrestamo, ComportamientoPago, index) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Tablas where ID = \"+ComportamientoPago.planPagoTablaID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        this.initWebWorkerComportamientoPago(null, null, null, null, null, null, false, index);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        if(result.recordset.length == 0) {\n                            this.initWebWorkerComportamientoPago(null, null, null, null, null, null, false, index);\n                        } else {\n                            this.getPlanPagosCamposDeTablaComportamientoPago(camposDePrestamoTabla, valoresDeTablaPrestamo, result.recordset[0], ComportamientoPago, index);\n                        }\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    getPlanPagosCamposDeTablaComportamientoPago(camposDePrestamoTabla, valoresDeTablaPrestamo, tabla, ComportamientoPago, index) {\n        guardarMora = true;\n        let self = this;\n        this.getFieldsFromCamposTable(tabla, ComportamientoPago, \"planpagos\", function(camposDePrestamoTabla, valoresDeTablaPrestamo, camposDePlanPagoTabla, valoresDeTablaPlanPago, ComportamientoPago) {\n            self.initWebWorkerComportamientoPago(camposDePrestamoTabla, valoresDeTablaPrestamo, camposDePlanPagoTabla, valoresDeTablaPlanPago, ComportamientoPago, true, index);\n        }, camposDePrestamoTabla, valoresDeTablaPrestamo, index);\n    }\n\n    getPlanPagoCamposDeTablaComportamientoPago(prestamoTabla, camposDePrestamoTabla, tabla, ComportamientoPago) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Campos where tablaID = \"+tabla.ID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        banderaGuardarResultadosTamActual++;\n                        this.initWebWorkerComportamientoPago(null, null, null, null, null, null, false, index);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n\n                        /*              CONSIGUIENDO VALORES DE TABLA DE PLAN DE PAGOS         */\n                        const pool = new sql.ConnectionPool({\n                            user: tabla.usuario,\n                            password: tabla.contrasena,\n                            server: tabla.servidor,\n                            database: tabla.baseDatos,\n                            stream: true,\n                            connectionTimeout: 900000,\n                            requestTimeout: 900000,\n                            pool: {\n                                max: 40,\n                                min: 0,\n                                idleTimeoutMillis: 30000\n                            },\n                            options: {\n                                useUTC: false\n                            }\n                        });\n                        pool.connect(err => {\n                            pool.request() // or: new sql.Request(pool1)\n                            .query(\"select * from \"+tabla.tabla, (err, result) => {\n                                this.getFieldsComportamientoPago(prestamoTabla, camposDePrestamoTabla, result.recordset, ComportamientoPago);\n                            });\n                        }); // fin pool connect\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    getFieldsComportamientoPago(camposDePrestamoTabla, valoresDeTablaPrestamo, camposDePlanPagoTabla, valoresDeTablaPlanPago, ComportamientoPago) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Campos where ID = \"+ComportamientoPago.idClientePrestamoCampoID+\" or ID = \"+ComportamientoPago.idClientePlanPagoCampoID+\" or ID = \"+ComportamientoPago.numeroPrestamoCampoID+\" or ID = \"+ComportamientoPago.numeroPlanPagoCampoID+\" or ID = \"+ComportamientoPago.pagoCapitalPrestamoCampoID+\" or ID = \"+ComportamientoPago.pagoCapitalPlanPagoCampoID+\" or ID = \"+ComportamientoPago.pagoImpuestosPrestamoCampoID+\" or ID = \"+ComportamientoPago.pagoImpuestosPlanPagoCampoID+\" or ID = \"+ComportamientoPago.fechaPrestamoCampoID+\" or ID = \"+ComportamientoPago.fechaPlanPagoCampoID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        this.initWebWorkerComportamientoPago(camposDePrestamoTabla, valoresDeTablaPrestamo, camposDePlanPagoTabla, valoresDeTablaPlanPago, result.recordset, ComportamientoPago, false, index);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        console.log(\"44\");\n                        this.initWebWorkerComportamientoPago(camposDePrestamoTabla, valoresDeTablaPrestamo, camposDePlanPagoTabla, valoresDeTablaPlanPago, result.recordset, ComportamientoPago, true);\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    initWebWorkerComportamientoPago (camposDePrestamoTabla, valoresDeTablaPrestamo, camposDePlanPagoTabla, valoresDeTablaPlanPago, ComportamientoPago, iniciarProceso, index) {\n        //myWorker.postMessage([\"comportamientoPago\", camposDePrestamoTabla, valoresDeTablaPrestamo, camposDePlanPagoTabla, valoresDeTablaPlanPago, ComportamientoPago]);\n        console.log('comportamientoPagoBanderas');\n        console.log(comportamientoPagoBanderas);\n        if(index != null && !comportamientoPagoBanderas[index])\n            comportamientoPagoBanderas[index] = true;\n        console.log('comportamientoPagoBanderas');\n        console.log(comportamientoPagoBanderas);\n        if(iniciarProceso)\n            constructor([\"comportamientoPago\", camposDePrestamoTabla, valoresDeTablaPrestamo, camposDePlanPagoTabla, valoresDeTablaPlanPago, ComportamientoPago]);\n        //this.checkFinishMethods();\n        var finTodasLlamadas = true;\n        for (var i = 0; i < comportamientoPagoBanderas.length; i++) {\n            if(!comportamientoPagoBanderas[i]) {\n                finTodasLlamadas = false;\n                break;\n            }\n        };\n        if(finTodasLlamadas) {\n            this.iniciarTipoDeCreditos();\n        }\n    }\n\n    getFieldsFromCamposTable (tabla, ComportamientoPago, banderaMetodoLlamado, callbackParam, camposDePrestamoTabla, valoresDeTablaPrestamo, index) {\n        let self = this;\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Campos where tablaID = \"+tabla.ID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        //banderaGuardarResultadosTamActual++;\n                        this.initWebWorkerComportamientoPago(camposDePrestamoTabla, valoresDeTablaPrestamo, camposDePlanPagoTabla, valoresDeTablaPlanPago, result.recordset, ComportamientoPago, false, index);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n\n                        /*              UTILIZAR UN \"WEBPACK\" Y HACER WEB WORKER PARA GUARDAR O TRAER COSAS (sql en web worker)        */\n\n                        /*              CONSIGUIENDO VALORES DE TABLA DE PRESTAMOS         */\n                        const pool = new sql.ConnectionPool({\n                            user: tabla.usuario,\n                            password: tabla.contrasena,\n                            server: tabla.servidor,\n                            database: tabla.baseDatos,\n                            stream: true,\n                            connectionTimeout: 900000,\n                            requestTimeout: 900000,\n                            pool: {\n                                max: 40,\n                                min: 0,\n                                idleTimeoutMillis: 30000\n                            },\n                            options: {\n                                useUTC: false\n                            }\n                        });\n                        let camposTabla = result.recordset;\n                        pool.connect(err => {\n                            pool.request() // or: new sql.Request(pool1)\n                            .query(\"select * from \"+tabla.tabla, (err, result) => {\n                                console.log(result);\n                                console.log(err);\n                                /*var nuevoArregloTrans = [];\n                                for (var i = 0; i < result.recordset.length; i++) {\n                                    console.log(result.recordset[i]);\n                                    console.log(result.recordset[i].length);\n                                    for (var k = 0; k < result.recordset[i].length; k++) {\n                                        console.log(result.recordset[i][k]);\n                                        for (var j = 0; j < camposTabla.length; j++) {\n                                            if(j==0) {\n                                                nuevoArregloTrans.push({});\n                                                console.log(result.recordset[i]);\n                                                console.log(result.recordset[i][k]);\n                                                nuevoArregloTrans[i].camposTabla[j].nombre = result.recordset[i][k][camposTabla[j].nombre]\n                                            } else\n                                                nuevoArregloTrans[i].camposTabla[j].nombre = result.recordset[i][k][camposTabla[j].nombre]\n                                        };\n                                    }\n                                };*/\n                                /*for (var i = 0; i < result.recordset.length; i++) {\n                                    Object.keys(result.recordset[i]).forEach(function(key,index) {\n                                        // key: the name of the object key\n                                        // index: the ordinal position of the key within the object\n                                        if(!self.propiedadDeObjetoExisteEnTablaCampos(camposTabla, key)) {\n                                            delete result.recordset[i][key];\n                                        }\n                                    });\n                                }*/\n                                console.log(\"result.recordset\");\n                                console.log(result.recordset);\n                                //result.recordset = nuevoArregloTrans;\n                                if(banderaMetodoLlamado == 'prestamos')\n                                    callbackParam(camposTabla, result.recordset, ComportamientoPago, index);\n                                else\n                                    callbackParam(camposDePrestamoTabla, valoresDeTablaPrestamo, camposTabla, result.recordset, ComportamientoPago, index);\n                                //callbackParam(result.recordset, ComportamientoPago);\n                                //eval(\"this.\"+callbackParam+\"(\"+result.recordset+\", \"+camposTabla+\", \"+ComportamientoPago+\");\");\n                            });\n                        }); // fin pool connect\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    propiedadDeObjetoExisteEnTablaCampos(camposTabla, key) {\n        for (var i = 0; i < camposTabla.length; i++) {\n            if (camposTabla[i].nombre.localeCompare(key) == 0) {\n                return true;\n            }\n        };\n        return false;\n    }\n\n\n    hacerChekeosDeVariablesAlImportar () {\n        /*\n\n            EN RESULT DE CAMPOS DESPUES DE TRAER POR TABLA ID\n\n            if(result.recordset[i].tipo.localeCompare(\"bit\") == 0 || result.recordset[i].tipo.localeCompare(\"date\") == 0 || result.recordset[i].tipo.localeCompare(\"varchar\") == 0) {\n                if(result.recordset[i].tipo.localeCompare(\"bit\") == 0 || result.recordset[i].tipo.localeCompare(\"varchar\") == 0) {\n                    if(selectFieldsQueryString.length > 0)\n                        selectFieldsQueryString+=\", \";\n                    selectFieldsQueryString+=result.recordset[i].nombre;\n                } else if(result.recordset[i].tipo.localeCompare(\"date\") == 0) {\n                    if(selectFieldsQueryString.length > 0)\n                        selectFieldsQueryString+=\", \";\n                    selectFieldsQueryString+=result.recordset[i].nombre;\n                }\n            } else if(result.recordset[i].tipo.localeCompare(\"int\") == 0) {\n                if(selectFieldsQueryString.length > 0)\n                    selectFieldsQueryString+=\", \";\n                selectFieldsQueryString+=result.recordset[i].nombre;\n            }\n        */\n    }\n\n    /*  \n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****    \n        *****   *****   *****       *****   *****   *****   *****\n                        COMPORTAMIENTO PAGO\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n    */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    /*      \n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n                        TIPO DE CREDITOS\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n    */\n\n    iniciarTipoDeCreditos () {\n        //for (var i = 0; i < this.state.tablasOrginales.length; i++) {\n            //this.fetchDataTipoCredito();\n        //};\n        tiposCreditosBanderas = [];\n        for (var i = 0; i < tiposCreditosSeleccionados.length; i++) {\n            tiposCreditosBanderas.push(false);\n            this.fetchDataTipoCredito(tiposCreditosSeleccionados[i].ID, i);\n        }\n        if(tiposCreditosSeleccionados.length == 0) {\n            this.verifyTypeCreditFinal(null, null, false, null);\n        }\n    }\n\n    fetchDataTipoCredito (ID, index) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from TipoCredito where ID = \"+ID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        this.verifyTypeCreditFinal(null, null, false, index);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        //arregloCamposTipoCreditos: Cada posicion del arreglo corresponde a la del tipo de credito\n                        var arregloReglasTipoCreditos = [];\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            this.fetchDataReglasTipoCreditoCampos(result.recordset[i], arregloReglasTipoCreditos, i, result.recordset, index);\n                        }\n                        if(result.recordset.length == 0) {\n                            this.verifyTypeCreditFinal(null, null, false, index);\n                        }\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    fetchDataReglasTipoCreditoCampos (tipoCredito, arregloReglasTipoCreditos, i, arregloTipoCreditos, index) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Reglas where nombreTablaRes = 'TipoCredito' and idTipoTabla=\"+tipoCredito.ID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        this.verifyTypeCreditFinal(arregloTipoCreditos, arregloReglasTipoCreditos, false, index);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        arregloReglasTipoCreditos[i] = result.recordset;\n                        //verificando si este credito tiene reglas asociadas, si no no sumar a banderaGuardarResultadosTamFinalTIPOCREDITOS\n                        this.verificarCamposReglasTipoCreditoCampos(arregloTipoCreditos, arregloReglasTipoCreditos, index);\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    verificarCamposReglasTipoCreditoCampos (arregloTipoCreditos, arregloReglasTipoCreditos, index) {\n        for (var i = 0; i < arregloReglasTipoCreditos.length; i++) {\n            if(arregloReglasTipoCreditos[i] != undefined) {\n                for (var j = 0; j < arregloReglasTipoCreditos[i].length; j++) {\n                    this.fetchDataCamposReglasTipoCreditoCampos(arregloReglasTipoCreditos[i][j], arregloReglasTipoCreditos, i, j, arregloTipoCreditos, index);\n                };\n                if(arregloReglasTipoCreditos[i].length == 0) {\n                    this.verifyTypeCreditFinal(arregloTipoCreditos, arregloReglasTipoCreditos, false, index);\n                }\n            } else {\n                this.verifyTypeCreditFinal(arregloTipoCreditos, arregloReglasTipoCreditos, false, index);\n            }\n        };\n    }\n\n    fetchDataCamposReglasTipoCreditoCampos (regla, arregloReglasTipoCreditos, i, j, arregloTipoCreditos, index) {\n        if(regla.campoCampoID != -1 && regla.campoCampoID != -2 && regla.campoCampoID != -3) {\n            const transaction = new sql.Transaction( this.props.pool );\n            transaction.begin(err => {\n                var rolledBack = false;\n                transaction.on('rollback', aborted => {\n                    rolledBack = true;\n                });\n                const request = new sql.Request(transaction);\n                request.query(\"select * from Campos where ID = \"+regla.campoCampoID, (err, result) => {\n                    if (err) {\n                        if (!rolledBack) {\n                            console.log(err);\n                            this.verifyTypeCreditFinal(arregloTipoCreditos, arregloReglasTipoCreditos, false, index);\n                            transaction.rollback(err => {\n                            });\n                        }\n                    } else {\n                        transaction.commit(err => {\n                            arregloReglasTipoCreditos[i][j].campoValor = result.recordset[0];\n                            this.verificarValoresReglasTipoCreditoCampos(arregloTipoCreditos, arregloReglasTipoCreditos, index);\n                        });\n                    }\n                });\n            }); // fin transaction\n        } else if(regla.campoCampoID == -1) {\n            arregloReglasTipoCreditos[i][j].campoValor = {nombre: \"diasMora\", tabla: \"Préstamo\"};\n            this.verificarValoresReglasTipoCreditoCampos(arregloTipoCreditos, arregloReglasTipoCreditos, index);\n        } else if(regla.campoCampoID == -2) {\n            arregloReglasTipoCreditos[i][j].campoValor = {nombre: \"granDeudor\", tabla: \"Cliente\"};\n            this.verificarValoresReglasTipoCreditoCampos(arregloTipoCreditos, arregloReglasTipoCreditos, index);\n        } else if(regla.campoCampoID == -3) {\n            arregloReglasTipoCreditos[i][j].campoValor = {nombre: \"pequenoDeudor\", tabla: \"Cliente\"};\n            this.verificarValoresReglasTipoCreditoCampos(arregloTipoCreditos, arregloReglasTipoCreditos, index);\n        }\n    }\n\n    verificarValoresReglasTipoCreditoCampos (arregloTipoCreditos, arregloReglasTipoCreditos, index) {\n        for (var i = 0; i < arregloReglasTipoCreditos.length; i++) {\n            for (var j = 0; j < arregloReglasTipoCreditos[i].length; j++) {\n                var idsValores = arregloReglasTipoCreditos[i][j].valor.split(\",\");\n                for (var k = 0; k < idsValores.length; k++) {\n                    this.fetchDataValoresReglasTipoCreditoCampos(idsValores[k], arregloReglasTipoCreditos[i][j].esListaValor, arregloReglasTipoCreditos, i, j, arregloTipoCreditos, index);\n                };\n            };\n        };\n    }\n\n    fetchDataValoresReglasTipoCreditoCampos (id, esLista, arregloReglasTipoCreditos, i, j, arregloTipoCreditos, index) {\n        var tabla;\n        if(esLista)\n            tabla = 'VariablesdeLista';\n        else\n            tabla = 'Campos';\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from \"+tabla+\" where ID = \"+id, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        this.verifyTypeCreditFinal(arregloTipoCreditos, arregloReglasTipoCreditos, false, index);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        if(arregloReglasTipoCreditos[i][j].valorValores == undefined)\n                            arregloReglasTipoCreditos[i][j].valorValores = [];\n                        arregloReglasTipoCreditos[i][j].valorValores.push(result.recordset[0]);\n                        guardarTipoCredito = true;\n                        this.verifyTypeCreditFinal(arregloTipoCreditos, arregloReglasTipoCreditos, true, index);\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    verifyTypeCreditFinal (arregloTipoCreditos, arregloReglasTipoCreditos, iniciarProceso, index) {\n        if(arregloReglasTipoCreditos != null) {\n            if(index != null && !tiposCreditosBanderas[index])\n                tiposCreditosBanderas[index] = true;\n            \n            var tieneTodosLosCampos = true, tieneTodosLosValores = true;\n            for (var i = 0; i < arregloReglasTipoCreditos.length; i++) {\n                if(arregloReglasTipoCreditos[i] != undefined) {\n                    for (var j = 0; j < arregloReglasTipoCreditos[i].length; j++) {\n                        if(arregloReglasTipoCreditos[i][j].campoValor == undefined) {\n                            tieneTodosLosCampos = false;\n                            break;\n                        }\n                        if(arregloReglasTipoCreditos[i][j].valorValores == undefined) {\n                            tieneTodosLosValores = false;\n                            break;\n                        }\n                    };\n                }\n            };\n\n            if(iniciarProceso && tieneTodosLosCampos && tieneTodosLosValores) {\n                constructor([\"tiposCredito\", arregloTipoCreditos, arregloReglasTipoCreditos]);\n            }\n\n            var finTodasLlamadas = true;\n            for (var i = 0; i < tiposCreditosBanderas.length; i++) {\n                if(!tiposCreditosBanderas[i]) {\n                    finTodasLlamadas = false;\n                    break;\n                }\n            };\n\n            if(finTodasLlamadas) {\n                console.log(arregloTipoCreditos);\n                console.log(arregloReglasTipoCreditos);\n                //myWorker.postMessage([\"tiposCredito\", arregloTipoCreditos, arregloReglasTipoCreditos]);\n                /*if(iniciarProceso)\n                    constructor([\"tiposCredito\", arregloTipoCreditos, arregloReglasTipoCreditos]);*/\n\n                if(finTodasLlamadas) {\n                    this.iniciarCategoriasClasificacion();\n                }\n            }\n        } else {\n            this.iniciarCategoriasClasificacion();\n        }\n    }\n\n    /* \n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****     \n        *****   *****   *****       *****   *****   *****   *****\n                        TIPO DE CREDITOS\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n    */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    /*      \n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n                        CATEGORIAS CLASIFICACION\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n    */\n\n    iniciarCategoriasClasificacion () {\n        //for (var i = 0; i < this.state.tablasOrginales.length; i++) {\n            //this.fetchDataCategoriaClasificacion();\n        //};\n        categoriasClasificacionBanderas = [];\n        for (var i = 0; i < categoriasClasificacionSeleccionados.length; i++) {\n            categoriasClasificacionBanderas.push(false);\n            this.fetchDataCategoriaClasificacion(categoriasClasificacionSeleccionados[i].ID, i);\n        }\n        if(categoriasClasificacionSeleccionados.length == 0) {\n            this.verifyClasificationCategoryFinal(null, null, false, null);\n        }\n    }\n\n    fetchDataCategoriaClasificacion (ID, index) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from CategoriaClasificacion where ID = \"+ID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        this.verifyClasificationCategoryFinal(null, null, false, index);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        //arregloCamposTipoCreditos: Cada posicion del arreglo corresponde a la del tipo de credito\n                        var arregloReglasTipoCreditos = [];\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            this.fetchDataReglasCategoriaClasificacionCampos(result.recordset[i], arregloReglasTipoCreditos, i, result.recordset, index);\n                        }\n                        if(result.recordset.length == 0) {\n                            this.verifyClasificationCategoryFinal(null, null, false, index);\n                        }\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    fetchDataReglasCategoriaClasificacionCampos (tipoCredito, arregloReglasTipoCreditos, i, arregloTipoCreditos, index) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Reglas where nombreTablaRes = 'CategoriaClasificacion' and idTipoTabla=\"+tipoCredito.ID, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        this.verifyClasificationCategoryFinal(arregloTipoCreditos, arregloReglasTipoCreditos, false, index);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        arregloReglasTipoCreditos[i] = result.recordset;\n                        this.verificarCamposReglasCategoriaClasificacionCampos(arregloTipoCreditos, arregloReglasTipoCreditos, index);\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    verificarCamposReglasCategoriaClasificacionCampos (arregloTipoCreditos, arregloReglasTipoCreditos, index) {\n        for (var i = 0; i < arregloReglasTipoCreditos.length; i++) {\n            if(arregloReglasTipoCreditos[i] != undefined) {\n                for (var j = 0; j < arregloReglasTipoCreditos[i].length; j++) {\n                    this.fetchDataCamposReglasCategoriaClasificacionCampos(arregloReglasTipoCreditos[i][j], arregloReglasTipoCreditos, i, j, arregloTipoCreditos, index);\n                };\n                if(arregloReglasTipoCreditos[i].length == 0) {\n                    this.verifyClasificationCategoryFinal(arregloTipoCreditos, arregloReglasTipoCreditos, false, index);\n                }\n            } else {\n                this.verifyClasificationCategoryFinal(arregloTipoCreditos, arregloReglasTipoCreditos, false, index);\n            }\n        };\n    }\n\n    fetchDataCamposReglasCategoriaClasificacionCampos (regla, arregloReglasTipoCreditos, i, j, arregloTipoCreditos, index) {\n        if(regla.campoCampoID != -1) {\n            const transaction = new sql.Transaction( this.props.pool );\n            transaction.begin(err => {\n                var rolledBack = false;\n                transaction.on('rollback', aborted => {\n                    rolledBack = true;\n                });\n                const request = new sql.Request(transaction);\n                request.query(\"select * from Campos where ID = \"+regla.campoCampoID, (err, result) => {\n                    if (err) {\n                        if (!rolledBack) {\n                            console.log(err);\n                            this.verifyClasificationCategoryFinal(arregloTipoCreditos, arregloReglasTipoCreditos, false, index);\n                            transaction.rollback(err => {\n                            });\n                        }\n                    } else {\n                        transaction.commit(err => {\n                            arregloReglasTipoCreditos[i][j].campoValor = result.recordset[0];\n                            this.verificarValoresReglasCategoriaClasificacionCampos(arregloTipoCreditos, arregloReglasTipoCreditos, index);\n                        });\n                    }\n                });\n            }); // fin transaction\n        } else if(regla.campoCampoID == -1) {\n            arregloReglasTipoCreditos[i][j].campoValor = {nombre: \"diasMora\", tabla: \"Préstamo\"};\n            this.verificarValoresReglasCategoriaClasificacionCampos(arregloTipoCreditos, arregloReglasTipoCreditos, index);\n        }\n    }\n\n    verificarValoresReglasCategoriaClasificacionCampos (arregloTipoCreditos, arregloReglasTipoCreditos, index) {\n        for (var i = 0; i < arregloReglasTipoCreditos.length; i++) {\n            for (var j = 0; j < arregloReglasTipoCreditos[i].length; j++) {\n                var idsValores = arregloReglasTipoCreditos[i][j].valor.split(\",\");\n                for (var k = 0; k < idsValores.length; k++) {\n                    this.fetchDataValoresReglasCategoriaClasificacionCampos(idsValores[k], arregloReglasTipoCreditos[i][j].esListaValor, arregloReglasTipoCreditos, i, j, arregloTipoCreditos, index);\n                };\n            };\n        };\n    }\n\n    fetchDataValoresReglasCategoriaClasificacionCampos (id, esLista, arregloReglasTipoCreditos, i, j, arregloTipoCreditos, index) {\n        var tabla;\n        if(esLista)\n            tabla = 'VariablesdeLista';\n        else\n            tabla = 'Campos';\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from \"+tabla+\" where ID = \"+id, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        this.verifyClasificationCategoryFinal(arregloTipoCreditos, arregloReglasTipoCreditos, false, index);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        if(arregloReglasTipoCreditos[i][j].valorValores == undefined)\n                            arregloReglasTipoCreditos[i][j].valorValores = [];\n                        arregloReglasTipoCreditos[i][j].valorValores.push(result.recordset[0]);\n                        guardarCategoriaClasificacion = true;\n                        this.verifyClasificationCategoryFinal(arregloTipoCreditos, arregloReglasTipoCreditos, true, index);\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    verifyClasificationCategoryFinal (arregloTipoCreditos, arregloReglasTipoCreditos, iniciarProceso, index) {\n        if(arregloReglasTipoCreditos != null) {\n            if(index != null && !categoriasClasificacionBanderas[index])\n                categoriasClasificacionBanderas[index] = true;\n\n            var tieneTodosLosCampos = true, tieneTodosLosValores = true;\n            for (var i = 0; i < arregloReglasTipoCreditos.length; i++) {\n                if(arregloReglasTipoCreditos[i] != undefined) {\n                    for (var j = 0; j < arregloReglasTipoCreditos[i].length; j++) {\n                        if(arregloReglasTipoCreditos[i][j].campoValor == undefined) {\n                            tieneTodosLosCampos = false;\n                            break;\n                        }\n                        if(arregloReglasTipoCreditos[i][j].valorValores == undefined) {\n                            tieneTodosLosValores = false;\n                            break;\n                        }\n                    };\n                }\n            };\n\n            console.log('iniciarProceso');\n            console.log(iniciarProceso);\n            console.log('tieneTodosLosCampos');\n            console.log(tieneTodosLosCampos);\n            console.log('tieneTodosLosValores');\n            console.log(tieneTodosLosValores);\n\n            if(iniciarProceso && tieneTodosLosCampos && tieneTodosLosValores) {\n                constructor([\"categoriasClasificacion\", arregloTipoCreditos, arregloReglasTipoCreditos]);\n            }\n\n            var finTodasLlamadas = true;\n            for (var i = 0; i < categoriasClasificacionBanderas.length; i++) {\n                if(!categoriasClasificacionBanderas[i]) {\n                    finTodasLlamadas = false;\n                    break;\n                }\n            };\n            console.log('categoriasClasificacionBanderas');\n            console.log(categoriasClasificacionBanderas);\n            console.log('categoriasClasificacionSeleccionados');\n            console.log(categoriasClasificacionSeleccionados);\n            if(finTodasLlamadas) {\n                console.log(arregloTipoCreditos);\n                console.log(arregloReglasTipoCreditos);\n                //myWorker.postMessage([\"tiposCredito\", arregloTipoCreditos, arregloReglasTipoCreditos]);\n                /*if(iniciarProceso)\n                    constructor([\"categoriasClasificacion\", arregloTipoCreditos, arregloReglasTipoCreditos]);*/\n                if(finTodasLlamadas) {\n                    this.iniciarCriteriosDeterioro();\n                }\n            }\n        } else {\n            this.iniciarCriteriosDeterioro();\n        }\n    }\n\n\n\n    /*      \n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n                        CATEGORIAS CLASIFICACION\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n    */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    /*      \n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n                        CRITERIOS DE DETERIORO\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n    */\n\n    /*iniciarCriteriosDeterioro () {\n        //como no tiene id prestamo o cliente, no se puede calcular comportamiento plan pago, agregar mensaje bitacora  // si verificarComportamientoPago == false\n        if( tamanoActualBandera == tamanoFinalBandera ) {\n            banderaGuardarResultadosTamActual = 0;\n            banderaGuardarResultadosTamFinal = this.state.tablasOrginales.length;\n            for (var i = 0; i < this.state.tablasOrginales.length; i++) {\n                var calcularComportamientoPago = false;\n                var primeraVezEntra = true; //agregar valores de tabla a arreglo global de clientes, prestamos y pagos en ClasificarCartera.js\n\n                //como no tiene id prestamo o cliente, no se puede calcular comportamiento plan pago, agregar mensaje bitacora  // si verificarComportamientoPago == false\n\n                if(verificarComportamientoPago && $(\"#ComportamientoPago\"+i).prop('checked') == true)\n                    calcularComportamientoPago = true;\n\n                //if(calcularComportamientoPago) {\n                    this.fetchDataComportamientoPago(this.state.tablasOrginales[i].ID);\n                    //banderaGuardarResultadosTamFinal++;\n                    /*if(primeraVezEntra) {\n                        primeraVezEntra = false;\n                    }\n                }\n                if(verificarTipoCredito) {\n                    //this.fetchDataTipoCredito(this.state.tablasOrginales[i].ID);\n                    //banderaGuardarResultadosTamFinal++;\n                //}\n            };\n        }\n    }*/\n\n    iniciarCriteriosDeterioro () {\n        guardarCriterioDeterioro = true;\n        this.getCriterioDeterioro();\n    }\n\n    getCriterioDeterioro() {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from CriterioDeterioro\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        //banderaGuardarResultadosTamActual++;\n                        this.verifyDeteriorationCriteriaFinal(null, false);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        this.verifyDeteriorationCriteriaFinal(result.recordset, true);\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    verifyDeteriorationCriteriaFinal (criteriosDeterioro, calcular) {\n        /*banderaGuardarResultadosTamActualCATEGORIACLASIFICACION++;\n        if(tamanoActualBanderaValoresReglasCategoriaClasificacionCampos == tamanoFinalBanderaValoresReglasCategoriaClasificacionCampos) {\n            console.log(arregloTipoCreditos);\n            console.log(arregloReglasTipoCreditos);\n            //myWorker.postMessage([\"tiposCredito\", arregloTipoCreditos, arregloReglasTipoCreditos]);\n            if(iniciarProceso)\n                constructor([\"categoriasClasificacion\", arregloTipoCreditos, arregloReglasTipoCreditos]);\n            //this.checkFinishMethods();\n            if(banderaGuardarResultadosTamFinalCATEGORIACLASIFICACION == banderaGuardarResultadosTamActualCATEGORIACLASIFICACION) {\n                this.iniciarCategoriasClasificacion();\n            }\n        }*/\n        if(calcular)\n            constructor([\"estimacionDeterioro\", criteriosDeterioro]);\n        this.checkFinishMethods();\n    }\n\n\n    /*      \n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n                        CRITERIOS DE DETERIORO\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n        *****   *****   *****       *****   *****   *****   *****\n    */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    /*      \n        *****   *****   *****       *****   *****   *****   *****\n                        GUARDAR RESULTADOS\n        *****   *****   *****       *****   *****   *****   *****\n    */\n\n    checkFinishMethods() {\n        /*console.log(\"banderaGuardarResultadosTamActual = \"+banderaGuardarResultadosTamActual);\n        console.log(\"banderaGuardarResultadosTamFinal = \"+banderaGuardarResultadosTamFinal);\n        if( banderaGuardarResultadosTamActual == banderaGuardarResultadosTamFinal ) {\n            console.log(\"FIN DE CALCULOS\");\n            console.log(\"GUARDANDO CAMPOS\");\n            for (var i = 0; i < arregloCamposTablasSeleccionadas.length; i++) {\n                console.log(arregloCamposTablasSeleccionadas[i]);\n            };\n        }*/\n        if(!guardarUnicaVez) {\n            guardarUnicaVez = true;\n            var self = this;\n            setTimeout(function(){\n                //alert(\"Clasificación realizada con exito\");\n                self.setState({\n                    mensajeModal: {mostrarMensaje: false, mensajeConfirmado: true, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: self.state.mensajeModal.idElementoSelec, indiceX: self.state.mensajeModal.indiceX}\n                });\n                self.showSuccesMessage(\"Exito\", \"Cálculo realizado con éxito.\");\n                self.getFieldsToSave();\n            }, 4000);\n        }\n        //alert(\"Clasificacion realizada con exito\");\n        //this.getFieldsToSave();\n    }\n\n    getFieldsToSave() {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Campos where guardar = 'true' and (tabla = 'Cliente' or tabla = 'Préstamo')\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        this.startSavingObjects(result.recordset);\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    startSavingObjects(arregloDeCamposAGuardar) {\n        //arreglos de archivo de calculos\n        var camposDeCliente = arregloDeCamposAGuardar.filter(function( object ) {\n                                return object.tabla.localeCompare(\"Cliente\") == 0;\n                            });\n        var camposDePrestamo = arregloDeCamposAGuardar.filter(function( object ) {\n                                return object.tabla.localeCompare(\"Préstamo\") == 0;\n                            });\n        var clientes = retornarClientes();\n        var prestamos = retornarPrestamos();\n        var bitacora = retornarBitacora();\n        for (var i = 0; i < clientes.length; i++) {\n            var identificadorCliente;\n            for (var j = 0; j < camposDeCliente.length; j++) {\n                if(camposDeCliente[j].funcion.localeCompare(\"Identificador\") == 0) {\n                    identificadorCliente = clientes[i][camposDeCliente[j].nombre];\n                    var objeto = \"Cliente\";\n                    var nombre = camposDeCliente[j].nombre;\n                    this.saveObjectID(identificadorCliente, objeto, nombre, \"-1\");\n                    break;\n                }\n            };\n            if(identificadorCliente != undefined) {\n                for (var j = 0; j < camposDeCliente.length; j++) {\n                    if(camposDeCliente[j].funcion.localeCompare(\"Identificador\") != 0) {\n                        var objeto = \"Cliente\";\n                        var nombre = camposDeCliente[j].nombre;\n                        var fecha = new Date();\n                        var nombreTablaOrigenTipo = \"Usuario\";\n                        //verificar si campo es valores de mora, categoria clas, tipo credito o criterio dete\n                        //if()\n                        var valor = clientes[i][camposDeCliente[j].nombre];\n                        if(camposDeCliente[j].tipo.localeCompare(\"int\") == 0) {\n                            this.saveObjectIntField(identificadorCliente, objeto, nombre, fecha, nombreTablaOrigenTipo, valor);\n                        } else if(camposDeCliente[j].tipo.localeCompare(\"decimal\") == 0) {\n                            this.saveObjectDecimalField(identificadorCliente, objeto, nombre, fecha, nombreTablaOrigenTipo, valor);\n                        } else if(camposDeCliente[j].tipo.localeCompare(\"date\") == 0) {\n                            this.saveObjectDateField(identificadorCliente, objeto, nombre, fecha, nombreTablaOrigenTipo, valor);\n                        } else if(camposDeCliente[j].tipo.localeCompare(\"bool\") == 0) {\n                            this.saveObjecBoolField(identificadorCliente, objeto, nombre, fecha, nombreTablaOrigenTipo, valor);\n                        } else if(camposDeCliente[j].tipo.localeCompare(\"varchar\") == 0) {\n                            this.saveObjectStringField(identificadorCliente, objeto, nombre, fecha, nombreTablaOrigenTipo, valor);\n                        }\n                    }\n                };\n\n                for (var k = 0; k < prestamos[i].length; k++) {\n                    var identificadorPrestamo;\n                    for (var j = 0; j < camposDePrestamo.length; j++) {\n                        if(camposDePrestamo[j].funcion.localeCompare(\"Identificador\") == 0) {\n                            identificadorPrestamo = prestamos[i][k][camposDePrestamo[j].nombre];\n                            var objeto = \"Préstamo\";\n                            var nombre = camposDePrestamo[j].nombre;\n                            this.saveObjectID(identificadorPrestamo, objeto, nombre, identificadorCliente);\n                            break;\n                        }\n                    };\n                    if(identificadorPrestamo != undefined) {\n                        for (var j = 0; j < camposDePrestamo.length; j++) {\n                            if(camposDePrestamo[j].funcion.localeCompare(\"Identificador\") != 0) {\n                                var objeto = \"Préstamo\";\n                                var nombre = camposDePrestamo[j].nombre;\n                                var fecha = new Date();\n                                var nombreTablaOrigenTipo = \"Usuario\";\n                                //verificar si campo es valores de mora, categoria clas, tipo credito o criterio dete\n                                //if()\n                                var valor = prestamos[i][k][camposDePrestamo[j].nombre];\n                                if(camposDePrestamo[j].tipo.localeCompare(\"int\") == 0) {\n                                    this.saveObjectIntField(identificadorPrestamo, objeto, nombre, fecha, nombreTablaOrigenTipo, valor);\n                                } else if(camposDePrestamo[j].tipo.localeCompare(\"decimal\") == 0) {\n                                    this.saveObjectDecimalField(identificadorPrestamo, objeto, nombre, fecha, nombreTablaOrigenTipo, valor);\n                                } else if(camposDePrestamo[j].tipo.localeCompare(\"date\") == 0) {\n                                    this.saveObjectDateField(identificadorPrestamo, objeto, nombre, fecha, nombreTablaOrigenTipo, valor);\n                                } else if(camposDePrestamo[j].tipo.localeCompare(\"bool\") == 0) {\n                                    this.saveObjecBoolField(identificadorPrestamo, objeto, nombre, fecha, nombreTablaOrigenTipo, valor);\n                                } else if(camposDePrestamo[j].tipo.localeCompare(\"varchar\") == 0) {\n                                    this.saveObjectStringField(identificadorPrestamo, objeto, nombre, fecha, nombreTablaOrigenTipo, valor);\n                                }\n                            }\n                        };\n                        if(guardarTipoCredito) {\n                            var objeto = \"Préstamo\";\n                            var nombre = \"tipoCredito\";\n                            var fecha = new Date();\n                            var nombreTablaOrigenTipo = \"Usuario\";\n                            var valor = prestamos[i][k].tipoCredito;\n                            this.saveObjectStringField(identificadorPrestamo, objeto, nombre, fecha, nombreTablaOrigenTipo, valor);\n                        }\n                        if(guardarCategoriaClasificacion) {\n                            var objeto = \"Préstamo\";\n                            var nombre = \"categoriaClasificacion\";\n                            var fecha = new Date();\n                            var nombreTablaOrigenTipo = \"Usuario\";\n                            var valor = prestamos[i][k].categoriaClasificacion;\n                            this.saveObjectStringField(identificadorPrestamo, objeto, nombre, fecha, nombreTablaOrigenTipo, valor);\n                        }\n                        if(guardarMora) {\n                            var objeto = \"Préstamo\";\n                            var nombreMesPlan = \"mesDelPlan\";\n                            var fecha = new Date();\n                            var nombreTablaOrigenTipo = \"Usuario\";\n                            var valorMesPlan = this.formatDateCreation(prestamos[i][k].mesDelPlan);\n                            this.saveObjectDateField(identificadorPrestamo, objeto, nombreMesPlan, fecha, nombreTablaOrigenTipo, valorMesPlan);\n\n                            var nombreDiasMora = \"diasMora\";\n                            var valorDiasMora = prestamos[i][k].diasMora;\n                            this.saveObjectIntField(identificadorPrestamo, objeto, nombreDiasMora, fecha, nombreTablaOrigenTipo, valorDiasMora);\n\n                            var nombreCapitalPagado = \"totalCapitalPagado\";\n                            var valorCapitalPagado = prestamos[i][k].t0talC4pitalPagado;\n                            this.saveObjectDecimalField(identificadorPrestamo, objeto, nombreCapitalPagado, fecha, nombreTablaOrigenTipo, valorCapitalPagado);\n\n                            var nombreCapitalDeberiaPagado = \"totalCapitalDeberiaPagado\";\n                            var valorCapitalDeberiaPagado = prestamos[i][k].t0talC4pitalD3beriaPagado;\n                            this.saveObjectDecimalField(identificadorPrestamo, objeto, nombreCapitalDeberiaPagado, fecha, nombreTablaOrigenTipo, valorCapitalDeberiaPagado);\n\n                            var nombreImpuestosPagado = \"totalImpuestosPagado\";\n                            var valorImpuestosPagado = prestamos[i][k].t0tal1mpu3stosPagado;\n                            this.saveObjectDecimalField(identificadorPrestamo, objeto, nombreImpuestosPagado, fecha, nombreTablaOrigenTipo, valorImpuestosPagado);\n\n                            var nombreImpuestosDeberiaPagado = \"totalImpuestosDeberiaPagado\";\n                            var valorImpuestosDeberiaPagado = prestamos[i][k].t0tal1mpu3stosD3beriaPagado;\n                            this.saveObjectDecimalField(identificadorPrestamo, objeto, nombreImpuestosDeberiaPagado, fecha, nombreTablaOrigenTipo, valorImpuestosDeberiaPagado);\n                        }\n                        if(guardarCriterioDeterioro) {\n                            var objeto = \"Préstamo\";\n                            var nombreMesPlan = \"mesDelPlan\";\n                            var fecha = new Date();\n                            var nombreTablaOrigenTipo = \"Usuario\";\n                            var nombreEstimacionDeterioro = \"estimacionDeterioro\";\n                            var valorEstimacionDeterioro = prestamos[i][k].estimacionDeterioro;\n                            this.saveObjectDecimalField(identificadorPrestamo, objeto, nombreEstimacionDeterioro, fecha, nombreTablaOrigenTipo, valorEstimacionDeterioro);\n                        }\n                    }\n                };\n                if(guardarMora) {\n                    var objeto = \"Préstamo\";\n                    var fecha = new Date();\n                    var nombreTablaOrigenTipo = \"Usuario\";\n\n                    var nombreCapitalPagado = \"totalCapitalPagado\";\n                    var valorCapitalPagado = clientes[i].t0talC4pitalPagado;\n                    this.saveObjectDecimalField(identificadorCliente, objeto, nombreCapitalPagado, fecha, nombreTablaOrigenTipo, valorCapitalPagado);\n\n                    var nombreCapitalDeberiaPagado = \"totalCapitalDeberiaPagado\";\n                    var valorCapitalDeberiaPagado = clientes[i].t0talC4pitalD3beriaPagado;\n                    this.saveObjectDecimalField(identificadorCliente, objeto, nombreCapitalDeberiaPagado, fecha, nombreTablaOrigenTipo, valorCapitalDeberiaPagado);\n\n                    var nombreImpuestosPagado = \"totalImpuestosPagado\";\n                    var valorImpuestosPagado = clientes[i].t0tal1mpu3stosPagado;\n                    this.saveObjectDecimalField(identificadorCliente, objeto, nombreImpuestosPagado, fecha, nombreTablaOrigenTipo, valorImpuestosPagado);\n\n                    var nombreImpuestosDeberiaPagado = \"totalImpuestosDeberiaPagado\";\n                    var valorImpuestosDeberiaPagado = clientes[i].t0tal1mpu3stosD3beriaPagado;\n                    this.saveObjectDecimalField(identificadorCliente, objeto, nombreImpuestosDeberiaPagado, fecha, nombreTablaOrigenTipo, valorImpuestosDeberiaPagado);\n                }\n            }\n        };\n        if(guardarCriterioDeterioro) {\n            var objeto = \"CAPITAL_MINIMO\";\n            var nombreMesPlan = \"mesDelPlan\";\n            var fecha = new Date();\n            var nombreTablaOrigenTipo = \"Usuario\";\n            var nombreCapitalMinimo = \"capitalMinimo\";\n            var valorCapitalMinimo = retornarCapitalMinimo();\n            this.saveObjectDecimalField(identificadorPrestamo, objeto, nombreCapitalMinimo, fecha, nombreTablaOrigenTipo, valorCapitalMinimo);\n        }\n        for (var i = 0; i < bitacora.length; i++) {\n            this.saveBitacora(bitacora[i]);\n        };\n        this.props.hideLoadingScreen();\n        console.log(\"FIIIIIIIN\");\n        console.log(clientes);\n        console.log(prestamos);\n        /*var prestamos =  constructor([\"traerArrPrestamos\"]);\n        var pagos =  constructor([\"traerArrPagos\"]);\n        var planpagos =  constructor([\"traerArrPlanPagos\"]);*/\n    }\n\n    saveObjectID(identificador, objeto, nombre, idPadre) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"insert into ResultadosID (identificador, objeto, nombre, idPadre) values ('\"+identificador+\"','\"+objeto+\"','\"+nombre+\"','\"+idPadre+\"')\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    saveObjectIntField(idObjeto, objeto, nombre, fecha, nombreTablaOrigenTipo, valor) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"insert into ResultadosInt (idObjeto, objeto, nombre, fecha, nombreTablaOrigenTipo, valor) values ('\"+idObjeto+\"','\"+objeto+\"','\"+nombre+\"','\"+this.formatDateCreation(fechaGlobal)+\"','\"+nombreTablaOrigenTipo+\"',\"+valor+\")\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    saveObjectDecimalField(idObjeto, objeto, nombre, fecha, nombreTablaOrigenTipo, valor) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"insert into ResultadosDecimal (idObjeto, objeto, nombre, fecha, nombreTablaOrigenTipo, valor) values ('\"+idObjeto+\"','\"+objeto+\"','\"+nombre+\"','\"+this.formatDateCreation(fechaGlobal)+\"','\"+nombreTablaOrigenTipo+\"',\"+valor+\")\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    saveObjectDateField(idObjeto, objeto, nombre, fecha, nombreTablaOrigenTipo, valor) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"insert into ResultadosDate (idObjeto, objeto, nombre, fecha, nombreTablaOrigenTipo, valor) values ('\"+idObjeto+\"','\"+objeto+\"','\"+nombre+\"','\"+this.formatDateCreation(fechaGlobal)+\"','\"+nombreTablaOrigenTipo+\"','\"+valor+\"')\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    saveObjecBoolField(idObjeto, objeto, nombre, fecha, nombreTablaOrigenTipo, valor) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"insert into ResultadosBool (idObjeto, objeto, nombre, fecha, nombreTablaOrigenTipo, valor) values ('\"+idObjeto+\"','\"+objeto+\"','\"+nombre+\"','\"+this.formatDateCreation(fechaGlobal)+\"','\"+nombreTablaOrigenTipo+\"',\"+valor+\")\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    saveObjectStringField(idObjeto, objeto, nombre, fecha, nombreTablaOrigenTipo, valor) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"insert into ResultadosString (idObjeto, objeto, nombre, fecha, nombreTablaOrigenTipo, valor) values ('\"+idObjeto+\"','\"+objeto+\"','\"+nombre+\"','\"+this.formatDateCreation(fechaGlobal)+\"','\"+nombreTablaOrigenTipo+\"','\"+valor+\"')\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    saveBitacora (bitacora) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"insert into Bitacora (usuario, hora, operacion, mensaje) values ('dariovillalta','\"+this.formatDateCreation(new Date())+\"','\"+bitacora.operacion+\"','\"+bitacora.mensaje+\"')\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    iterateProperties (arreglo) {\n        for (var i = 0; i < arreglo.length; i++) {\n            var identificadorCampoNombre;\n            Object.keys(arreglo[i]).forEach(function(key,index) {\n                // key: the name of the object key\n                // index: the ordinal position of the key within the object\n                identificadorCampoNombre = camposGuardar.filter(function( object ) {\n                                return object.nombre.localeCompare(key) == 0 && object.funcion.localeCompare(\"Identificador\") == 0;\n                            });\n            });\n            if(identificadorCampoNombre.length > 0) {\n                Object.keys(arreglo[i]).forEach(function(key,index) {\n                    // key: the name of the object key\n                    // index: the ordinal position of the key within the object\n                    console.log(\"key\");\n                    console.log(key);\n                    console.log(\"arreglo[i]\");\n                    console.log(arreglo[i]);\n                    console.log(\"arreglo[i][key]\");\n                    console.log(arreglo[i][key]);\n                    if(identificadorCampoNombre[0].funcion.localeCompare(\"Identificador\") == 0) {\n                        this.verifyResultID(identificadorCampoNombre[0].nombre, identificadorCampoNombre[0].tabla, key);\n                    } else {\n                        this.verifyResultField(identificadorCampoNombre[0].nombre, identificadorCampoNombre[0].tabla, key, arreglo[i][key]);\n                    }\n                });\n            } else {\n                //bitacora no existe campo id\n            }\n        };\n    }\n\n    formatDateCreation(date) {\n        //formato si es STRING\n        //aaaa/mm/dd\n        //aaaa-mm-dd\n        var monthNames = [\n            \"Ene\", \"Feb\", \"Mar\",\n            \"Abr\", \"May\", \"Jun\", \"Jul\",\n            \"Ago\", \"Sep\", \"Oct\",\n            \"Nov\", \"Dec\"\n        ];\n\n        var day = date.getDate();\n        var monthIndex = date.getMonth();\n        monthIndex++;\n        var year = date.getFullYear();\n        return year + '-' + monthIndex + '-' + day;\n    }\n\n    /*======_______====== ======_______======   MENSAJES MODAL    ======_______====== ======_______======*/\n    /*======_______======                                                             ======_______======*/\n    /*======_______======                                                             ======_______======*/\n    /*======_______====== ======_______====== ==_____==  ==___==  ======_______====== ======_______======*/\n\n    dismissMessageModal() {\n        this.setState({\n            mensajeModal: {mostrarMensaje: false, mensajeConfirmado: false, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: -1, indiceX: -1}\n        });\n    }\n\n    showSuccesMessage(titulo, mensaje) {\n        this.setState({\n            mensajeModal: {mostrarMensaje: true, mensajeConfirmado: false, esError: false, esConfirmar: false, titulo: titulo, mensaje: mensaje, banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX}\n        });\n        let self = this;\n        setTimeout(function(){\n            self.setState({\n                mensajeModal: {mostrarMensaje: false, mensajeConfirmado: false, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: self.state.mensajeModal.idElementoSelec, indiceX: self.state.mensajeModal.indiceX}\n            });\n        }, 850);\n    }\n\n    render() {\n        return (\n            <div style={{height: \"85vh\", width: \"100%\"}}>\n                <div style={{width: \"100%\", height: \"7%\"}}>\n                    <div style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\", width: \"100%\", height: \"100%\"}}>\n                        <h2>Seleccione Tablas a Clasificar</h2>\n                    </div>\n                </div>\n                <div style={{width: \"100%\", height: \"11%\"}}>\n                    <SeleccionarTablaClasificarCarteraProceso tablasOrginales={this.state.tablasOrginales} tablasSeleccionadas={this.state.tablasSeleccionadas} selectTable={this.selectTable}> </SeleccionarTablaClasificarCarteraProceso>\n                </div>\n                <div style={{width: \"100%\", height: \"76%\"}}>\n                    <div style={{height: \"100%\", overflowX: \"scroll\", overflowY: \"hidden\", whiteSpace: \"nowrap\", borderRadius: \"5px\", padding: \"1% 0%\", border: \"solid 3px #cfd8dc\", borderRadius: \"5px\", marginTop: \"2%\"}}>\n                        <div style={{height: \"100%\", width: \"100%\", display: \"inline-block\", position: \"relative\"}}>\n                            <div style={{height: \"95%\", width: \"95%\", backgroundColor: \"white\", position: \"absolute\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\", borderRadius: \"5px\", overflowY: \"scroll\"}}>\n                                <div className={\"text-center\"} style={{borderBottom: \"solid 4px #cfd8dc\"}}>\n                                    <h3>Criterios de Clasificaci&oacute;n</h3>\n                                </div>\n                                <div style={{width: \"100%\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", border: \"solid 3px #eceff1\"}}>\n                                    <div style={{width: \"90%\", height: \"60%\", textAlign: \"center\", display: \"table\"}}>\n                                        <h5 style={{display: \"table-cell\", verticalAlign: \"middle\"}}>Comportamiento de Pago</h5>\n                                    </div>\n                                </div>\n                                <div style={{width: \"100%\", height: \"auto\", overflowY: \"scroll\"}}>\n                                    {this.state.comportamientoPagoOriginales.map((comportamientoPago, i) =>\n                                        <div key={comportamientoPago.ID}>\n                                            <OpcionTablasClasificar id={\"comportamientoPago\"+comportamientoPago.ID} texto={\"Tabla: \"+comportamientoPago.nombreTabla} callMethod={this.actualizarSeleccionarComportamientoPago}> </OpcionTablasClasificar>\n                                        </div>\n                                    )}\n                                </div>\n\n                                <div className={\"text-center\"} style={{borderBottom: \"solid 4px #cfd8dc\", borderTop: \"solid 4px #cfd8dc\"}}>\n                                    <h3>Tipo de Cr&eacute;dito</h3>\n                                </div>\n                                <div style={{width: \"100%\", height: \"auto\", overflowY: \"scroll\"}}>\n                                    {this.state.tiposCreditosOriginales.map((tiposCredito, i) =>\n                                        <div key={tiposCredito.ID}>\n                                            <OpcionTablasClasificar id={\"tiposCredito\"+tiposCredito.ID} texto={\"Nombre: \"+tiposCredito.nombre} callMethod={this.actualizarSeleccionarTiposCredito}> </OpcionTablasClasificar>\n                                        </div>\n                                    )}\n                                </div>\n\n                                <div className={\"text-center\"} style={{borderBottom: \"solid 4px #cfd8dc\", borderTop: \"solid 4px #cfd8dc\"}}>\n                                    <h3>Categorias de Clasificaci&oacute;n</h3>\n                                </div>\n                                <div style={{width: \"100%\", height: \"auto\", overflowY: \"scroll\"}}>\n                                    {this.state.categoriasClasificacionOriginales.map((categoriasClasificacion, i) =>\n                                        <div key={categoriasClasificacion.ID}>\n                                            <OpcionTablasClasificar id={\"categoriasClasificacion\"+categoriasClasificacion.ID} texto={\"Nombre: \"+categoriasClasificacion.categoria+\" \"+categoriasClasificacion.tipoCredito} callMethod={this.actualizarSeleccionarCategoriasClasificacion}> </OpcionTablasClasificar>\n                                        </div>\n                                    )}\n                                </div>\n                                \n                                <div className={\"text-center\"} style={{borderBottom: \"solid 4px #cfd8dc\", borderTop: \"solid 4px #cfd8dc\"}}>\n                                    <h3>Criterios de Deterioro</h3>\n                                </div>\n                                <div style={{width: \"100%\", height: \"auto\", overflowY: \"scroll\"}}>\n                                    {this.state.criteriosDeterioroOriginales.map((criterioDeterioro, i) =>\n                                        <div key={criterioDeterioro.ID} style={{width: \"100%\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n                                            <div style={{width: \"90%\", border: \"solid 2px #eceff1\"}}>\n                                                <div style={{display: \"inline-block\", width: \"100%\", padding: \"0%\", borderLeft: \"solid 2px #eceff1\", position: \"relative\"}}>\n                                                    <h4 style={{fontFamily: 'Circular Std Medium', color: \"#71748d\", cursor: \"pointer\", top: \"70%\", position: \"absolute\", top: \"50%\", transform: \"translate(0, -50%)\"}} className={\"alert-heading\"}>{criterioDeterioro.nombreClasPadre}</h4>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    )}\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div style={{width: \"100%\", height: \"6%\", padding: \"1% 0%\"}} className={\"text-center\"}>\n                    <a onClick={this.verificarSeleccionoTablas} className={\"btn btn-primary col-xs-6 col-6\"} style={{color: \"white\", fontSize: \"1.2em\", fontWeight: \"bold\"}}>Iniciar </a>\n                </div>\n                { this.state.mensajeModal.mostrarMensaje ? (\n                    <MessageModal esError={this.state.mensajeModal.esError} esConfirmar={this.state.mensajeModal.esConfirmar} dismissMessage={this.dismissMessageModal} confirmFunction={this.confirmMessageModal} titulo={this.state.mensajeModal.titulo} mensaje={this.state.mensajeModal.mensaje}> </MessageModal>\n                ) : (\n                    <span></span>\n                )}\n            </div>\n        );\n    }\n}\n"],"file":"ClasificarCarteraProceso.js"}