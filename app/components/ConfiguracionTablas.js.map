{"version":3,"sources":["components/ConfiguracionTablas.js"],"names":["campos","nombre","funciones","funcion","texto","ConfiguracionTablas","props","state","tablas","errorCreacionTabla","campo","descripcion","mostrar","errorCreacionCampo","errorModificarCampo","camposTablas","mensajeModal","mostrarMensaje","mensajeConfirmado","esError","esConfirmar","titulo","mensaje","banderaMetodoInit","idElementoSelec","indiceX","indiceY","loadTables","bind","loadFields","insertTable","deleteTableConfirmation","deleteTable","insertField","updateFieldsConfirmation","updateField","deleteFieldsConfirmation","deleteField","dismissTableNewError","dismissFieldNewError","dismissFieldEditError","dismissMessageModal","confirmMessageModal","showSuccesMessage","setState","transaction","sql","Transaction","pool","begin","err","rolledBack","on","aborted","request","Request","query","result","console","log","rollback","commit","recordset","i","length","undefined","ID","id","index","isNaN","concat","nombreTabla","$","val","usuarioTabla","contrasenaTabla","servidorTabla","basedatosTabla","tablaTabla","x","splice","transaction2","request2","rowsAffected","indexTabla","idTabla","campoNombre","tipoCampo","funcionCampo","guardarCampo","is","toString","y","indexCampo","guardar","localeCompare","copiaID","self","setTimeout","showConfigurationComponent","width","map","tabla","j","padding","tablaID","k","tipo","campoSelect","margin","display","deleteVariable","height","fontFamily","color","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport sql from 'mssql';\n\nimport Accordion from './Accordion/Accordion.js';\nimport InlineEdit from './InlineEdit.js';\nimport ErrorMessage from './ErrorMessage.js';\nimport MessageModal from './MessageModal.js';\n\nconst campos = [ {nombre: \"varchar\"}, {nombre: \"bit\"}, {nombre: \"date\"}, {nombre: \"int\"} ];\nlet funciones = [ {funcion: \"idCliente\", texto: \"ID de Cliente\"}, {funcion: \"fecha\", texto: \"fecha\"}, {nombre: \"date\"}, {nombre: \"int\"} ];\n\nexport default class ConfiguracionTablas extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tablas: [],\n            errorCreacionTabla: {campo: \"\", descripcion: \"\", mostrar: false},\n            errorCreacionCampo: {campo: \"\", descripcion: \"\", mostrar: false},\n            errorModificarCampo: {campo: \"\", descripcion: \"\", mostrar: false},\n            camposTablas: [],\n            mensajeModal: {mostrarMensaje: false, mensajeConfirmado: false, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: -1, indiceX: -1, indiceY: -1}\n        }\n        this.loadTables = this.loadTables.bind(this);\n        this.loadFields = this.loadFields.bind(this);\n        this.insertTable = this.insertTable.bind(this);\n        this.deleteTableConfirmation = this.deleteTableConfirmation.bind(this);\n        this.deleteTable = this.deleteTable.bind(this);\n        this.insertField = this.insertField.bind(this);\n        this.updateFieldsConfirmation = this.updateFieldsConfirmation.bind(this);\n        this.updateField = this.updateField.bind(this);\n        this.deleteFieldsConfirmation = this.deleteFieldsConfirmation.bind(this);\n        this.deleteField = this.deleteField.bind(this);\n        this.dismissTableNewError = this.dismissTableNewError.bind(this);\n        this.dismissFieldNewError = this.dismissFieldNewError.bind(this);\n        this.dismissFieldEditError = this.dismissFieldEditError.bind(this);\n        this.dismissMessageModal = this.dismissMessageModal.bind(this);\n        this.confirmMessageModal = this.confirmMessageModal.bind(this);\n        this.showSuccesMessage = this.showSuccesMessage.bind(this);\n    }\n    /* mensajeModal <- de state\n        //mostrarMensaje:bandera para mostrar modal mensaje en pantalla\n        //mensajeConfirmado:retorno del modal mensaje si fue conf\n        //esError:bandera para ver que tipo de modal mensaje mostrar\n        //esConfirmar:bandera para ver que tipo de modal mensaje mostrar\n        //titulo:titulo del modal\n        //mensaje:mensaje del modal\n        //banderaMetodoInit:variable para ver a que metodo ir cuando regresa de confirmar el modal\n        //idElementoSelec:id del elemento que mostro el modal mensaje\n        //indiceX:posicion de la tabla en el arreglo que mostro el modal mensaje\n        //indiceY:posicion del campo en el arreglo de tablas que mostro el modal mensaje\n    */\n\n    componentDidMount() {\n        this.loadTables();\n    }\n\n    loadTables() {\n        this.setState({\n            tablas: [],\n            camposTablas: []\n        });\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Tablas\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        this.setState({\n                            tablas: result.recordset\n                        });\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            if(this.state.camposTablas[i] == undefined || this.state.camposTablas[i] == null) {\n                                this.setState({\n                                    camposTablas: [...this.state.camposTablas, []]\n                                });\n                            }\n                            //arrTemporalCampos[i].concat(this.loadFields(result.recordset[i].ID));\n                            this.loadFields(result.recordset[i].ID, i);\n                        };\n                        /*this.setState({\n                            campos: arrTemporalCampos\n                        });*/\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    loadFields(id, index) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Campos where tablaID = \"+id, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                        return [];\n                    }\n                } else {\n                    transaction.commit(err => {\n                        let campos = [...this.state.camposTablas];\n                        // 2. Make a shallow copy of the item you want to mutate\n                        let campo = {...campos[index]};\n                        // 3. Replace the property you're intested in\n                        if(isNaN(campo.length))\n                            campo = result.recordset;\n                        else {\n                            campo.concat(result.recordset);\n                            //campo: [...this.state.campos, []]\n                        }\n                        // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\n                        campos[index] = campo;\n                        // 5. Set the state to our new copy\n                        this.setState({\n                            camposTablas: campos\n                        });\n                        return result.recordset;\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    insertTable() {\n        let nombreTabla = $(\"#nombreTablaNuevo\").val();\n        let usuarioTabla = $(\"#usuarioTablaNuevo\").val();\n        let contrasenaTabla = $(\"#contrasenaTablaNuevo\").val();\n        let servidorTabla = $(\"#servidorTablaNuevo\").val();\n        let basedatosTabla = $(\"#basedatosTablaNuevo\").val();\n        let tablaTabla = $(\"#tablaTablaNuevo\").val();\n        if(nombreTabla.length > 0 && nombreTabla.length < 71) {\n            if(usuarioTabla.length > 0 && usuarioTabla.length < 51) {\n                if(contrasenaTabla.length > 0 && contrasenaTabla.length < 201) {\n                    if(servidorTabla.length > 0 && servidorTabla.length < 51) {\n                        if(basedatosTabla.length > 0 && basedatosTabla.length < 51) {\n                            if(tablaTabla.length > 0 && tablaTabla.length < 71) {\n                                this.setState({\n                                    errorCreacionTabla: {campo: \"\", descripcion: \"\", mostrar: false}\n                                });\n                                const transaction = new sql.Transaction( this.props.pool );\n                                transaction.begin(err => {\n                                    var rolledBack = false;\n                                    transaction.on('rollback', aborted => {\n                                        rolledBack = true;\n                                    });\n                                    const request = new sql.Request(transaction);\n                                    request.query(\"insert into Tablas (Nombre, Usuario, Contrasena, Servidor, BaseDatos, Tabla) values ('\"+nombreTabla+\"','\"+usuarioTabla+\"','\"+contrasenaTabla+\"','\"+servidorTabla+\"','\"+basedatosTabla+\"','\"+tablaTabla+\"')\", (err, result) => {\n                                        if (err) {\n                                            if (!rolledBack) {\n                                                console.log(err);\n                                                transaction.rollback(err => {\n                                                });\n                                            }\n                                        } else {\n                                            transaction.commit(err => {\n                                                /*this.setState({\n                                                    tablas: this.state.tablas.concat({nombre: nombreTabla,usuario: usuarioTabla,contrasena: contrasenaTabla,servidor: servidorTabla,basedatos: basedatosTabla,tabla: tablaTabla})\n                                                });*/\n                                                this.showSuccesMessage(\"Exito\", \"Tabla creada con éxito.\");\n                                                this.loadTables();\n                                            });\n                                        }\n                                    });\n                                }); // fin transaction\n                            } else {\n                                let campo = \"Nombre de la Tabla\";\n                                let descripcion;\n                                if(tablaTabla.length == 0)\n                                    descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                                else\n                                    descripcion = \"El campo debe tener una longitud menor a 71.\";\n                                this.setState({\n                                    errorCreacionTabla: {campo: campo, descripcion: descripcion, mostrar: true}\n                                });\n                            }\n                        } else {\n                            let campo = \"Base de Datos de la Tabla\";\n                            let descripcion;\n                            if(basedatosTabla.length == 0)\n                                descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                            else\n                                descripcion = \"El campo debe tener una longitud menor a 51.\";\n                            this.setState({\n                                errorCreacionTabla: {campo: campo, descripcion: descripcion, mostrar: true}\n                            });\n                        }\n                    } else {\n                        let campo = \"Servidor de la Tabla\";\n                        let descripcion;\n                        if(servidorTabla.length == 0)\n                            descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                        else\n                            descripcion = \"El campo debe tener una longitud menor a 51.\";\n                        this.setState({\n                            errorCreacionTabla: {campo: campo, descripcion: descripcion, mostrar: true}\n                        });\n                    }\n                } else {\n                    let campo = \"Contraseña de la Tabla\";\n                    let descripcion;\n                    if(contrasenaTabla.length == 0)\n                        descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                    else\n                        descripcion = \"El campo debe tener una longitud menor a 201.\";\n                    this.setState({\n                        errorCreacionTabla: {campo: campo, descripcion: descripcion, mostrar: true}\n                    });\n                }\n            } else {\n                let campo = \"Usuario de la Tabla\";\n                let descripcion;\n                if(usuarioTabla.length == 0)\n                    descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                else\n                    descripcion = \"El campo debe tener una longitud menor a 51.\";\n                this.setState({\n                    errorCreacionTabla: {campo: campo, descripcion: descripcion, mostrar: true}\n                });\n            }\n        } else {\n            let campo = \"Nombre de la Conección\";\n            let descripcion;\n            if(nombreTabla.length == 0)\n                descripcion = \"El campo debe tener una longitud mayor a 0.\";\n            else\n                descripcion = \"El campo debe tener una longitud menor a 71.\";\n            this.setState({\n                errorCreacionTabla: {campo: campo, descripcion: descripcion, mostrar: true}\n            });\n        }\n    }\n\n    deleteTableConfirmation(id, x) {\n        this.setState({\n            mensajeModal: {mostrarMensaje: true, mensajeConfirmado: false, esError: false, esConfirmar: true, titulo: \"Confirmación\", mensaje: \"Esta seguro que desea eliminar la tabla?\", banderaMetodoInit: \"goDelTable\", idElementoSelec: id, indiceX: x, indiceY: -1}\n        });\n    }\n\n    deleteTable(id) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"delete from Tablas where ID = \"+id, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        // 1. Make a shallow copy of the items\n                        let tablas = [...this.state.tablas];\n                        // 3. Replace the property you're intested in\n                        tablas.splice(this.state.mensajeModal.indiceX, 1);\n                        // 5. Set the state to our new copy\n                        //this.loadTables();\n                        this.setState({\n                            tablas: tablas,\n                            mensajeModal: {mostrarMensaje: false, mensajeConfirmado: true, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX, indiceY: this.state.mensajeModal.indiceY}\n                        });\n                        this.showSuccesMessage(\"Exito\", \"Tabla eliminada con éxito.\");\n                        /*this.setState({\n                            tablas: quitando tabla,\n                            mensajeModal: limpiando variables del modal\n                        });*/\n                    });\n                }\n            });\n        }); // fin transaction\n\n        const transaction2 = new sql.Transaction( this.props.pool );\n        transaction2.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request2 = new sql.Request(transaction2);\n            request2.query(\"delete from Campos where tablaID = \"+id, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction2.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction2.commit(err => {\n                        console.log(result.rowsAffected);\n                        if(result.rowsAffected[0] > 0) {\n                            let tablas = [...this.state.camposTablas];\n                            tablas.splice(this.state.mensajeModal.indiceX, 1);\n                            /*let campos = [...tablas[this.state.mensajeModal.indiceX]];\n                            campos.splice(this.state.mensajeModal.indiceY, 1);\n                            tablas[this.state.mensajeModal.indiceX] = campos;*/\n                            //this.loadTables();\n                            this.setState({\n                                camposTablas: tablas,\n                                mensajeModal: {mostrarMensaje: false, mensajeConfirmado: true, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX, indiceY: this.state.mensajeModal.indiceY}\n                            });\n                            /*this.setState({\n                                camposTablas: quitando tabla,\n                                mensajeModal: limpiando variables del modal\n                            });*/\n                        }\n                    });\n                }\n            });\n        }); // fin transaction2\n    }\n\n    insertField(indexTabla) {\n        let idTabla = this.state.tablas[indexTabla].ID;\n        let campoNombre = $(\"#campoNombre\"+indexTabla).val();\n        let tipoCampo = $(\"#campoTipo\"+indexTabla).val();\n        let funcionCampo = $(\"#campoTipo\"+indexTabla).val();\n        let guardarCampo;\n        if ($(\"#campoGuardar\"+indexTabla).is(':checked'))\n            guardarCampo = true;\n        else\n            guardarCampo = false;\n        if(!isNaN(idTabla) && idTabla.toString().length > 0) {\n            if(campoNombre.length > 0 && campoNombre.length < 41) {\n                if(tipoCampo.length > 0 && tipoCampo.length < 26) {\n                    if(guardarCampo != undefined) {\n                        this.setState({\n                            errorCreacionCampo: {campo: \"\", descripcion: \"\", mostrar: false}\n                        });\n                        const transaction = new sql.Transaction( this.props.pool );\n                        transaction.begin(err => {\n                            var rolledBack = false;\n                            transaction.on('rollback', aborted => {\n                                rolledBack = true;\n                            });\n                            const request = new sql.Request(transaction);\n                            request.query(\"insert into Campos (tablaID, nombre, tipo, guardar) values (\"+idTabla+\",'\"+campoNombre+\"','\"+tipoCampo+\"','\"+guardarCampo+\"')\", (err, result) => {\n                                if (err) {\n                                    if (!rolledBack) {\n                                        console.log(err);\n                                        transaction.rollback(err => {\n                                        });\n                                    }\n                                } else {\n                                    transaction.commit(err => {\n                                        this.loadTables();\n                                        this.setState({\n                                            mensajeModal: {mostrarMensaje: true, mensajeConfirmado: this.state.mensajeModal.mostrarMensaje, esError: false, esConfirmar: false, titulo: \"Exito\", mensaje: \"Campo creado con éxito.\", banderaMetodoInit: \"\", idElementoSelec: -1, indiceX: -1, indiceY: -1}\n                                        });\n                                        this.showSuccesMessage(\"Exito\", \"Campo creado con éxito.\");\n                                        /* mensajeModal: {mostrarMensaje: false, mensajeConfirmado: true, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: -1, indiceX: -1, indiceY: -1} */\n                                    });\n                                }\n                            });\n                        }); // fin transaction\n                    } else {\n                        let campo = \"Guardar Campo\";\n                        let descripcion;\n                        if(guardarCampo.length == 0)\n                            descripcion = \"El campo debe ser ingresado.\";\n                        this.setState({\n                            errorCreacionCampo: {campo: campo, descripcion: descripcion, mostrar: true}\n                        });\n                    }\n                } else {\n                    let campo = \"Tipo de Campo\";\n                    let descripcion;\n                    if(tipoCampo.length == 0)\n                        descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                    else\n                        descripcion = \"El campo debe tener una longitud menor a 26.\";\n                    this.setState({\n                        errorCreacionCampo: {campo: campo, descripcion: descripcion, mostrar: true}\n                    });\n                }\n            } else {\n                let campo = \"Nombre de Campo\";\n                let descripcion;\n                if(campoNombre.length == 0)\n                    descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                else\n                    descripcion = \"El campo debe tener una longitud menor a 41.\";\n                this.setState({\n                    errorCreacionCampo: {campo: campo, descripcion: descripcion, mostrar: true}\n                });\n            }\n        } else {\n            let campo = \"ID de tabla/conección\";\n            let descripcion = \"Ingrese un número válido.\";\n            this.setState({\n                errorCreacionCampo: {campo: campo, descripcion: descripcion, mostrar: true}\n            });\n        }\n    }\n\n    updateFieldsConfirmation(id, x, y) {\n        this.setState({\n            mensajeModal: {mostrarMensaje: true, mensajeConfirmado: false, esError: false, esConfirmar: true, titulo: \"Confirmación\", mensaje: \"Esta seguro que desea modificar el campo?\", banderaMetodoInit: \"goUpdField\", idElementoSelec: id, indiceX: x, indiceY: y}\n        });\n    }\n\n    updateField(id, indexTabla, indexCampo) {\n        let idTabla = $(\"#campoTablaID\"+indexTabla+indexCampo).val();\n        let campoNombre;\n        if($(\"#campoNombre\"+indexTabla+indexCampo).length > 0) {\n            campoNombre = $(\"#campoNombre\"+indexTabla+indexCampo).val();\n        } else {\n            campoNombre = this.state.camposTablas[indexTabla][indexCampo].nombre;\n        }\n        let tipoCampo = $(\"#campoTipo\"+indexTabla+indexCampo).val();\n        let guardarCampo;\n        if ($(\"#campoGuardar\"+indexTabla+indexCampo).is(':checked'))\n            guardarCampo = true;\n        else\n            guardarCampo = false;\n        if(!isNaN(idTabla) && idTabla.toString().length > 0) {\n            if(campoNombre.length > 0 && campoNombre.length < 41) {\n                if(tipoCampo.length > 0 && tipoCampo.length < 26) {\n                    if(guardarCampo != undefined) {\n                        this.setState({\n                            errorModificarCampo: {campo: \"\", descripcion: \"\", mostrar: false}\n                        });\n                        const transaction = new sql.Transaction( this.props.pool );\n                        transaction.begin(err => {\n                            var rolledBack = false;\n                            transaction.on('rollback', aborted => {\n                                rolledBack = true;\n                            });\n                            const request = new sql.Request(transaction);\n                            request.query(\"update Campos set tablaID = \"+idTabla+\", nombre = '\"+campoNombre+\"', tipo = '\"+tipoCampo+\"', guardar = '\"+guardarCampo+\"' where ID = \"+id, (err, result) => {\n                                if (err) {\n                                    if (!rolledBack) {\n                                        console.log(err);\n                                        this.setState({\n                                            mensajeModal: {mostrarMensaje: false, mensajeConfirmado: true, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX, indiceY: this.state.mensajeModal.indiceY}\n                                        });\n                                        transaction.rollback(err => {\n                                        });\n                                    }\n                                } else {\n                                    transaction.commit(err => {\n                                        // 1. Make a shallow copy of the items\n                                        let campos = [...this.state.camposTablas];\n                                        // 2. Make a shallow copy of the item you want to mutate\n                                        let campo = [...campos[indexTabla]];\n                                        // 3. Replace the property you're intested in\n                                        campo[indexCampo] = {ID: campo[indexCampo].ID, idTabla: idTabla, campoNombre: campoNombre, tipoCampo: tipoCampo, guardar: guardarCampo};\n                                        // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\n                                        campos[indexTabla] = campo;\n                                        // 5. Set the state to our new copy\n                                        //this.loadTables();\n                                        this.setState({\n                                            camposTablas: campos,\n                                            mensajeModal: {mostrarMensaje: false, mensajeConfirmado: true, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX, indiceY: this.state.mensajeModal.indiceY}\n                                        });\n                                        this.showSuccesMessage(\"Exito\", \"Campo modificado con éxito.\");\n                                    });\n                                }\n                            });\n                        }); // fin transaction\n                    } else {\n                        let campo = \"Guardar Campo\";\n                        let descripcion;\n                        if(guardarCampo.length == 0)\n                            descripcion = \"El campo debe ser ingresado.\";\n                        this.setState({\n                            errorModificarCampo: {campo: campo, descripcion: descripcion, mostrar: true},\n                            mensajeModal: {mostrarMensaje: false, mensajeConfirmado: true, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX, indiceY: this.state.mensajeModal.indiceY}\n                        });\n                        /*this.setState({\n                            mensajeModal: {mostrarMensaje: false, mensajeConfirmado: true, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX, indiceY: this.state.mensajeModal.indiceY}\n                        });*/\n                    }\n                } else {\n                    let campo = \"Tipo de Campo\";\n                    let descripcion;\n                    if(tipoCampo.length == 0)\n                        descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                    else\n                        descripcion = \"El campo debe tener una longitud menor a 26.\";\n                    this.setState({\n                        errorModificarCampo: {campo: campo, descripcion: descripcion, mostrar: true},\n                        mensajeModal: {mostrarMensaje: false, mensajeConfirmado: true, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX, indiceY: this.state.mensajeModal.indiceY}\n                    });\n                    /*this.setState({\n                        mensajeModal: {mostrarMensaje: false, mensajeConfirmado: true, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX, indiceY: this.state.mensajeModal.indiceY}\n                    });*/\n                }\n            } else {\n                let campo = \"Nombre de Campo\";\n                let descripcion;\n                if(campoNombre.length == 0)\n                    descripcion = \"El campo debe tener una longitud mayor a 0.\";\n                else\n                    descripcion = \"El campo debe tener una longitud menor a 41.\";\n                this.setState({\n                    errorModificarCampo: {campo: campo, descripcion: descripcion, mostrar: true},\n                    mensajeModal: {mostrarMensaje: false, mensajeConfirmado: true, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX, indiceY: this.state.mensajeModal.indiceY}\n                });\n                /*this.setState({\n                    mensajeModal: {mostrarMensaje: false, mensajeConfirmado: true, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX, indiceY: this.state.mensajeModal.indiceY}\n                });*/\n            }\n        } else {\n            let campo = \"ID de nombre de tabla/conección\";\n            let descripcion = \"Ingrese un número válido.\";\n            this.setState({\n                errorModificarCampo: {campo: campo, descripcion: descripcion, mostrar: true},\n                mensajeModal: {mostrarMensaje: false, mensajeConfirmado: true, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX, indiceY: this.state.mensajeModal.indiceY}\n            });\n            /*this.setState({\n                mensajeModal: {mostrarMensaje: false, mensajeConfirmado: true, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX, indiceY: this.state.mensajeModal.indiceY}\n            });*/\n        }\n    }\n\n    deleteFieldsConfirmation(id, x, y) {\n        this.setState({\n            mensajeModal: {mostrarMensaje: true, mensajeConfirmado: false, esError: false, esConfirmar: true, titulo: \"Confirmación\", mensaje: \"Esta seguro que desea eliminar el campo?\", banderaMetodoInit: \"goDelField\", idElementoSelec: id, indiceX: x, indiceY: y}\n        });\n    }\n\n    deleteField(id) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"delete from Campos where ID = \"+id, (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        this.setState({\n                            mensajeModal: {mostrarMensaje: false, mensajeConfirmado: true, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX, indiceY: this.state.mensajeModal.indiceY}\n                        });\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        let tablas = [...this.state.camposTablas];\n                        let campos = [...tablas[this.state.mensajeModal.indiceX]];\n                        campos.splice(this.state.mensajeModal.indiceY, 1);\n                        tablas[this.state.mensajeModal.indiceX] = campos;\n                        //this.loadTables();\n                        this.setState({\n                            camposTablas: tablas,\n                            mensajeModal: {mostrarMensaje: false, mensajeConfirmado: true, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX, indiceY: this.state.mensajeModal.indiceY}\n                        });\n                        this.showSuccesMessage(\"Exito\", \"Campo eliminado con éxito.\");\n                        /*this.setState({\n                            camposTablas: quitando tabla,\n                            mensajeModal: limpiando variables del modal\n                        });*/\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n\n    /*======_______====== ======_______======   MENSAJES ERROR DE CAMPOS    ======_______====== ======_______======*/\n    /*======_______======                                                                       ======_______======*/\n    /*======_______======                                                                       ======_______======*/\n    /*======_______====== ======_______====== ====_____====  ====_____====  ======_______====== ======_______======*/\n\n    dismissTableNewError() {\n        this.setState({\n            errorCreacionTabla: {campo: \"\", descripcion: \"\", mostrar: false}\n        });\n    }\n\n    dismissFieldNewError() {\n        this.setState({\n            errorCreacionCampo: {campo: \"\", descripcion: \"\", mostrar: false}\n        });\n    }\n\n    dismissFieldEditError() {\n        this.setState({\n            errorModificarCampo: {campo: \"\", descripcion: \"\", mostrar: false}\n        });\n    }\n\n    /*======_______====== ======_______======   MENSAJES MODAL    ======_______====== ======_______======*/\n    /*======_______======                                                             ======_______======*/\n    /*======_______======                                                             ======_______======*/\n    /*======_______====== ======_______====== ==_____==  ==___==  ======_______====== ======_______======*/\n\n    dismissMessageModal() {\n        this.setState({\n            mensajeModal: {mostrarMensaje: false, mensajeConfirmado: false, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: -1, indiceX: -1, indiceY: -1}\n        });\n    }\n\n    confirmMessageModal() {\n        if(this.state.mensajeModal.banderaMetodoInit.localeCompare(\"goDelTable\") == 0) {\n            let copiaID = this.state.mensajeModal.idElementoSelec;\n            this.deleteTable(copiaID);\n        } else if(this.state.mensajeModal.banderaMetodoInit.localeCompare(\"goDelField\") == 0) {\n            let copiaID = this.state.mensajeModal.idElementoSelec;\n            this.deleteField(copiaID);\n        } else if(this.state.mensajeModal.banderaMetodoInit.localeCompare(\"goUpdField\") == 0) {\n            let copiaID = this.state.mensajeModal.idElementoSelec;\n            this.updateField(copiaID, this.state.mensajeModal.indiceX, this.state.mensajeModal.indiceY);\n        }\n    }\n\n    showSuccesMessage(titulo, mensaje) {\n        this.setState({\n            mensajeModal: {mostrarMensaje: true, mensajeConfirmado: false, esError: false, esConfirmar: false, titulo: titulo, mensaje: mensaje, banderaMetodoInit: \"\", idElementoSelec: this.state.mensajeModal.idElementoSelec, indiceX: this.state.mensajeModal.indiceX, indiceY: this.state.mensajeModal.indiceY}\n        });\n        let self = this;\n        setTimeout(function(){\n            self.setState({\n                mensajeModal: {mostrarMensaje: false, mensajeConfirmado: false, esError: false, esConfirmar: false, titulo: \"\", mensaje: \"\", banderaMetodoInit: \"\", idElementoSelec: self.state.mensajeModal.idElementoSelec, indiceX: self.state.mensajeModal.indiceX, indiceY: self.state.mensajeModal.indiceY}\n            });\n        }, 850);\n    }\n\n    render() {\n        return (\n            <div>\n                <div className={\"row\"}>\n                    <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                        <div className={\"page-header\"}>\n                            <h2 className={\"pageheader-title\"}>Configuraci&oacute;n</h2>\n                            <div className={\"page-breadcrumb\"}>\n                                <nav aria-label=\"breadcrumb\">\n                                    <ol className={\"breadcrumb\"}>\n                                        <li className={\"breadcrumb-item\"} aria-current=\"page\" onClick={this.props.showConfigurationComponent}><a href=\"#\" className={\"breadcrumb-link\"}>Configuraci&oacute;n</a></li>\n                                        <li className={\"breadcrumb-item active\"} aria-current=\"page\">Tablas</li>\n                                    </ol>\n                                </nav>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className={\"row\"} style={{width: \"100%\"}}>\n                    <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"} style={{width: \"100%\"}}>\n                        {this.state.tablas.map((tabla, i) => (\n                            <Accordion key={tabla.ID} showTrash={true} deleteVariable={() => this.deleteTableConfirmation(tabla.ID, i)} allowMultipleOpen>\n                                <div label={tabla.nombre} className={\"border-top\"}>\n\n                                    { this.state.camposTablas[i] != undefined ? (\n                                        <div>\n                                            {this.state.camposTablas[i].map((campo, j) => (\n                                                <div key={campo.ID} className={\"border-top alert alert-primary\"} style={{padding: \"1% 3%\"}}>\n                                                    <div className={\"row\"}>\n                                                        <div className={\"form-group col-xl-6 col-6\"}>\n                                                            <h4 className={\"col-form-label text-center\"}>Tabla</h4>\n                                                            <select id={\"campoTablaID\"+i+j} className={\"form-control\"} defaultValue={campo.tablaID}>\n                                                                <option value=\"\" key=\"0\">Seleccione una tabla...</option>\n                                                                {this.state.tablas.map((tabla, k) =>\n                                                                    <option value={tabla.ID} key={tabla.ID}>{tabla.nombre}</option>\n                                                                )}\n                                                            </select>\n                                                        </div>\n                                                        <div className={\"form-group col-xl-6 col-6\"}>\n                                                            <h4 className={\"col-form-label text-center\"}>Nombre de Campo</h4>\n                                                            <InlineEdit id={\"campoNombre\"+i+j} texto={campo.nombre}> </InlineEdit>\n                                                        </div>\n                                                    </div>\n                                                    <div className={\"row\"}>\n                                                        <div className=\"form-group col-xl-6 col-6\">\n                                                            <h4 className={\"col-form-label text-center\"}>Tipo</h4>\n                                                            <select id={\"campoTipo\"+i+j} className={\"form-control\"} defaultValue={campo.tipo}>\n                                                                <option value=\"\" key=\"0\">Seleccione un tipo de variable...</option>\n                                                                {campos.map((campoSelect, k) =>\n                                                                    <option value={campoSelect.nombre} key={k}>{campoSelect.nombre}</option>\n                                                                )}\n                                                            </select>\n                                                        </div>\n                                                        <div className={\"form-group col-xl-6 col-6\"}>\n                                                            <h4 className={\"col-form-label text-center\"}>Guardar Campo en Resultados</h4>\n                                                            <div className={\"switch-button switch-button-yesno\"} style={{margin:\"0 auto\", display:\"block\"}}>\n                                                                { campo.guardar ? (\n                                                                    <input type=\"checkbox\" defaultChecked name={\"campoGuardar\"+i+j} id={\"campoGuardar\"+i+j}/>\n                                                                ) : (\n                                                                    <input type=\"checkbox\" name={\"campoGuardar\"+i+j} id={\"campoGuardar\"+i+j}/>\n                                                                )}\n                                                                <span><label htmlFor={\"campoGuardar\"+i+j}></label></span>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    { this.state.errorModificarCampo.mostrar ? (\n                                                        <ErrorMessage campo={this.state.errorModificarCampo.campo} descripcion={this.state.errorModificarCampo.descripcion} dismissTableError={this.dismissFieldEditError}> </ErrorMessage>\n                                                    ) : (\n                                                        <span></span>\n                                                    )}\n                                                    <div className={\"row\"}>\n                                                        <button onClick={() => this.updateFieldsConfirmation(campo.ID, i, j)} className={\"btn btn-light btn-block col-xl-5 col-5\"} style={{margin: \"0 auto\", display: \"block\"}}>Guardar</button>\n                                                        <button onClick={() => this.deleteFieldsConfirmation(campo.ID, i, j)} className={\"btn btn-light btn-block col-xl-1 col-1\"} style={{margin: \"0 auto\", display: \"block\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}><img onClick={this.props.deleteVariable} src={\"../assets/trash.png\"} style={{height: \"20px\", width: \"20px\"}}></img></button>\n                                                    </div>\n                                                </div>\n                                            ))}\n                                        </div>\n                                    ) : (\n                                        <span></span>\n                                    )}  \n\n                                    <div className={\"border-top alert alert-primary\"} style={{margin: \"3% 0%\"}}>\n                                        <div className={\"row\"}>\n                                            <div className={\"form-group col-xl-6 col-6\"}>\n                                                <h4 className={\"col-form-label text-center\"}>Tabla</h4>\n                                                <h4 style={{fontFamily: 'Circular Std Medium', color: \"#71748d\"}} className={\"alert-heading\"} >{tabla.nombre}</h4>\n                                            </div>\n                                            <div className={\"form-group col-xl-6 col-6\"}>\n                                                <h4 className={\"col-form-label text-center\"}>Nombre de Campo</h4>\n                                                <input id={\"campoNombre\"+i} type=\"text\" className={\"form-control\"}/>\n                                            </div>\n                                        </div>\n                                        <div className={\"row\"}>\n                                            <div className={\"form-group col-xl-6 col-6\"}>\n                                                <h4 className={\"col-form-label text-center\"}>Tipo</h4>\n                                                <select id={\"campoTipo\"+i} className={\"form-control\"} /*onChange={this.checkFieldType.bind(this)}*/>\n                                                    <option value=\"\" key=\"0\">Seleccione un tipo de variable...</option>\n                                                    {campos.map((campo, k) =>\n                                                        <option value={campo.nombre} key={k}>{campo.nombre}</option>\n                                                    )}\n                                                </select>\n                                            </div>\n                                            <div className={\"form-group col-xl-6 col-6\"}>\n                                                <h4 className={\"col-form-label text-center\"}>Guardar Campo en Resultados</h4>\n                                                <div className={\"switch-button switch-button-yesno\"} style={{margin:\"0 auto\", display:\"block\"}}>\n                                                    <input type=\"checkbox\" defaultChecked name={\"campoGuardar\"+i} id={\"campoGuardar\"+i}/><span>\n                                                    <label htmlFor={\"campoGuardar\"+i}></label></span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        { this.state.errorCreacionCampo.mostrar ? (\n                                            <ErrorMessage campo={this.state.errorCreacionCampo.campo} descripcion={this.state.errorCreacionCampo.descripcion} dismissTableError={this.dismissFieldNewError}> </ErrorMessage>\n                                        ) : (\n                                            <span></span>\n                                        )}\n                                        <div className={\"row\"}>\n                                            <button onClick={() => this.insertField(i)} className={\"btn btn-light btn-block col-xl-10 col-10\"} style={{margin: \"0 auto\", display: \"block\"}}>Crear</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Accordion>\n                        ))}\n                    </div>\n                </div>\n\n                <div className={\"row\"}>\n                    <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                        <div className={\"card influencer-profile-data\"}>\n                            <div className={\"card-body\"}>\n                                <h3>Crear Nueva Tabla</h3>\n                                <div className={\"row border-top\"}>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Nombre de la Conecci&oacute;n</label>\n                                        <input id=\"nombreTablaNuevo\" type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Usuario de la Tabla</label>\n                                        <input id=\"usuarioTablaNuevo\" type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                </div>\n                                <div className={\"row\"}>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Contrase&ntilde;a de la Tabla</label>\n                                        <input id=\"contrasenaTablaNuevo\" type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Servidor de la Tabla</label>\n                                        <input id=\"servidorTablaNuevo\" type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                </div>\n                                <div className={\"row\"}>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Base de Datos de la Tabla</label>\n                                        <input id=\"basedatosTablaNuevo\" type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                    <div className=\"form-group col-xl-6 col-6\">\n                                        <label className={\"col-form-label\"}>Nombre de la Tabla</label>\n                                        <input id=\"tablaTablaNuevo\" type=\"text\" className={\"form-control\"}/>\n                                    </div>\n                                </div>\n                                { this.state.errorCreacionTabla.mostrar ? (\n                                    <ErrorMessage campo={this.state.errorCreacionTabla.campo} descripcion={this.state.errorCreacionTabla.descripcion} dismissTableError={this.dismissTableNewError}> </ErrorMessage>\n                                ) : (\n                                    <span></span>\n                                )}\n                                <div className={\"row\"}>\n                                    <button onClick={this.insertTable} className={\"btn btn-success btn-block col-xl-10 col-10\"} style={{margin: \"0 auto\", display: \"block\"}}>Crear</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                { this.state.mensajeModal.mostrarMensaje ? (\n                    <MessageModal esError={this.state.mensajeModal.esError} esConfirmar={this.state.mensajeModal.esConfirmar} dismissMessage={this.dismissMessageModal} confirmFunction={this.confirmMessageModal} titulo={this.state.mensajeModal.titulo} mensaje={this.state.mensajeModal.mensaje}> </MessageModal>\n                ) : (\n                    <span></span>\n                )}\n            </div>\n        );\n    }\n}\n"],"file":"ConfiguracionTablas.js"}