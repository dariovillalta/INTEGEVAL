{"version":3,"sources":["components/InstruccionVariable.js"],"names":["indiceSeleccionadoReglas","tipoElementoSeleccionadoRegla","campo","conexionesOriginales","camposConexionesOriginales","variablesOriginales","camposVariablesOriginales","InstruccionVariable","props","state","reglas","mostrarOpcionSino","conexiones","camposConexiones","variables","camposVariables","actualizarEstadoSeleccionSinoNuevaRegla","bind","getConections","getFieldsConections","getFieldConections","getVariables","getFieldsVariables","getFieldVariables","retornarIndiceSeleccionadoParaMostrarCampoObjetivo","retornoCampo","mostrar","console","log","setState","transaction","sql","Transaction","pool","begin","err","rolledBack","on","aborted","request","Request","query","result","rollback","commit","temp","i","recordset","length","push","valor","tabla","ID","arregloTemp","nombreTabla","index","array","tablaID","nombreColumnas","COLUMN_NAME","tipo","DATA_TYPE","undefined","$","merge","nombre","variableID","reglaSeleccionada","tipoIndiceSeleccionado","indiceI","indiceJ","localeCompare","tempCopyVariables","tempCopyCampos","esConexionTabla","conexionTablaID","jQuery","extend","navbar","width","campos","asignaciones","retornoOperacion","camposDropdown","valoresDropdown","callbackCrearRegla","goToCreateFormula","actualizarNivelNuevaRegla","retornarEstadoVistaEsCondicion","retornarIndiceSeleccionado","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport sql from 'mssql';\n\nimport OpcionesCrearRegla from './OpcionesCrearRegla.js';\nimport ContenedorReglas from './ContenedorReglas.js';\n\nvar indiceSeleccionadoReglas = -1;\nvar tipoElementoSeleccionadoRegla = '';\nvar campo;\n\nvar conexionesOriginales = [], camposConexionesOriginales = [], variablesOriginales = [], camposVariablesOriginales = [];\nexport default class InstruccionVariable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            reglas: this.props.reglas,\n            mostrarOpcionSino: false,\n            conexiones: [],\n            camposConexiones: [],\n            variables: [],\n            camposVariables: []\n        }\n        this.actualizarEstadoSeleccionSinoNuevaRegla = this.actualizarEstadoSeleccionSinoNuevaRegla.bind(this);\n        this.getConections = this.getConections.bind(this);\n        this.getFieldsConections = this.getFieldsConections.bind(this);\n        this.getFieldConections = this.getFieldConections.bind(this);\n        this.getVariables = this.getVariables.bind(this);\n        this.getFieldsVariables = this.getFieldsVariables.bind(this);\n        this.getFieldVariables = this.getFieldVariables.bind(this);\n        this.retornarIndiceSeleccionadoParaMostrarCampoObjetivo = this.retornarIndiceSeleccionadoParaMostrarCampoObjetivo.bind(this);\n        this.retornoCampo = this.retornoCampo.bind(this);\n    }\n\n    componentDidMount() {\n        this.getConections();\n        this.getVariables();\n    }\n\n    actualizarEstadoSeleccionSinoNuevaRegla (mostrar) {\n        console.log('mostrar');\n        console.log(mostrar);\n        this.setState({\n            mostrarOpcionSino: mostrar\n        });\n    }\n\n    getConections () {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Tablas\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                        return [];\n                    }\n                } else {\n                    transaction.commit(err => {\n                        var temp = [];\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            temp.push({valor: result.recordset[i].tabla, ID: result.recordset[i].ID});\n                        };\n                        /*this.setState({\n                            conexiones: temp\n                        }, this.getFieldsConections );*/\n                        this.setState({\n                            conexiones: temp\n                        });\n                        conexionesOriginales = temp;\n                        this.getFieldsConections();\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    getFieldsConections () {\n        var arregloTemp = [];\n        for (var i = 0; i < conexionesOriginales.length; i++) {\n            this.getFieldConections(conexionesOriginales[i].valor, i, arregloTemp, conexionesOriginales[i].ID);\n        };\n    }\n\n    getFieldConections(nombreTabla, index, array, tablaID) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = '\"+nombreTabla+\"'\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        var nombreColumnas = [];\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            nombreColumnas.push({valor: result.recordset[i].COLUMN_NAME, tipo: result.recordset[i].DATA_TYPE, tablaID: tablaID});\n                        };\n                        if(array[index] == undefined) {\n                            array[index] = [];\n                        }\n                        array[index] = $.merge(array[index], nombreColumnas);\n                        this.setState({\n                            camposConexiones: array\n                        });\n                        camposConexionesOriginales = array;\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    getVariables () {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Variables\", (err, result) => {\n                if (err) {\n                    if (!rolledBack) {\n                        console.log(err);\n                        transaction.rollback(err => {\n                        });\n                        return [];\n                    }\n                } else {\n                    transaction.commit(err => {\n                        var temp = [];\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            temp.push({valor: result.recordset[i].nombre, ID: result.recordset[i].ID});\n                        };\n                        /*this.setState({\n                            variables: temp\n                        }, this.getFieldsVariables );*/\n                        this.setState({\n                            variables: temp\n                        });\n                        variablesOriginales = temp;\n                        this.getFieldsVariables();\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    getFieldsVariables () {\n        var arregloTemp = [];\n        for (var i = 0; i < variablesOriginales.length; i++) {\n            this.getFieldVariables(variablesOriginales[i].ID, i, arregloTemp);\n        };\n    }\n\n    getFieldVariables(variableID, index, array) {\n        if(variableID != undefined) {\n            const transaction = new sql.Transaction( this.props.pool );\n            transaction.begin(err => {\n                var rolledBack = false;\n                transaction.on('rollback', aborted => {\n                    rolledBack = true;\n                });\n                const request = new sql.Request(transaction);\n                request.query(\"select * from VariablesCampos where variableID = \"+variableID, (err, result) => {\n                    if (err) {\n                        if (!rolledBack) {\n                            console.log(err);\n                            transaction.rollback(err => {\n                            });\n                        }\n                    } else {\n                        transaction.commit(err => {\n                            var nombreColumnas = [];\n                            for (var i = 0; i < result.recordset.length; i++) {\n                                nombreColumnas.push({valor: result.recordset[i].nombre, tipo: result.recordset[i].tipo, ID: result.recordset[i].ID, variableID: variableID});\n                            };\n                            if(array[index] == undefined) {\n                                array[index] = [];\n                            }\n                            array[index] = $.merge(array[index], nombreColumnas);\n                            this.setState({\n                                camposVariables: array\n                            });\n                            camposVariablesOriginales = array;\n                            console.log('camposVariablesOriginales');\n                            console.log(camposVariablesOriginales);\n                        });\n                    }\n                });\n            }); // fin transaction\n        }\n    }\n\n    retornarIndiceSeleccionadoParaMostrarCampoObjetivo (reglaSeleccionada, tipoIndiceSeleccionado, indiceI, indiceJ) {\n        console.log('reglaSeleccionada');\n        console.log(reglaSeleccionada);\n        console.log('tipoIndiceSeleccionado');\n        console.log(tipoIndiceSeleccionado);\n        console.log('this.props.reglas');\n        console.log(this.props.reglas);\n        console.log('this.props.reglas.length');\n        console.log(this.props.reglas.length);\n        /*console.log('this.props.reglas[indiceI-1].length');\n        console.log(this.props.reglas[indiceI-1].length);*/\n        if(this.props.reglas.length-1 == indiceI /*&& this.props.reglas[indiceI-1].length == indiceJ*/ && tipoIndiceSeleccionado.localeCompare(\"abajo\") == 0) {\n            //EL CASO CUANDO EL INDICE SELECCIONADO DE REGLAS ES EL ULTIMO Y SELECCIONO tipoIndiceSeleccionado = ABAJO\n            //reset\n            console.log('1');\n            this.setState({\n                conexiones: conexionesOriginales,\n                camposConexiones: camposConexionesOriginales,\n                variables: variablesOriginales,\n                camposVariables: camposVariablesOriginales\n            });\n        } else {\n            console.log('2');\n            //puede ser otra regla, una formula o el cursor de arriba\n            //mostrar campos\n            var tempCopyVariables = [];\n            var tempCopyCampos = [];\n            if(reglaSeleccionada[0].esConexionTabla) {\n                console.log('2.1');\n                for (var i = 0; i < conexionesOriginales.length; i++) {\n                    if(reglaSeleccionada[0].conexionTablaID == conexionesOriginales[i].ID) {\n                        tempCopyVariables = conexionesOriginales[i];\n                        tempCopyCampos = camposConexionesOriginales[i];\n                        break;\n                    }\n                };\n                this.setState({\n                    conexiones: [tempCopyVariables],\n                    camposConexiones: [tempCopyCampos],\n                    variables: [],\n                    camposVariables: []\n                });\n            } else {\n                console.log('2.2');\n                for (var i = 0; i < variablesOriginales.length; i++) {\n                    if(reglaSeleccionada[0].variableID == variablesOriginales[i].ID) {\n                        tempCopyVariables = jQuery.extend(true, {}, variablesOriginales[i]);\n                        tempCopyCampos = jQuery.extend(true, {}, camposVariablesOriginales[i]);\n                        break;\n                    }\n                };\n                this.setState({\n                    conexiones: [],\n                    camposConexiones: [],\n                    variables: [tempCopyVariables],\n                    camposVariables: [[tempCopyCampos]]\n                });\n            }\n        }\n        /*if(tipoIndiceSeleccionado.localeCompare(\"abajo\") == 0) {\n            console.log('1');\n            //reset\n            this.setState({\n                conexiones: conexionesOriginales,\n                camposConexiones: camposConexionesOriginales,\n                variables: variablesOriginales,\n                camposVariables: camposVariablesOriginales\n            });\n        }  else {\n            console.log('2');\n            //puede ser otra regla, una formula o el cursor de arriba\n            //mostrar campos\n            var tempCopyVariables = [];\n            var tempCopyCampos = [];\n            if(reglaSeleccionada.esConexionTabla) {\n                for (var i = 0; i < conexionesOriginales.length; i++) {\n                    if(reglaSeleccionada.conexionTablaID == conexionesOriginales[i].ID) {\n                        tempCopyVariables = conexionesOriginales[i];\n                        tempCopyCampos = camposConexionesOriginales[i];\n                        break;\n                    }\n                };\n                console.log('[tempCopyVariables]')\n                console.log([tempCopyVariables])\n                console.log('[tempCopyCampos]')\n                console.log([tempCopyCampos])\n                console.log('conexionesOriginales')\n                console.log(conexionesOriginales)\n                console.log('camposConexionesOriginales')\n                console.log(camposConexionesOriginales)\n                this.setState({\n                    conexiones: [tempCopyVariables],\n                    camposConexiones: [tempCopyCampos],\n                    variables: [],\n                    camposVariables: []\n                });\n            } else {\n                for (var i = 0; i < variablesOriginales.length; i++) {\n                    if(reglaSeleccionada.variableID == variablesOriginales[i].ID) {\n                        tempCopyVariables = jQuery.extend(true, {}, variablesOriginales[i]);\n                        tempCopyCampos = jQuery.extend(true, {}, camposVariablesOriginales[i]);\n                        break;\n                    }\n                };\n                this.setState({\n                    conexiones: [],\n                    camposConexiones: [],\n                    variables: [tempCopyVariables],\n                    camposVariables: [[tempCopyCampos]]\n                });\n            }\n        }*/\n    }\n\n    retornoCampo (campo) {\n        campo = campo;\n        this.props.retornoCampo(campo);\n    }\n    \n    render() {\n        return (\n            <div>\n                {this.props.navbar}\n                <div className={\"row\"} style={{width: \"100%\"}}>\n                    <div className={\"card\"} style={{width: \"100%\"}}>\n                        <OpcionesCrearRegla pool={this.props.pool} campos={this.props.campos}\n                                            asignaciones={this.props.asignaciones}\n                                            retornoCampo={this.retornoCampo}\n                                            retornoOperacion={this.props.retornoOperacion}\n                                            camposDropdown={this.props.camposDropdown}\n                                            valoresDropdown={this.props.valoresDropdown}\n                                            mostrarOpcionSino={this.state.mostrarOpcionSino}\n                                            callbackCrearRegla={this.props.callbackCrearRegla}\n                                            goToCreateFormula={this.props.goToCreateFormula}\n                                            conexiones={this.state.conexiones}\n                                            camposConexiones={this.state.camposConexiones}\n                                            variables={this.state.variables}\n                                            camposVariables={this.state.camposVariables}\n                                            actualizarNivelNuevaRegla={this.props.actualizarNivelNuevaRegla}\n                                            retornarEstadoVistaEsCondicion={this.props.retornarEstadoVistaEsCondicion}>\n                        </OpcionesCrearRegla>\n                    </div>\n                </div>\n                <hr/>\n                <div className={\"row\"}>\n                    <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                        <div className={\"text-center\"}>\n                            <h2>Lógica para el cálculo</h2>\n                        </div>\n                        <ContenedorReglas reglas={this.state.reglas}\n                                            actualizarEstadoSeleccionSinoNuevaRegla={this.actualizarEstadoSeleccionSinoNuevaRegla}\n                                            retornarIndiceSeleccionadoParaMostrarCampoObjetivo={this.retornarIndiceSeleccionadoParaMostrarCampoObjetivo}\n                                            retornarIndiceSeleccionado={this.props.retornarIndiceSeleccionado}>\n                        </ContenedorReglas>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n"],"file":"InstruccionVariable.js"}