{"version":3,"sources":["components/InstruccionVariable.js"],"names":["indiceSeleccionadoReglas","tipoElementoSeleccionadoRegla","campo","mostrarCrearCondicion","InstruccionVariable","props","state","reglas","mostrarOpcionSino","conexiones","camposConexiones","variablesEscalares","variables","camposVariables","variablesSQL","camposVariablesSQL","excel","camposDeExcel","formas","actualizarEstadoSeleccionSinoNuevaRegla","bind","getConections","getFieldsConections","getFieldConections","loadScalarVariables","loadScalarVariablesFields","getVariables","getFieldsVariables","getFieldVariables","loadVariablesSQL","initLoadVariablesCamposSQL","loadVariablesCamposSQL","loadExcel","initLoadExcelCampos","loadExcelCampos","loadFormas","retornarIndiceSeleccionadoParaMostrarCampoObjetivo","retornoCampo","actualizarEstadoVistaEsCondicion","mostrar","transaction","sql","Transaction","pool","begin","err","rolledBack","on","aborted","request","Request","query","result","console","log","rollback","commit","temp","i","recordset","length","push","valor","tabla","ID","setState","arregloTemp","nombreTabla","index","array","tablaID","nombreColumnas","COLUMN_NAME","tipo","DATA_TYPE","undefined","$","merge","variable","nombre","esFuenteDato","variableID","variableCampoID","esObjeto","esInstruccionSQL","nivel","operacion","localeCompare","excelArchivoID","excelVariableID","formaVariableID","reglaSeleccionada","tipoIndiceSeleccionado","indiceI","indiceJ","mostrarCrearCondicionN","retornarEstadoVistaEsCondicion","navbar","width","campos","asignaciones","retornarValor","retornoOperacion","camposDropdown","valoresDropdown","callbackCrearRegla","goToCreateFormula","actualizarSeleccionFormula","callbackModificarRegla","callbackEliminarRegla","actualizarNivelNuevaRegla","eliminarFormula","esEditarVar","tablaBorrarFormulas","tablaBorrarElementos","condicionFormula","condicionElemento","showSuccesMessage","showMessage","retornarIndiceSeleccionado","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport sql from 'mssql';\n\nimport OpcionesCrearRegla from './OpcionesCrearRegla.js';\nimport ContenedorReglas from './ContenedorReglas.js';\n\nvar indiceSeleccionadoReglas = -1;\nvar tipoElementoSeleccionadoRegla = '';\nvar campo;\n\nvar mostrarCrearCondicion = true;\n\nexport default class InstruccionVariable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            reglas: this.props.reglas,\n            mostrarOpcionSino: false,\n            conexiones: [],\n            camposConexiones: [],\n            variablesEscalares: [],\n            variables: [],\n            camposVariables: [],\n            variablesSQL: [],\n            camposVariablesSQL: [],\n            excel: [],\n            camposDeExcel: [],\n            formas: [],\n            mostrarCrearCondicion: mostrarCrearCondicion\n        }\n        this.actualizarEstadoSeleccionSinoNuevaRegla = this.actualizarEstadoSeleccionSinoNuevaRegla.bind(this);\n        this.getConections = this.getConections.bind(this);\n        this.getFieldsConections = this.getFieldsConections.bind(this);\n        this.getFieldConections = this.getFieldConections.bind(this);\n        this.loadScalarVariables = this.loadScalarVariables.bind(this);\n        this.loadScalarVariablesFields = this.loadScalarVariablesFields.bind(this);\n        this.getVariables = this.getVariables.bind(this);\n        this.getFieldsVariables = this.getFieldsVariables.bind(this);\n        this.getFieldVariables = this.getFieldVariables.bind(this);\n        this.loadVariablesSQL = this.loadVariablesSQL.bind(this);\n        this.initLoadVariablesCamposSQL = this.initLoadVariablesCamposSQL.bind(this);\n        this.loadVariablesCamposSQL = this.loadVariablesCamposSQL.bind(this);\n        this.loadExcel = this.loadExcel.bind(this);\n        this.initLoadExcelCampos = this.initLoadExcelCampos.bind(this);\n        this.loadExcelCampos = this.loadExcelCampos.bind(this);\n        this.loadFormas = this.loadFormas.bind(this);\n        this.retornarIndiceSeleccionadoParaMostrarCampoObjetivo = this.retornarIndiceSeleccionadoParaMostrarCampoObjetivo.bind(this);\n        this.retornoCampo = this.retornoCampo.bind(this);\n        this.actualizarEstadoVistaEsCondicion = this.actualizarEstadoVistaEsCondicion.bind(this);\n    }\n\n    componentDidMount() {\n        this.getConections();\n        this.getVariables();\n        this.loadScalarVariables();\n        this.loadVariablesSQL();\n        this.loadExcel();\n        this.loadFormas();\n    }\n\n    actualizarEstadoSeleccionSinoNuevaRegla (mostrar) {\n        /*this.setState({\n            mostrarOpcionSino: mostrar\n        });*/\n    }\n\n    getConections () {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Tablas\", (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                        return [];\n                    }\n                } else {\n                    transaction.commit(err => {\n                        var temp = [];\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            temp.push({valor: result.recordset[i].tabla, ID: result.recordset[i].ID});\n                        };\n                        /*this.setState({\n                            conexiones: temp\n                        }, this.getFieldsConections );*/\n                        this.setState({\n                            conexiones: temp\n                        }, this.getFieldsConections );\n                        //this.getFieldsConections();\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    getFieldsConections () {\n        var arregloTemp = [];\n        for (var i = 0; i < this.state.conexiones.length; i++) {\n            this.getFieldConections(this.state.conexiones[i].valor, i, arregloTemp, this.state.conexiones[i].ID);\n        };\n    }\n\n    getFieldConections(nombreTabla, index, array, tablaID) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = '\"+nombreTabla+\"'\", (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        var nombreColumnas = [];\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            nombreColumnas.push({valor: result.recordset[i].COLUMN_NAME, tipo: result.recordset[i].DATA_TYPE, tablaID: tablaID});\n                        };\n                        if(array[index] == undefined) {\n                            array[index] = [];\n                        }\n                        array[index] = $.merge(array[index], nombreColumnas);\n                        this.setState({\n                            camposConexiones: array\n                        });\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    loadScalarVariables () {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Variables where esObjeto = 'false'\", (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            this.loadScalarVariablesFields(result.recordset[i]);\n                        };\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    loadScalarVariablesFields (variable) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from VariablesCampos where variableID = \"+variable.ID, (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        var temp = [...this.state.variablesEscalares];\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            temp.push({valor: result.recordset[i].nombre, tipo: result.recordset[i].tipo, esFuenteDato: false, variableID: variable.ID, variableCampoID: result.recordset[i].ID, esObjeto: variable.esObjeto, esInstruccionSQL: false, nivel: result.recordset[i].nivel})\n                        };\n                        this.setState({\n                            variablesEscalares: temp\n                        } );\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    getVariables () {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Variables where esObjeto = 'true'\", (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                        return [];\n                    }\n                } else {\n                    transaction.commit(err => {\n                        var temp = [];\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            temp.push({valor: result.recordset[i].nombre, ID: result.recordset[i].ID});\n                        };\n                        /*this.setState({\n                            variables: temp\n                        }, this.getFieldsVariables );*/\n                        this.setState({\n                            variables: temp\n                        }, this.getFieldsVariables );\n                        //this.getFieldsVariables();\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    getFieldsVariables () {\n        var arregloTemp = [];\n        for (var i = 0; i < this.state.variables.length; i++) {\n            this.getFieldVariables(this.state.variables[i].ID, i, arregloTemp);\n        };\n    }\n\n    getFieldVariables(variableID, index, array) {\n        if(variableID != undefined) {\n            const transaction = new sql.Transaction( this.props.pool );\n            transaction.begin(err => {\n                var rolledBack = false;\n                transaction.on('rollback', aborted => {\n                    rolledBack = true;\n                });\n                const request = new sql.Request(transaction);\n                request.query(\"select * from VariablesCampos where variableID = \"+variableID, (err, result) => {\n                    if (err) {\n                        console.log(err);\n                        if (!rolledBack) {\n                            transaction.rollback(err => {\n                            });\n                        }\n                    } else {\n                        transaction.commit(err => {\n                            var nombreColumnas = [];\n                            for (var i = 0; i < result.recordset.length; i++) {\n                                nombreColumnas.push({valor: result.recordset[i].nombre, tipo: result.recordset[i].tipo, ID: result.recordset[i].ID, variableID: variableID});\n                            };\n                            if(array[index] == undefined) {\n                                array[index] = [];\n                            }\n                            array[index] = $.merge(array[index], nombreColumnas);\n                            this.setState({\n                                camposVariables: array\n                            });\n                        });\n                    }\n                });\n            }); // fin transaction\n        }\n    }\n\n    loadVariablesSQL () {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from Variables where esInstruccionSQL = 'true'\", (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        this.setState({\n                            variablesSQL: result.recordset\n                        }, this.initLoadVariablesCamposSQL );\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    initLoadVariablesCamposSQL() {\n        var arregloTemp = [];\n        for (var i = 0; i < this.state.variablesSQL.length; i++) {\n            this.loadVariablesCamposSQL(this.state.variablesSQL[i], i, arregloTemp);\n        };\n    }\n\n    loadVariablesCamposSQL (variable, index, array) {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from InstruccionSQLCampos where variableID = \"+variable.ID, (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        var nombreColumnas = [];\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            nombreColumnas.push({valor: result.recordset[i].nombre, tipo: result.recordset[i].tipo, esFuenteDato: false, variableID: variable.ID, variableCampoID: result.recordset[i].ID, esObjeto: variable.esObjeto, esInstruccionSQL: true,  nivel: 0});\n                        };\n                        if(array[index] == undefined) {\n                            array[index] = [];\n                        }\n                        array[index] = $.merge(array[index], nombreColumnas);\n                        this.setState({\n                            camposVariablesSQL: array\n                        });\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    loadExcel () {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from ExcelArchivos\", (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        this.setState({\n                            excel: result.recordset\n                        }, this.initLoadExcelCampos );\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n    initLoadExcelCampos () {\n        var arregloTemp = [];\n        for (var i = 0; i < this.state.excel.length; i++) {\n            this.loadExcelCampos(this.state.excel[i], i, arregloTemp);\n        };\n    }\n\n    loadExcelCampos (excel, index, array) {\n         const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from ExcelVariables where excelArchivoID = \"+excel.ID, (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        var nombreColumnas = [];\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            var tipo;\n                            if(result.recordset[i].operacion.localeCompare(\"SUM\") == 0 || result.recordset[i].operacion.localeCompare(\"PROM\") == 0 || result.recordset[i].operacion.localeCompare(\"COUNT\") == 0) {\n                                tipo = 'decimal';\n                            } else if(result.recordset[i].operacion.localeCompare(\"MIN\") == 0 || result.recordset[i].operacion.localeCompare(\"MAX\") == 0 || result.recordset[i].operacion.localeCompare(\"ASIG\") == 0) {\n                                if(result.recordset[i].tipo.localeCompare(\"numero\") == 0)\n                                    tipo = 'decimal';\n                                else\n                                    tipo = result.recordset[i].tipo;\n                            }\n                            nombreColumnas.push({valor: result.recordset[i].nombre, tipo: tipo, esFuenteDato: false, excelArchivoID: excel.ID, excelVariableID: result.recordset[i].ID, esObjeto: false, esInstruccionSQL: false, nivel: 0});\n                        };\n                        if(array[index] == undefined) {\n                            array[index] = [];\n                        }\n                        array[index] = $.merge(array[index], nombreColumnas);\n                        this.setState({\n                            camposDeExcel: array\n                        });\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    loadFormas () {\n        const transaction = new sql.Transaction( this.props.pool );\n        transaction.begin(err => {\n            var rolledBack = false;\n            transaction.on('rollback', aborted => {\n                rolledBack = true;\n            });\n            const request = new sql.Request(transaction);\n            request.query(\"select * from FormasVariables\", (err, result) => {\n                if (err) {\n                    console.log(err);\n                    if (!rolledBack) {\n                        transaction.rollback(err => {\n                        });\n                    }\n                } else {\n                    transaction.commit(err => {\n                        var nombreColumnas = [];\n                        for (var i = 0; i < result.recordset.length; i++) {\n                            nombreColumnas.push({valor: result.recordset[i].nombre, tipo: result.recordset[i].tipo, esFuenteDato: false, formaVariableID: result.recordset[i].ID, esObjeto: false, esInstruccionSQL: false, nivel: 0});\n                        };\n                        this.setState({\n                            formas: nombreColumnas\n                        });\n                    });\n                }\n            });\n        }); // fin transaction\n    }\n\n    retornarIndiceSeleccionadoParaMostrarCampoObjetivo (reglaSeleccionada, tipoIndiceSeleccionado, indiceI, indiceJ) {\n        /*console.log('this.props.reglas[indiceI-1].length');\n        console.log(this.props.reglas[indiceI-1].length);*/\n        /*if(this.props.reglas.length-1 == indiceI*/ /*&& this.props.reglas[indiceI-1].length == indiceJ*/ /*&& tipoIndiceSeleccionado.localeCompare(\"abajo\") == 0) {\n            //EL CASO CUANDO EL INDICE SELECCIONADO DE REGLAS ES EL ULTIMO Y SELECCIONO tipoIndiceSeleccionado = ABAJO\n            //reset\n            console.log('1');\n            this.setState({\n                conexiones: conexionesOriginales,\n                camposConexiones: camposConexionesOriginales,\n                variables: variablesOriginales,\n                camposVariables: camposVariablesOriginales\n            });\n        } else {\n            console.log('2');\n            //puede ser otra regla, una formula o el cursor de arriba\n            //mostrar campos\n            var tempCopyVariables = [];\n            var tempCopyCampos = [];\n            if(reglaSeleccionada[0].esConexionTabla) {\n                console.log('2.1');\n                for (var i = 0; i < conexionesOriginales.length; i++) {\n                    if(reglaSeleccionada[0].conexionTablaID == conexionesOriginales[i].ID) {\n                        tempCopyVariables = conexionesOriginales[i];\n                        tempCopyCampos = camposConexionesOriginales[i];\n                        break;\n                    }\n                };\n                this.setState({\n                    conexiones: [tempCopyVariables],\n                    camposConexiones: [tempCopyCampos],\n                    variables: [],\n                    camposVariables: []\n                });\n            } else {\n                console.log('2.2');\n                for (var i = 0; i < variablesOriginales.length; i++) {\n                    if(reglaSeleccionada[0].variableID == variablesOriginales[i].ID) {\n                        tempCopyVariables = jQuery.extend(true, {}, variablesOriginales[i]);\n                        tempCopyCampos = jQuery.extend(true, {}, camposVariablesOriginales[i]);\n                        break;\n                    }\n                };\n                this.setState({\n                    conexiones: [],\n                    camposConexiones: [],\n                    variables: [tempCopyVariables],\n                    camposVariables: [[tempCopyCampos]]\n                });\n            }\n        }*/\n    }\n\n    retornoCampo (campo) {\n        campo = campo;\n        this.props.retornoCampo(campo);\n    }\n\n    actualizarEstadoVistaEsCondicion (mostrarCrearCondicionN) {\n        mostrarCrearCondicion = mostrarCrearCondicionN;\n        this.setState({\n            mostrarCrearCondicion: mostrarCrearCondicionN\n        });\n        this.props.retornarEstadoVistaEsCondicion(mostrarCrearCondicionN);\n    }\n    \n    render() {\n        return (\n            <div>\n                {this.props.navbar}\n                <div className={\"row\"} style={{width: \"100%\"}}>\n                    <div className={\"card\"} style={{width: \"100%\"}}>\n                        <OpcionesCrearRegla pool={this.props.pool} campos={this.props.campos}\n                                            reglas={this.state.reglas}\n                                            asignaciones={this.props.asignaciones}\n                                            retornarValor={this.props.retornarValor}\n                                            retornoCampo={this.props.retornoCampo}\n                                            retornoOperacion={this.props.retornoOperacion}\n                                            camposDropdown={this.props.camposDropdown}\n                                            valoresDropdown={this.props.valoresDropdown}\n                                            mostrarOpcionSino={this.state.mostrarOpcionSino}\n                                            callbackCrearRegla={this.props.callbackCrearRegla}\n                                            goToCreateFormula={this.props.goToCreateFormula}\n                                            tablas={this.state.conexiones}\n                                            camposTablas={this.state.camposConexiones}\n                                            variablesEscalares={this.state.variablesEscalares}\n                                            objetos={this.state.variables}\n                                            camposDeObjetos={this.state.camposVariables}\n                                            excel={this.state.excel}\n                                            camposDeExcel={this.state.camposDeExcel}\n                                            formas={this.state.formas}\n                                            variablesSQL={this.state.variablesSQL}\n                                            camposVariablesSQL={this.state.camposVariablesSQL}\n                                            mostrarCrearCondicion={this.state.mostrarCrearCondicion}\n                                            actualizarSeleccionFormula={this.props.actualizarSeleccionFormula}\n                                            callbackModificarRegla={this.props.callbackModificarRegla}\n                                            callbackEliminarRegla={this.props.callbackEliminarRegla}\n                                            actualizarNivelNuevaRegla={this.props.actualizarNivelNuevaRegla}\n                                            actualizarEstadoVistaEsCondicion={this.actualizarEstadoVistaEsCondicion}\n                                            eliminarFormula={this.props.eliminarFormula}\n                                            esEditarVar={this.props.esEditarVar}\n                                            tablaBorrarFormulas={this.props.tablaBorrarFormulas}\n                                            tablaBorrarElementos={this.props.tablaBorrarElementos}\n                                            condicionFormula={this.props.condicionFormula}\n                                            condicionElemento={this.props.condicionElemento}\n                                            showSuccesMessage={this.props.showSuccesMessage}\n                                            showMessage={this.props.showMessage}>\n                        </OpcionesCrearRegla>\n                    </div>\n                </div>\n                <hr/>\n                <div className={\"row\"}>\n                    <div className={\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"}>\n                        <div className={\"text-center\"}>\n                            <h2>Lógica para el cálculo</h2>\n                        </div>\n                        <ContenedorReglas reglas={this.state.reglas}\n                                            actualizarEstadoSeleccionSinoNuevaRegla={this.actualizarEstadoSeleccionSinoNuevaRegla}\n                                            retornarIndiceSeleccionadoParaMostrarCampoObjetivo={this.retornarIndiceSeleccionadoParaMostrarCampoObjetivo}\n                                            retornarIndiceSeleccionado={this.props.retornarIndiceSeleccionado}>\n                        </ContenedorReglas>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n"],"file":"InstruccionVariable.js"}