{"version":3,"sources":["libs/js/dashboard-finance.js"],"names":["$","sparkline","type","width","height","lineColor","fillColor","lineWidth","spotColor","undefined","minSpotColor","maxSpotColor","highlightSpotColor","highlightLineColor","resize","ctx","document","getElementById","getContext","myChart","Chart","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","legend","display","position","fontColor","fontFamily","fontSize","scales","xAxes","ticks","yAxes","Morris","Donut","element","value","labelColor","colors","formatter","x","Bar","y","xkey","ykeys","barColors","preUnits","a","c3","generate","bindto","size","color","pattern","columns","types","Service","bar","show","axis","tick","format","d3","series","labelInterpolationFnc","responsiveOptions","chartPadding","labelOffset","labelDirection","Chartist","Pie","Line","fullWidth","right","axisY","chart","setTimeout","load","unload","ids","Area","behaveLikeLine","lineColors","stackBars","on","attr","style"],"mappings":"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","sourcesContent":["/*\nTemplate Name: Influence Admin Template\nAuthor: jitu\nEmail: chauhanjitu3@gmail.com\nFile: js\n*/\n$(function() {\n    \"use strict\";\n    \n    // ============================================================== \n    // Revenue Cards\n    // ============================================================== \n    $(\"#sparkline-revenue\").sparkline([5, 5, 7, 7, 9, 5, 3, 5, 2, 4, 6, 7], {\n        type: 'line',\n        width: '99.5%',\n        height: '100',\n        lineColor: '#5969ff',\n        fillColor: '',\n        lineWidth: 2,\n        spotColor: undefined,\n        minSpotColor: undefined,\n        maxSpotColor: undefined,\n        highlightSpotColor: undefined,\n        highlightLineColor: undefined,\n        resize:true\n    });\n\n\n\n    $(\"#sparkline-revenue2\").sparkline([3, 7, 6, 4, 5, 4, 3, 5, 5, 2, 3, 1], {\n        type: 'line',\n        width: '99.5%',\n        height: '100',\n        lineColor: '#ff407b',\n        fillColor: '',\n        lineWidth: 2,\n        spotColor: undefined,\n        minSpotColor: undefined,\n        maxSpotColor: undefined,\n        highlightSpotColor: undefined,\n        highlightLineColor: undefined,\n        resize:true\n    });\n\n\n\n    $(\"#sparkline-revenue3\").sparkline([5, 3, 4, 6, 5, 7, 9, 4, 3, 5, 6, 1], {\n        type: 'line',\n        width: '99.5%',\n        height: '100',\n        lineColor: '#25d5f2',\n        fillColor: '',\n        lineWidth: 2,\n        spotColor: undefined,\n        minSpotColor: undefined,\n        maxSpotColor: undefined,\n        highlightSpotColor: undefined,\n        highlightLineColor: undefined,\n        resize:true\n    });\n\n\n\n    $(\"#sparkline-revenue4\").sparkline([6, 5, 3, 4, 2, 5, 3, 8, 6, 4, 5, 1], {\n        type: 'line',\n        width: '99.5%',\n        height: '100',\n        lineColor: '#ffc750',\n        fillColor: '',\n        lineWidth: 2,\n        spotColor: undefined,\n        minSpotColor: undefined,\n        maxSpotColor: undefined,\n        highlightSpotColor: undefined,\n        highlightLineColor: undefined,\n        resize:true,\n    });\n    // ============================================================== \n    // Chart Balance Bar\n    // ============================================================== \n    var ctx = document.getElementById(\"chartjs_balance_bar\").getContext('2d');\n    var myChart = new Chart(ctx, {\n        type: 'bar',\n\n        \n        data: {\n            labels: [\"Current\", \"1-30\", \"31-60\", \"61-90\", \"91+\"],\n            datasets: [{\n                label: 'Aged Payables',\n                data: [500, 1000, 1500, 3700, 2500],\n                backgroundColor: \"rgba(89, 105, 255,.8)\",\n                borderColor: \"rgba(89, 105, 255,1)\",\n                borderWidth:2\n\n            }, {\n                label: 'Aged Receiables',\n                data: [1000, 1500, 2500, 3500, 2500],\n                backgroundColor: \"rgba(255, 64, 123,.8)\",\n                borderColor: \"rgba(255, 64, 123,1)\",\n                borderWidth:2\n\n\n            }]\n\n        },\n        options: {\n            legend: {\n                    display: true,\n\n                    position: 'bottom',\n\n                    labels: {\n                        fontColor: '#71748d',\n                        fontFamily:'Circular Std Book',\n                        fontSize: 14,\n                    }\n            },\n\n                scales: {\n                    xAxes: [{\n                ticks: {\n                    fontSize: 14,\n                     fontFamily:'Circular Std Book',\n                     fontColor: '#71748d',\n                }\n            }],\n            yAxes: [{\n                ticks: {\n                    fontSize: 14,\n                     fontFamily:'Circular Std Book',\n                     fontColor: '#71748d',\n                }\n            }]\n                }\n    }\n\n\n\n});\n \n    \n    // ============================================================== \n    // Gross Profit Margin\n    // ============================================================== \n   Morris.Donut({\n                element: 'morris_gross',\n\n                data: [\n                    { value: 94, label: 'Budget' },\n                    { value: 15, label: '' }\n                   \n                ],\n             \n                labelColor: '#5969ff',\n\n                colors: [\n                    '#5969ff',\n                    '#a8b0ff'\n                   \n                ],\n\n                formatter: function(x) { return x + \"%\" },\n                  resize: true\n\n            });\n\n    // ============================================================== \n    // Net Profit Margin\n    // ============================================================== \n    Morris.Donut({\n                element: 'morris_profit',\n\n                data: [\n                    { value: 93, label: 'Profit' },\n                    { value: 15, label: '' }\n                   \n                ],\n             \n                labelColor: '#ff407b',\n\n\n                colors: [\n                    '#ff407b',\n                    '#ffd5e1'\n                   \n                ],\n\n                formatter: function(x) { return x + \"%\" },\n                  resize: true\n\n            });\n\n\n\n\n    // ============================================================== \n    //EBIT Morris\n    // ============================================================== \n\n    Morris.Bar({\n        element: 'ebit_morris',\n        data: [\n            { x: '2011 Q1', y: 20000 },\n            { x: '2011 Q2', y: 24000 },\n            { x: '2011 Q3', y: 33000 },\n            { x: '2011 Q4', y: 40000 },\n            { x: '2012 Q1', y: 25000 },\n            { x: '2012 Q2', y: 70000 },\n            { x: '2012 Q3', y: 52000 },\n            { x: '2012 Q4', y: 39000 },\n            { x: '2013 Q1', y: 80000 }\n        ],\n        xkey: 'x',\n        ykeys: ['y'],\n        labels: ['Y'],\n        barColors: ['#ff407b'],\n        preUnits: [\"$\"]\n\n    });\n\n\n\n\n\n    // ============================================================== \n    //EBIT Morris\n    // ============================================================== \n    var a = c3.generate({\n        bindto: \"#goodservice\",\n        size: { height: 350 },\n        color: { pattern: [\"#5969ff\", \"#ff407b\"] },\n        data: {\n            columns: [\n                [\"Service\", 20000, 25000, 30000, 80000, 10000, 50000],\n                [\"Average\", 25000, 25000, 25000, 25000, 25000, 25000]\n            ],\n            types: { Service: \"bar\" }\n        },\n        bar: {\n\n            width: 45\n\n        },\n        legend: {\n  show: true\n},\n        axis: {\n            y: {\n                tick: {\n                    format: d3.format(\"$\")\n                }\n            }\n\n        },\n\n    });\n\n\n\n    // ============================================================== \n    // Disputed vs Overdue Invoices\n    // ============================================================== \n    var data = {\n        labels: ['Disputed Invoice', 'Overdue Invoice'],\n        series: [20, 15]\n    };\n\n    var options = {\n        labelInterpolationFnc: function(value) {\n            return value[0]\n        }\n    };\n\n    var responsiveOptions = [\n        ['screen and (min-width: 640px)', {\n            chartPadding: 30,\n            labelOffset: 100,\n            labelDirection: 'explode',\n            labelInterpolationFnc: function(value) {\n                return value;\n            }\n        }],\n        ['screen and (min-width: 1024px)', {\n            labelOffset: 80,\n            chartPadding: 20\n        }]\n    ];\n\n    new Chartist.Pie('.ct-chart-invoice', data, options, responsiveOptions);\n\n\n    // ============================================================== \n    // Disputed vs Overdue Invoices\n    // ============================================================== \n\n    new Chartist.Line('.ct-chart-line-invoice', {\n        labels: ['Jan 2018', 'Mar 2018', 'May 2018', 'Jul 2018', 'Sep 2018', 'Oct 2018', 'Nov 2018'],\n        series: [\n            [12, 8, 6, 7, 3, 2.5, 7, 8],\n            [7, 7, 7, 7, 7, 7, 7, 7]\n\n        ]\n    }, {\n        fullWidth: true,\n        chartPadding: {\n            right: 40\n        },\n        axisY: {\n            labelInterpolationFnc: function(value) {\n                return '$'+ (value / 1000);\n            }\n        },\n\n\n    });\n\n\n\n    // ============================================================== \n    // Accounts Payable Age\n    // ============================================================== \n\n    var chart = c3.generate({\n        bindto: \"#account\",\n        color: { pattern: [\"#5969ff\", \"#ff407b\", \"#25d5f2\", \"#ffc750\"] },\n        data: {\n            // iris data from R\n            columns: [\n                ['30 days', 120],\n                ['60 days', 70],\n                ['90 days', 50],\n                 ['90+ Days', 30],\n\n            ],\n            type: 'pie',\n            \n        }\n    });\n\n    setTimeout(function() {\n        chart.load({\n            \n        });\n    }, 1500);\n\n    setTimeout(function() {\n        chart.unload({\n            ids: 'data1'\n        });\n        chart.unload({\n            ids: 'data2'\n        });\n    }, \n    2500\n    );\n\n    // ============================================================== \n    // Working Capital\n    // ============================================================== \n\n    // // Use Morris.Area instead of Morris.Line\n    Morris.Area({\n        element: 'capital',\n        behaveLikeLine: true,\n\n\n\n        data: [\n            { x: '2010 Q1', y: 20000 },\n            { x: '2010 Q2', y: 24000 },\n            { x: '2010 Q3', y: 33000 },\n            { x: '2010 Q4', y: 40000 },\n            { x: '2011 Q1', y: 25000 },\n            { x: '2011 Q2', y: 70000 },\n            { x: '2011 Q3', y: 52000 },\n            { x: '2012 Q1', y: 39000 },\n            { x: '2012 Q2', y: 80000 }\n        ],\n        xkey: 'x',\n        ykeys: ['y'],\n        labels: ['Y'],\n        lineColors: ['#ff407b'],\n        preUnits: [\"$\"]\n\n\n\n    });\n   \n    // ============================================================== \n    // Working Capital\n    // ============================================================== \n    new Chartist.Bar('.ct-chart-inventory', {\n        labels: ['Q1', 'Q2', 'Q3', 'Q4'],\n        series: [\n            [800000, 1200000, 1400000, 1300000],\n            [200000, 400000, 500000, 300000],\n            [100000, 200000, 400000, 600000]\n        ]\n    }, {\n        stackBars: true,\n        axisY: {\n            labelInterpolationFnc: function(value) {\n                return  '$' + (value / 1000);\n            }\n        }\n    }).on('draw', function(data) {\n        if (data.type === 'bar') {\n            data.element.attr({\n                style: 'stroke-width: 30px'\n            });\n        }\n    });\n\n\n\n\n});"],"file":"dashboard-finance.js"}