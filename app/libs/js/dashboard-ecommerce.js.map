{"version":3,"sources":["libs/js/dashboard-ecommerce.js"],"names":["$","Chartist","Bar","labels","series","stackBars","axisY","labelInterpolationFnc","value","on","data","type","element","attr","style","chart","Pie","donut","showLabel","donutWidth","pathLength","_node","getTotalLength","animationDefinition","id","index","dur","from","to","easing","Svg","Easing","easeOutQuint","fill","begin","animate","Line","low","showArea","showPoint","fullWidth","d","path","clone","scale","translate","chartRect","height","stringify","sparkline","width","lineColor","fillColor","lineWidth","spotColor","undefined","minSpotColor","maxSpotColor","highlightSpotColor","highlightLineColor","resize","Morris","Area","behaveLikeLine","x","y","xkey","ykeys","lineColors","c3","generate","bindto","columns","onclick","i","console","log","onmouseover","onmouseout","colors","Men","Women","Accessories","Children","Apperal","label","show"],"mappings":"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","sourcesContent":[" \n    \n    $(function() {\n        \"use strict\";\n        // ============================================================== \n        // Product Sales\n        // ============================================================== \n\n        new Chartist.Bar('.ct-chart-product', {\n            labels: ['Q1', 'Q2', 'Q3', 'Q4'],\n            series: [\n                [800000, 1200000, 1400000, 1300000],\n                [200000, 400000, 500000, 300000],\n                [100000, 200000, 400000, 600000]\n            ]\n        }, {\n            stackBars: true,\n            axisY: {\n                labelInterpolationFnc: function(value) {\n                    return (value / 1000) + 'k';\n                }\n            }\n        }).on('draw', function(data) {\n            if (data.type === 'bar') {\n                data.element.attr({\n                    style: 'stroke-width: 40px'\n                });\n            }\n        });\n    });\n\n\n\n\n    // ============================================================== \n    // Product Category\n    // ============================================================== \n    var chart = new Chartist.Pie('.ct-chart-category', {\n        series: [60, 30, 30],\n        labels: ['Bananas', 'Apples', 'Grapes']\n    }, {\n        donut: true,\n        showLabel: false,\n        donutWidth: 40\n\n    });\n\n\n    chart.on('draw', function(data) {\n        if (data.type === 'slice') {\n            // Get the total path length in order to use for dash array animation\n            var pathLength = data.element._node.getTotalLength();\n\n            // Set a dasharray that matches the path length as prerequisite to animate dashoffset\n            data.element.attr({\n                'stroke-dasharray': pathLength + 'px ' + pathLength + 'px'\n            });\n\n            // Create animation definition while also assigning an ID to the animation for later sync usage\n            var animationDefinition = {\n                'stroke-dashoffset': {\n                    id: 'anim' + data.index,\n                    dur: 1000,\n                    from: -pathLength + 'px',\n                    to: '0px',\n                    easing: Chartist.Svg.Easing.easeOutQuint,\n                    // We need to use `fill: 'freeze'` otherwise our animation will fall back to initial (not visible)\n                    fill: 'freeze'\n                }\n            };\n\n            // If this was not the first slice, we need to time the animation so that it uses the end sync event of the previous animation\n            if (data.index !== 0) {\n                animationDefinition['stroke-dashoffset'].begin = 'anim' + (data.index - 1) + '.end';\n            }\n\n            // We need to set an initial value before the animation starts as we are not in guided mode which would do that for us\n            data.element.attr({\n                'stroke-dashoffset': -pathLength + 'px'\n            });\n\n            // We can't use guided mode as the animations need to rely on setting begin manually\n            // See http://gionkunz.github.io/chartist-js/api-documentation.html#chartistsvg-function-animate\n            data.element.animate(animationDefinition, false);\n        }\n    });\n\n    // For the sake of the example we update the chart every time it's created with a delay of 8 seconds\n    \n\n\n    // ============================================================== \n    // Customer acquisition\n    // ============================================================== \n    var chart = new Chartist.Line('.ct-chart', {\n        labels: ['Mon', 'Tue', 'Wed'],\n        series: [\n            [1, 5, 2, 5],\n            [2, 3, 4, 8]\n\n        ]\n    }, {\n        low: 0,\n        showArea: true,\n        showPoint: false,\n        fullWidth: true\n    });\n\n    chart.on('draw', function(data) {\n        if (data.type === 'line' || data.type === 'area') {\n            data.element.animate({\n                d: {\n                    begin: 2000 * data.index,\n                    dur: 2000,\n                    from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),\n                    to: data.path.clone().stringify(),\n                    easing: Chartist.Svg.Easing.easeOutQuint\n                }\n            });\n        }\n    });\n\n\n\n\n    // ============================================================== \n    // Revenue Cards\n    // ============================================================== \n    $(\"#sparkline-revenue\").sparkline([5, 5, 7, 7, 9, 5, 3, 5, 2, 4, 6, 7], {\n        type: 'line',\n        width: '99.5%',\n        height: '100',\n        lineColor: '#5969ff',\n        fillColor: '#dbdeff',\n        lineWidth: 2,\n        spotColor: undefined,\n        minSpotColor: undefined,\n        maxSpotColor: undefined,\n        highlightSpotColor: undefined,\n        highlightLineColor: undefined,\n        resize: true\n    });\n\n\n\n    $(\"#sparkline-revenue2\").sparkline([3, 7, 6, 4, 5, 4, 3, 5, 5, 2, 3, 1], {\n        type: 'line',\n        width: '99.5%',\n        height: '100',\n        lineColor: '#ff407b',\n        fillColor: '#ffdbe6',\n        lineWidth: 2,\n        spotColor: undefined,\n        minSpotColor: undefined,\n        maxSpotColor: undefined,\n        highlightSpotColor: undefined,\n        highlightLineColor: undefined,\n        resize: true\n    });\n\n\n\n    $(\"#sparkline-revenue3\").sparkline([5, 3, 4, 6, 5, 7, 9, 4, 3, 5, 6, 1], {\n        type: 'line',\n        width: '99.5%',\n        height: '100',\n        lineColor: '#25d5f2',\n        fillColor: '#dffaff',\n        lineWidth: 2,\n        spotColor: undefined,\n        minSpotColor: undefined,\n        maxSpotColor: undefined,\n        highlightSpotColor: undefined,\n        highlightLineColor: undefined,\n        resize: true\n    });\n\n\n\n    $(\"#sparkline-revenue4\").sparkline([6, 5, 3, 4, 2, 5, 3, 8, 6, 4, 5, 1], {\n        type: 'line',\n        width: '99.5%',\n        height: '100',\n        lineColor: '#fec957',\n        fillColor: '#fff2d5',\n        lineWidth: 2,\n        spotColor: undefined,\n        minSpotColor: undefined,\n        maxSpotColor: undefined,\n        highlightSpotColor: undefined,\n        highlightLineColor: undefined,\n        resize: true,\n    });\n\n\n\n\n\n    // ============================================================== \n    // Total Revenue\n    // ============================================================== \n    Morris.Area({\n        element: 'morris_totalrevenue',\n        behaveLikeLine: true,\n        data: [\n            { x: '2016 Q1', y: 0, },\n            { x: '2016 Q2', y: 7500, },\n            { x: '2017 Q3', y: 15000, },\n            { x: '2017 Q4', y: 22500, },\n            { x: '2018 Q5', y: 30000, },\n            { x: '2018 Q6', y: 40000, }\n        ],\n        xkey: 'x',\n        ykeys: ['y'],\n        labels: ['Y'],\n        lineColors: ['#5969ff'],\n        resize: true\n\n    });\n\n\n\n\n    // ============================================================== \n    // Revenue By Categories\n    // ============================================================== \n\n    var chart = c3.generate({\n        bindto: \"#c3chart_category\",\n        data: {\n            columns: [\n                ['Men', 100],\n                ['Women', 80],\n                ['Accessories', 50],\n                ['Children', 40],\n                ['Apperal', 20],\n\n            ],\n            type: 'donut',\n\n            onclick: function(d, i) { console.log(\"onclick\", d, i); },\n            onmouseover: function(d, i) { console.log(\"onmouseover\", d, i); },\n            onmouseout: function(d, i) { console.log(\"onmouseout\", d, i); },\n\n            colors: {\n                Men: '#5969ff',\n                Women: '#ff407b',\n                Accessories: '#25d5f2',\n                Children: '#ffc750',\n                Apperal: '#2ec551',\n\n\n\n            }\n        },\n        donut: {\n            label: {\n                show: false\n            }\n        },\n\n\n\n    });\n\n"],"file":"dashboard-ecommerce.js"}