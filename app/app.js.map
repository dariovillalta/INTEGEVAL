{"version":3,"sources":["app.js"],"names":["config","user","password","server","database","stream","pool","max","min","idleTimeoutMillis","options","useUTC","sql","ConnectionPool","err","console","log","App","state","isLoggedIn","userName","permision","login","bind","logOff","setState","React","Component"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;AACA;AAEA,IAAMA,MAAM,GAAG;AACXC,EAAAA,IAAI,EAAE,IADK;AAEXC,EAAAA,QAAQ,EAAE,cAFC;AAGXC,EAAAA,MAAM,EAAE,WAHG;AAIXC,EAAAA,QAAQ,EAAE,aAJC;AAKXC,EAAAA,MAAM,EAAE,IALG;AAMXC,EAAAA,IAAI,EAAE;AACFC,IAAAA,GAAG,EAAE,EADH;AAEFC,IAAAA,GAAG,EAAE,CAFH;AAGFC,IAAAA,iBAAiB,EAAE;AAHjB,GANK;AAWXC,EAAAA,OAAO,EAAE;AACLC,IAAAA,MAAM,EAAE;AADH;AAXE,CAAf;AAgBA,IAAML,IAAI,GAAG,IAAIM,kBAAIC,cAAR,CAAuBb,MAAvB,EAA+B,UAAAc,GAAG,EAAI;AAC/C,MAAGA,GAAH,EAAQ;AACJC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AACA;;;;;;;;AAQH,GAXD,MAWO;AACHD,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH;AACJ,CAfY,CAAb;;IAiBqBC,G;;;;;AACjB,iBAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,KADH;AAETC,MAAAA,QAAQ,EAAE,IAFD;AAGTC,MAAAA,SAAS,EAAE,EAHF,CAKb;;AALa,KAAb;AAMA,UAAKC,KAAL,GAAa,MAAKA,KAAL,CAAWC,IAAX,+BAAb;AACA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYD,IAAZ,+BAAd;AATU;AAUb;;;;0BAEKH,Q,EAAUC,S,EAAW;AACvB,WAAKI,QAAL,CAAc;AACVN,QAAAA,UAAU,EAAE,IADF;AAEVC,QAAAA,QAAQ,EAAE,IAFA;AAGVC,QAAAA,SAAS,EAAEA;AAHD,OAAd;AAKH;;;6BAES;AACN,WAAKI,QAAL,CAAc;AACVN,QAAAA,UAAU,EAAE;AADF,OAAd;AAGH;;;6BAEQ;AACL,aACI,6CACM,KAAKD,KAAL,CAAWC,UAAX,GACE,gCAAC,kBAAD;AAAQ,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,QAA7B;AAAuC,QAAA,SAAS,EAAE,KAAKF,KAAL,CAAWG,SAA7D;AAAwE,QAAA,MAAM,EAAE,KAAKG,MAArF;AAA6F,QAAA,IAAI,EAAElB;AAAnG,aADF,GAGE,gCAAC,qBAAD;AAAW,QAAA,KAAK,EAAE,KAAKgB,KAAvB;AAA8B,QAAA,IAAI,EAAEhB;AAApC,aAJR,CADJ;AASH;;;;EArC4BoB,kBAAMC,S","sourcesContent":["import React from 'react';\nimport sql from 'mssql';\n\nimport Layout from './components/Layout.js';\nimport LoginPage from './components/LoginPage.js';\n//import odbc from 'odbc';\n\nconst config = {\n    user: 'SA',\n    password: 'password111!',\n    server: 'localhost',\n    database: 'TOLOC_INTEG',\n    stream: true,\n    pool: {\n        max: 40,\n        min: 0,\n        idleTimeoutMillis: 60000\n    },\n    options: {\n        useUTC: false\n    }\n}\n\nconst pool = new sql.ConnectionPool(config, err => {\n    if(err) {\n        console.log(err);\n        console.log(\"Error en conección con la base de datos\");\n        /*$(\"body\").overhang({\n            type: \"error\",\n            primary: \"#f84a1d\",\n            accent: \"#d94e2a\",\n            message: \"Error en conección con la base de datos.\",\n            overlay: true,\n            closeConfirm: true\n        });*/\n    } else {\n        console.log('pool loaded');\n    }\n});\n\nexport default class App extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            isLoggedIn: false,\n            userName: null,\n            permision: \"\"\n        }\n        // connection2 is now an open Connection\n        this.login = this.login.bind(this);\n        this.logOff = this.logOff.bind(this);\n    }\n\n    login(userName, permision) {\n        this.setState({\n            isLoggedIn: true,\n            userName: null,\n            permision: permision\n        });\n    }\n\n    logOff () {\n        this.setState({\n            isLoggedIn: false\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                { this.state.isLoggedIn ? (\n                    <Layout userName={this.state.userName} permision={this.state.permision} logOff={this.logOff} pool={pool}> </Layout>\n                ) : (\n                    <LoginPage login={this.login} pool={pool}> </LoginPage>\n                )}\n            </div>\n        );\n    }\n}\n"],"file":"app.js"}